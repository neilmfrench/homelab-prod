apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-acceleration: disabled
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-endpoint-health-checking: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUzdFVnNzYmF6RjQvMU1ncVVERXdBREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01qRXdNalUxV2hjTk1qY3dNekkzTWpFdwpNalUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGxHQXFXZnc0V0tYc2RsUG9DUlQ3Rmw4K000MExyWXpwUGMxWi80VWw1VURwRDU3eTUKZTVLK2haT0tzeGJZQWlCc09kNjJvWWVjdUVyVXdqaURpN0FONERxeFk1dVQ0YkFjN1FEVTk0ZitidlhTd1R0TApWVU1XMkZvYTQxVnVXaGFDK1BHcEh3OGQxYmFjeU9EeWlhTERMeEZHMnBqbDYrdU0wNkwraG5xNGk0RXhxdXZMClpWUEZVRWE5ellBd1Y3RlQ2L01ISXJ1cUhtM2ZYYmVXRVp6MGNsL0hBYlI3NThWTWdhWjNWRytGM2ZzeElDKzAKWTVFNFd6RTl1N1B3bndJb3JLd0FiMWI0M1NwazJ5bzZQYkxBRGQ1b2hHZkFPNjNjSmhWQU4wZXFhSFpmMVZnUQpBbTdsakVkZzJNQ1Mwd21wbVp1NnVsd1VPWkMrTW1PMzVSVFZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuWHdrdFUvUy9GR3B5cDFtaDE4cUI4VUdaczh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIcVp3WGE4MiszWFBqM1NkMU44bi9zay9qRWRDc3ltZk0rbmN1VWlWY1J3bHFrMUtIdGFzelNKCmdJYS9ldTFQazkwNzRLajU1MmhGalhQdVk0YURkeTliVHhNTGxibm44QjFtM3J1SU5HVGRlV01wd2dIaDNDNGUKZ0s0WVpvMXl4Ynh3YkRxZG5EUDBaekJTU3ZSaFI3ZDd2OERoRStPOSttOXRZcUgzaGNSUHp3ZDYrQVJIcmNacQpvc2l6d0grK0JUVGgwMFhJM2VJNmhBeGQxWW8vNHlrTGQ4VDBkOUk0c25xZFFKTk54bGtGUFNrSDhRMlA2TDVYCjRIOFdJTGRMekQ2U29YRzQyQUcvWnBpMisxb3dyZ0txNEd6Z2xHMzZ5MEFMd3NweUV3SWl1VERZVlZtWkNaK0QKcWJnV1RRVXlUb1hoSmtldjNTRkpmRnlnUmt6SjJ2ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNVJnS2xuOE9GaWw3SFpUNkFrVSt4WmZQak9OQzYyTTZUM05XZitGSmVWQTZRK2U4CnVYdVN2b1dUaXJNVzJBSWdiRG5ldHFHSG5MaEsxTUk0ZzR1d0RlQTZzV09iaytHd0hPMEExUGVIL203MTBzRTcKUzFWREZ0aGFHdU5WYmxvV2d2anhxUjhQSGRXMm5Namc4b21pd3k4UlJ0cVk1ZXZyak5PaS9vWjZ1SXVCTWFycgp5MlZUeFZCR3ZjMkFNRmV4VSt2ekJ5SzdxaDV0MzEyM2xoR2M5SEpmeHdHMGUrZkZUSUdtZDFSdmhkMzdNU0F2CnRHT1JPRnN4UGJ1ejhKOENLS3lzQUc5VytOMHFaTnNxT2oyeXdBM2VhSVJud0R1dDNDWVZRRGRIcW1oMlg5VlkKRUFKdTVZeEhZTmpBa3RNSnFabWJ1cnBjRkRtUXZqSmp0K1VVMVFJREFRQUJBb0lCQUZadnpyYmZzMW5yUnJkdgptVEM0SGFvQjBGNXc5TFBKV1p2V2dhRjRSL2VNcko4b1ZVMktjV0NQRjQ3eWFVRVE5RmpCTU9XcFpuaGNGR2ZYCjYraStFS3Y3bVVtS3NvMkdUcU5yVExBTndQTGZ2TUpMQStzMWZUMm1YY0RkVzBOcW5DbkljYTJFdVhoaFJTZzgKcHByOEVUd2hpeHczcUE3QUI3eTNzVHpsVW5KRUFiakJiQzZ6cmtnUkxzNU5GeDlyV1NISUFnL2l3emRaVjhyOQptbDJsc3dyUkJHaFBRUEQvSTRrWnJGQ29qbjRxSXBRQitDdGhaUTVObXdVNzdxVjR4bGUrQ2ZRODFETU5QU0tqClM5Qlk5bFR1Vm16K2FtOUhoR09MRnV6YTJwdmdqK25LbFVYeksrZTZGK0pGTitRcGRxdW14OGNoaE9DUnkyNWwKV1NSakFrRUNnWUVBOGRDTVJJbUd5SndpWFp2aXhMcDJvYlFBOTVsdkNFelcvc01zemRMQ2V0N2ZzL056VGlrdApJRjBmK3hZWHZXOVpKL0ZKblpjN084RzBSTUYzZ1Q0c1pFcWJNVzA5ditVSkRZYnJTdGNYM01xY0l5RFpzRk9oClJrWXNtU1llWDFXNHZHUVliZ2Z4cWczQzZ3NFFnL0N6cmFIU1pQbU8vS0t0djVkdzd5SUhpS1VDZ1lFQThvaDEKdVNLLzIzamNxK3VUSnNFVzF1WWhnTUdhM05QRGszZHkrNDZuSGRyWmk3L09YbDZTZUFxdzB4bmY4NUJHVGtYegpmcy9xL01ydDdwbGVqRHlJVEVKaXE2MDVPZWEwbGZVaVBFeWZNcGF5VDJzYlpReFIrbVE3eCtoWHdaSmVRQWZ6CkRMVnU0OW56UzJjWUJBekdwLy82Ui9Pd2MyOHpETVhOTmY1YmRIRUNnWUVBb29MUmdjNGJNdjhiYVdXMlJSZzcKV2ZrckhUdVVqek4wMmNvNWRpbktZZUVlM2tVaW5NaTNkeVNldFpQbmFIeElvcnRhQ2ZyMDUvZ0tPcHI2d1hVVApTR09MWVBCVnEzMDFWRTMwRzF2cXdZdTQyekxjbWMvYWR1djZWUUoxTHdUaEhscjJ3QnUrb2RhVnhIcXpScmloClNIT1VmaC9wcElkLzFWN2xteEIzbDdFQ2dZQTQwaE9Tamp1WXRaWXRpUUZ1b09veTZyT0tzTkVSVDJPUWx2bVAKU2ZxSkdnN0JtT3hHVzYzQkJmQXJaUEo4NDU0MUZGcFpxV2lLVlJpdFA2MVErWldOR0RoNXRCbW1JUkRKMlNadQpMaDFXQXN3L292NUdERDdnaEw4a3RLQnFyMW41Y21OVTVPVFg2T1lCRW1Rai9zSkQ5Y3F6Tkxwd01Pc3E0T1NVCjg4U0ZZUUtCZ0NPWkNIV2JFVXBZL3NTZ09aeEljd2hubmFUU3ZOUm5uSzhnNnlSdjFnRStOSmFjaitGRHhsazMKb1M3ck5hZzNwVFVjQ2F0bGdTdFk4RDkvRFB2WDJkdEhGY1ZxTDNHc204bFZBcDBMSE1tdElCUHRZWlUyUTljeQpNem9HaWZhZ1NpaXpMSDE1ZVl4bHEzZjRGZWRjdlVQQmZVcWZIR3RGVHo2bWVtREZuWGhtCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUzdFVnNzYmF6RjQvMU1ncVVERXdBREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01qRXdNalUxV2hjTk1qY3dNekkzTWpFdwpNalUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGxHQXFXZnc0V0tYc2RsUG9DUlQ3Rmw4K000MExyWXpwUGMxWi80VWw1VURwRDU3eTUKZTVLK2haT0tzeGJZQWlCc09kNjJvWWVjdUVyVXdqaURpN0FONERxeFk1dVQ0YkFjN1FEVTk0ZitidlhTd1R0TApWVU1XMkZvYTQxVnVXaGFDK1BHcEh3OGQxYmFjeU9EeWlhTERMeEZHMnBqbDYrdU0wNkwraG5xNGk0RXhxdXZMClpWUEZVRWE5ellBd1Y3RlQ2L01ISXJ1cUhtM2ZYYmVXRVp6MGNsL0hBYlI3NThWTWdhWjNWRytGM2ZzeElDKzAKWTVFNFd6RTl1N1B3bndJb3JLd0FiMWI0M1NwazJ5bzZQYkxBRGQ1b2hHZkFPNjNjSmhWQU4wZXFhSFpmMVZnUQpBbTdsakVkZzJNQ1Mwd21wbVp1NnVsd1VPWkMrTW1PMzVSVFZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuWHdrdFUvUy9GR3B5cDFtaDE4cUI4VUdaczh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIcVp3WGE4MiszWFBqM1NkMU44bi9zay9qRWRDc3ltZk0rbmN1VWlWY1J3bHFrMUtIdGFzelNKCmdJYS9ldTFQazkwNzRLajU1MmhGalhQdVk0YURkeTliVHhNTGxibm44QjFtM3J1SU5HVGRlV01wd2dIaDNDNGUKZ0s0WVpvMXl4Ynh3YkRxZG5EUDBaekJTU3ZSaFI3ZDd2OERoRStPOSttOXRZcUgzaGNSUHp3ZDYrQVJIcmNacQpvc2l6d0grK0JUVGgwMFhJM2VJNmhBeGQxWW8vNHlrTGQ4VDBkOUk0c25xZFFKTk54bGtGUFNrSDhRMlA2TDVYCjRIOFdJTGRMekQ2U29YRzQyQUcvWnBpMisxb3dyZ0txNEd6Z2xHMzZ5MEFMd3NweUV3SWl1VERZVlZtWkNaK0QKcWJnV1RRVXlUb1hoSmtldjNTRkpmRnlnUmt6SjJ2ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSnNPR0tNb0p4dXZtTG10TTN2NnQvekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01qRXdNalUxV2hjTk1qY3dNekkzTWpFdwpNalUxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEam9pMnRCR2xZNzNBK1JrWWZkNnNhWEh5ZHBPNW0KNHM1dUJZN2s0aWZBdENGRUkxYWpIVUVVdHVqdjNTcncyM1FzS2tDVnhUbXFNZlZIaEhXS3BBMlJtdmNDaWloQQpKUFRnTUFmQ3NwZ1JvVUhPVElpUXMvU1JId2xSVy9VWW93WGp0WkpHWWF5TzBLTFVDZU1uR0IrVW5tR0RZWnIwClZDMHFoY284dnZXTW1BNzlva2hLSGF3OEExeWRUNldtVXNuRytoY2NZdnIxMFNreFo1eGIvUzhBamU4SFlTSHgKRjRZYzc4K2ZpL1BJQkduYnAyOWc2d3RJZHZXbU8yM1doSFJtY2l6eDR1VjAyaS9yRTlmRmJHTWtLZDZ1NGRYVQpXYkxyZktEencyWHY1Y1ZYR2FrcldrZit2cWs2VjVSY0t4bnQvUUd0c3Bhb3NyVlE1VXExUENTQkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZKMThKTFZQMHZ4UnFjcWRab2RmS2dmRgpCbWJQTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFiVU5rSnFsMGY0Y2FnN3BqTmRpMkw5WmxHVEYwcjNtdjgrYlRIU3pmeWVBeU9KWVoKNittNFZkRUJ0cFhmakYrWnk4bytoeW1WREViYnY1ZTNEeU1PTTlMYys4bWNia0lvcS9tb2o3SlBVbDJiQ082RQp0VEpyTGs1NmdpejhQTzhXTmtFL0x3a2gwdkRjS1JiRHVLeHBaSzVOUkF6UGlReVMwNFJVSTZZREFRdVljKzFsCmUxZEM2V2JtQk1ibTNzaGw0VElxZjdEZElna0F0Y1g0ZDIrSEp6NkdUOW11ZjhJQ05GSDhHLzkvSkY0eDU3TWkKRmNwSHpodTEwaDl0emlST0VLTGV0UkpZV0dEbTNJMG10V0VhRWRkSitjb0VZYmtEMTFQMFUrV2ZhMzVwNHlGMQpZUnprZUVGQ0VVY3hsbXRGQUF0OUF3MklUUjJ0UDRGWEZ3ZW04QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNDZJdHJRUnBXTzl3UGtaR0gzZXJHbHg4bmFUdVp1TE9iZ1dPNU9JbndMUWhSQ05XCm94MUJGTGJvNzkwcThOdDBMQ3BBbGNVNXFqSDFSNFIxaXFRTmtacjNBb29vUUNUMDREQUh3cktZRWFGQnpreUkKa0xQMGtSOEpVVnYxR0tNRjQ3V1NSbUdzanRDaTFBbmpKeGdmbEo1aGcyR2E5RlF0S29YS1BMNzFqSmdPL2FKSQpTaDJzUEFOY25VK2xwbExKeHZvWEhHTDY5ZEVwTVdlY1cvMHZBSTN2QjJFaDhSZUdITy9QbjR2enlBUnAyNmR2CllPc0xTSGIxcGp0dDFvUjBabklzOGVMbGROb3Y2eFBYeFd4akpDbmVydUhWMUZteTYzeWc4OE5sNytYRlZ4bXAKSzFwSC9yNnBPbGVVWENzWjdmMEJyYktXcUxLMVVPVkt0VHdrZ1FJREFRQUJBb0lCQUNsV0lROUROdEkwb09CZQpLSXU4VW5EMkRKY2dCVDdmdnZiUndaSWswMjAyQ0xoejVsNjJpRVAzdHpNZnFaV1ZkSEkwdGdlOGllMHpKMFIyCmRGWFoxckR6UUJuUTl1QTNGZFRFUkJTQ0ZBVlhrRGlqUTBWcnVHVEdDdzRnTWREb2djQkpENmdDUXJDb2lIa1MKMXBJWjJscEZySldNR3ZSMWVNSTVDM0dlaDc2ZzRxTHp0OUdHQzduTzZhd1FxSldEKzhrb2ZxQ05OUzd4bWdHbApOTDMwaTBlQmcwY0o1SDY2K2czakVGYTNZVWs3TjdQNSt2a214QUF6V2RLY0RKMWw2QktzVTVXUnNkaDJYZTM0CnlzSHFiWHgvVjgwTE9hczYwRGxub1lBTmUyb1ZFcmZZZzJ2ZEZoZG94aVppaGJqWkNVQlZ3d3JwQWlQRkI4ZS8KQU41YnRZVUNnWUVBOHZrRVRRRm1hQjExQWRUNmVkQUNnK01sTkd1WnZPc21aWkF4NUtybVV3LzA3VlJDeWxacAp0cnBQSlhvb0pUcjQySWE5UkNyeGpRYkExSlN0QUw1dTBHRXVKYnNqZjgya1ZsRHRWdS91TDVQRTBZYlpDaVFlCkFMTTFobURRUU43S1R6SVp0OXNtSm9FVWljUzZDSFlRdDVMdW5ialRyL1BwaDhGR0dpc1ArbHNDZ1lFQTc5YWUKa1RzSnRpdzVJOWd0MWVYVkIvcVZmM0JTWVI5ZGRKZi9wdzk0OXYvVThMekFiNlBQbGpEa1lESlliWFdtOFF6eQpSNG1vUGw3TzJEWmROR0hLYzBsQXRjRTA1dEoyeUYxZDY3KzRWaUl0VlA1L0Z2ZG03RkRZb0Z0Q090M2JxaTVQCkdMd0d2bmRNM0k2MFBQSTloOXpQSG52VUR3V3ZMbHlhVmlJQk8xTUNnWUEyL0JGMEY4QUVDYjZENXAyMFdWVm8KWVV2M0crNlRxU2RzVG9Cci9oelhhVUlGUDA5S0dOb2RodllJUmllMW5TM1pXa3lVazU5TVNkM3pmWjNWRUVObApsc2hwczNycUhqQjFkQ1R4eXFROVVoUjFVaTNsdEp5eGpkeXNCMWE1aDNHREVKUnZYZ0c1THZibDRvWXpDZnpvCmZqRFBzcGI5TjVaK3FVZGkvcUhFQndLQmdGdEk1TEdDTndBUGRQQWZwOUp4MTlOaG5PVVVhMFpzR2JYMjVHZEIKakZqMnBxVzZNY1JNSlFhVk5WY24wbUJYRjJOSCtpOGdSZGozWE9NT1RndFI3U3hVQlQwb2ZHb2VVUGVTRWQxWQo2MkJkUWNQSDJiZDBFc2gvUFBSTHg3bUFGOHQrTkx6RlZBdktmSWEyQ2dQb2IyTDJ1QjV5SXhSVXBZaVAxbTVTCkl3WGhBb0dBSmpuOWJ0MDdUZy9IQjd6ektCaDVxMFBTMFVKajZ0VVcxWWsyMkxWVnlSc0NIV0ZJb0VGdnpld1QKeU1vcVpiMEFMMy9Kdm45WXVyVkNDcTIyZ3pIRytxQWVYcGN4dEo1b293RUY2em9mc3A4cHJHKzZWZUlLTHgzcApxbjhpeFF2SFVkZ0lSY1V3RjJvK1FCRzJkdUtZQ042Z0ljaDYzTjU2SllhT09MN3JKdUE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUzdFVnNzYmF6RjQvMU1ncVVERXdBREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01qRXdNalUxV2hjTk1qY3dNekkzTWpFdwpNalUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGxHQXFXZnc0V0tYc2RsUG9DUlQ3Rmw4K000MExyWXpwUGMxWi80VWw1VURwRDU3eTUKZTVLK2haT0tzeGJZQWlCc09kNjJvWWVjdUVyVXdqaURpN0FONERxeFk1dVQ0YkFjN1FEVTk0ZitidlhTd1R0TApWVU1XMkZvYTQxVnVXaGFDK1BHcEh3OGQxYmFjeU9EeWlhTERMeEZHMnBqbDYrdU0wNkwraG5xNGk0RXhxdXZMClpWUEZVRWE5ellBd1Y3RlQ2L01ISXJ1cUhtM2ZYYmVXRVp6MGNsL0hBYlI3NThWTWdhWjNWRytGM2ZzeElDKzAKWTVFNFd6RTl1N1B3bndJb3JLd0FiMWI0M1NwazJ5bzZQYkxBRGQ1b2hHZkFPNjNjSmhWQU4wZXFhSFpmMVZnUQpBbTdsakVkZzJNQ1Mwd21wbVp1NnVsd1VPWkMrTW1PMzVSVFZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVuWHdrdFUvUy9GR3B5cDFtaDE4cUI4VUdaczh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIcVp3WGE4MiszWFBqM1NkMU44bi9zay9qRWRDc3ltZk0rbmN1VWlWY1J3bHFrMUtIdGFzelNKCmdJYS9ldTFQazkwNzRLajU1MmhGalhQdVk0YURkeTliVHhNTGxibm44QjFtM3J1SU5HVGRlV01wd2dIaDNDNGUKZ0s0WVpvMXl4Ynh3YkRxZG5EUDBaekJTU3ZSaFI3ZDd2OERoRStPOSttOXRZcUgzaGNSUHp3ZDYrQVJIcmNacQpvc2l6d0grK0JUVGgwMFhJM2VJNmhBeGQxWW8vNHlrTGQ4VDBkOUk0c25xZFFKTk54bGtGUFNrSDhRMlA2TDVYCjRIOFdJTGRMekQ2U29YRzQyQUcvWnBpMisxb3dyZ0txNEd6Z2xHMzZ5MEFMd3NweUV3SWl1VERZVlZtWkNaK0QKcWJnV1RRVXlUb1hoSmtldjNTRkpmRnlnUmt6SjJ2ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYakNDQWthZ0F3SUJBZ0lRQ2NGdU1mcmkzS054MHFTOGxZdnhBVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01qRXdNalUxV2hjTk1qY3dNekkzTWpFdwpNalUxV2pBdU1Td3dLZ1lEVlFRRERDTXFMbk4wWVdkcGJtY3RjbkJwTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNalB4eGFKbWFQWkZpQ0sKQy9JYjJPUlVvaXpNT3RubUZVTlJhM08wZ1JiTmNsTFBKS0JEMFJHTzJvd0p1RFZnWFUyWjhSY0loQ284OEU1KwpGSUxpeWl6Mk9ucFBpLzh2Z0NvOWJJVjZsaExrN0FQZ2FnVkU1d2dacDFaR2xvWm9KM0Ezd0RiNlZyOGpSQWZaCmtMSmViaS9BZndablhsaStKVEwzRklJby9HbFdMeHR1V2NsYVZoMFlBNkFIK0dWYlQraDJoMS9KazBWS2ZINm0KeWRESWRScjNIajN2VHd4VEYvSVdXbThvOUNqWkkxTWx3b2xLMmdTTVVzYkhZbUFFWDFIUmd2RHVsOUJCQ29WUgpZWnF1ZDQxQmU1TktpQzZhTjJQR252SDkrN3VlanRlWjhOck5qQlhLWW9QS1ByditZcW5YQUhWQ2JzNm5vdnBVCmpTdzc2TTBDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVuWHdrdFUvUwovRkdweXAxbWgxOHFCOFVHWnM4d0xnWURWUjBSQkNjd0pZSWpLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUYvQ2NJb0RHUWJmc0RWRFMvc1kKZjhWcTFUcUJZOC9XWWhaZTZJU3pQQnBmcDNnUHR0Zlp5OUZjRTJpelNVTXo4aEE4dWRUYWY2WXdnRmVNVXZvVgpxaWcvcm1DcWk4Y0ZPVkZFcXNJeVFLMzhydkNHNDlLU3pmdjB4NmhBcUtqa1EzYnM4RzlRQlZqVHM0TkJsc1hqCmRXaG1JQi9peTZ1ZkdMcXFhdFRiT3phRjh0aFQxRjFCbndMQWVrYkVEZE1tZ3NmTUtVeDl6TW45TC9zblJlZFAKemdBUDZMWjY2eDBaSHpxRVQ2ZkpLUEIyVTQ5SEU1STRud1dNS29EK2ZGMXp1L0lwRTN3V3d0aFJOZXg4cllHYQoyOEJqOW83OG1EUjRQUmxKbmtsL05neHptU2FlWURtelpUVWQ5YUIrNmNqL2hmTHZVaTZaL3FkY3JkbkN2Qkl2CnJVVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeU0vSEZvbVpvOWtXSUlvTDhodlk1RlNpTE13NjJlWVZRMUZyYzdTQkZzMXlVczhrCm9FUFJFWTdhakFtNE5XQmRUWm54RndpRUtqendUbjRVZ3VMS0xQWTZlaytML3krQUtqMXNoWHFXRXVUc0ErQnEKQlVUbkNCbW5Wa2FXaG1nbmNEZkFOdnBXdnlORUI5bVFzbDV1TDhCL0JtZGVXTDRsTXZjVWdpajhhVll2RzI1Wgp5VnBXSFJnRG9BZjRaVnRQNkhhSFg4bVRSVXA4ZnFiSjBNaDFHdmNlUGU5UERGTVg4aFphYnlqMEtOa2pVeVhDCmlVcmFCSXhTeHNkaVlBUmZVZEdDOE82WDBFRUtoVkZobXE1M2pVRjdrMHFJTHBvM1k4YWU4ZjM3dTU2TzE1bncKMnMyTUZjcGlnOG8rdS81aXFkY0FkVUp1enFlaStsU05MRHZvelFJREFRQUJBb0lCQVFDdE1GWGFJQzU3MjF4MApEOXNob2RhN2hpcWdURHR0ZGp4Y1pMb3hmam5mT3EwZ3NqbzZab0xIaTliODg5MEZXK2pjWnFwQlhUenZXTU5BClR3ak5vVjhRekFPL1BSL1dwRmI3RnlLak5BaCtueVRXYXhQRkc1bk5xS0pqakZtQjdnNGxnRStzbXRkNTNhWnMKeHIwK3VLWjdWSis1SENtSWkrVjFRUmRVOHBoUEYxZ3pKalUzNHQ3T2UySDNLTlpQOFgzOE9ZTzY0V1pxTWFhUQp1UWJMZWxCblFzbmVDa3pDMUtuQmtnTkNrcmVWWFFvZ0NibXVTa1BNVWJjdU1aeDlXTktoQ2tjTWk5YUlPVEdtCmlRRUkzNU13bkhzQjh6WFArcXl6TitKaDQ3OGhCMXNxQVpyTjhZT0ZnZTArZFBTbnlmRlBOcTEwRjlJN2dkUnMKditEaEpFUUJBb0dCQU9mMVZHUUNzeTJKc254akRYRlJiRG1hSVZnN05VcHIxVUFxaUZNWGNzLzJhakpUWmZxbQp6UVl1Qy9xZ3NjaFM2R3FYWkRXZHBJMzBwMU5MalQ5cFptMTVldE9GNXlHYzI0MmNjTGZnNWF3aU00YW1YR0NwCjVuM1NUR2d1NTZRb2VsUTVvQitWcjVydW5RaU5TeFg5YjV3Nk1TZnh5RXFBSVYwTCtCOWltamVCQW9HQkFOMmcKQkU4TDJZNXd6VGZOYmZySERBVWg2K3p1NERUVkNZSnVGUkExSVlZQ3l4eU9YY09jV1E0eUdmTnljTzNrMUZ5dApTQWgxaTlHbkxCNHVSYkVvZC9Rc2VCZWZWbWFscmI5ZERJSDRCL01hTHJSa01VVHZTazhZbVdVUjJZS2JtWklrCmRuVW9MdFJPY0ZnV0J6WXFZdTFyRjIwZlhlTWJkai9ISGx5OExMZE5Bb0dCQUw3emtGQndoSTZGWDZEVWJobU8KUFBqQ2NKYlF6eEwvNkdMVllMcCtnQzdCSFRWbXdIbnlYSytzc29IVlRlV3FrdGhFM3VMZ2Jybko0UUZLSGZKSQowMkJsOC80enFrMWFjc2VHTktpN0JIZUxCRDNoc0FTSGVVNjFFOTlrVlo4bkQyVk10d3VwVHhITlF3cnFQaGpSCk5OTTRlSVQ0bnJqdCtBbEFORGVxRldpQkFvR0JBSllQM2pzRHBBaU5tbmJaVTBtRmN6OGFhOXZmRnRMUEdRUkcKczE1cEMwenBJVXd4blkxd2xPQkd6a21IeUsxYnp1cjlyWk9FdStwMlRpb1ZYTDBLME1YMVFrK0VaUVZWMDJLSwpoNGlOUUJ5OE1ybVVTY1FLWG45V0FhOXN1YUYwNkRRTEdtWlRrZm5STHNLR0Q5WCtOMFBZeW1EcDV6RjZpOE85CmVIS0VPNmJWQW9HQVdHRzVUSG5SakZPL1hXR0lTaGlSdDV5Ry9XOGdYd20yRC9LNnAvS1MyZFFERG0xbkZRWXgKYnpwdm5wNTkvaGdPbzFvbm5XU2JMREtxcGxMQlBubmZ0VzNMVHk5RXN1cXg2d1oyNE1BNlJXQnczK01GMUR5aApEMVh3ODFpcmU2OVJiRmMwamdWTUNaUU4yL1owUHFyQnA2dHRiUHpEVW85TEwwRDhqL1JXMy9FPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    omni-kube-service-exposer.sidero.dev/label: Hubble
    omni-kube-service-exposer.sidero.dev/port: "50080"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETUID
            - SETGID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
