apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  devices: eth0
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.0.0.0/8
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ1k3Y2hnNkdNYlJNbk5VUm82cHBOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpNd01Ua3dPRFU1V2hjTk1qY3dNek13TVRrdwpPRFU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV4bU9xVjZnV1RHaFZrcW1pNTZBN3Y3Rkl4NnBUVEdTbCsxSWsraHBQVUlqaHBnVGgKbzFOTytqQlpCS0d0dlg5ekpDZGpMUWRjWFpNT0xwV0VIMFVjdnJIK2pFbStlWW5Mc3dFSDJpTEh6emhzQ3BqZQoyelNFZWlaU3BpWVlXQVRZZG05ZE5Jbk40aUFjbHVQbWZSK0FkN2U4a1cvV1V6dklpZk9lcmRxMWt2Y0swWGJqClV3bm43SlNsQXVEVkhkVXVTRWEvZGthVGcvZ1N5VGV4TGQzTmt2cks2ZjZJUDBOU2ROK3VYOThORDNxTmtOZHoKbTZod1M3bkI1b2dFYjVOcDB1Uk1ZUS9UMVY4akorR2VSRHhLYlBZNmR4K2FSN2xJRDcwM3dsbzJiTU44aHlEYQpQVzl3cWNEL0NnZjVkU0I0ek94MDJuUlZwRW1KTklrak4vVjNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVyS1ZjZDA3Z0hzN2ZJZHNCUU5JcG15QUJnZFV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFESHdxQkdNRjRYSkxXbUJJQzI4akNvd1NqNTdBVStXY1oyMmJ5QVVUR2VGL00vNFBzbEdrQktTCmFFOGxZTmZGdjcrTEtuTHc2cW9UV00rRFBSMThENWovUElCR1Mva3lQTXRBNWVEd2VrT1RHSUx5NTVIOEtQTk8KTG1rMGt4THVHQXNjemNlMFNmeUJZWDlWemROdHUreGRlZGxyUWc4QmV2OVF4bCswaTJoV0Fpbm5HaTV0YkEyMgpndjRhWGsvS2hENlRBanEwdnpkS1hpMmlFeU9KQ2dpNm9ZUDltRnNyTS9ZcHR0eEhNVVFYdEJDSEJUaTNPOWFqClFHc3NRN3VTS3krZDJURXY1MDdrWEM3d3Z4eHl0dGl5enZnTWFtRGo3WHdjYlV0SDFOWVhXZzdQL0dXWEhLLzYKc0gzanVZK0VxU1c4MFp3L2RRSW13MEZrem52SUZDVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWNaanFsZW9Ga3hvVlpLcG91ZWdPNyt4U01lcVUweGtwZnRTSlBvYVQxQ0k0YVlFCjRhTlRUdm93V1FTaHJiMS9jeVFuWXkwSFhGMlREaTZWaEI5RkhMNngvb3hKdm5tSnk3TUJCOW9peDg4NGJBcVkKM3RzMGhIb21VcVltR0ZnRTJIWnZYVFNKemVJZ0hKYmo1bjBmZ0hlM3ZKRnYxbE03eUluem5xM2F0WkwzQ3RGMgo0MU1KNSt5VXBRTGcxUjNWTGtoR3YzWkdrNFA0RXNrM3NTM2R6Wkw2eXVuK2lEOURVblRmcmwvZkRROTZqWkRYCmM1dW9jRXU1d2VhSUJHK1RhZExrVEdFUDA5VmZJeWZobmtROFNtejJPbmNmbWtlNVNBKzlOOEphTm16RGZJY2cKMmoxdmNLbkEvd29IK1hVZ2VNenNkTnAwVmFSSmlUU0pJemYxZHdJREFRQUJBb0lCQUJLRFhiMUUvUUF6M3hYZwpCcjJ3UFh5V3p0RUU3TWxlVEkxcDdUYTRJZFVUbm9CMkxmaGFjVnZtZk5qeUtEYUxNdDlEbEJWREVIKzQ1NFc3ClNMVWc5SjgzdGI4N05jSWdsSVhUTWVBWmNldmRqNjdjbzMxWjlQTGF4V1RwSDlTL09NUmxrUldGdmRIaG5mZWIKWmR5N1RWOWREdGRnMnZkTjFpQlc5d3N5SWlDRCtFbmJWbk5vQzhNekpEcmdKM2FzcUVyeHlhMWlsQ0haYW02cQpqOWR2dno3VmJjUU1Qam85TGZsWlAwbFhJamdBRUxVTEZzMXNZV2w1SHdoN3hSam9oMmNNd3VEaUg5bHNDQzdFCjNNSytPZndjMm0wMGNma1FjWEdLeC9SenR3c08wTjJKbDZ2SUdtVUd6a0oxUzhqUzJsYW9ObzVuSEdlTzdrMXcKOFAxdE41RUNnWUVBenQwR2Y4OWFoRHR2VE4rSmJhNkFIbjd4blRGd2lYcW1hcnYxUkttKzdsTlIzc04rYU55QwpxZzlaNnhKYW9uWlAzYm1GVTZSYVVhV1hnVmN2eVljK0F0SmkxSjUyRnNGQUtmTlhsQWR6eVlvaGhkQ0VVNWxFCm5JVCttRTZjL2Z0SGJIUXFNblk4cDRVUnhzMVhpa3VGNnhxZ2M2RWl3RER0NHRaeTdIVS8rMThDZ1lFQTVlY0UKT0l4VHpwSmpNbko2Vm9zVE1Ma09iNU1icTBqY2NZdDRlek9xR09NQTEwdjZCS2ptQmJPT0E5V1YycXIybmxCRgpPRXQzS2ZTVjNJMlJlOG1Hc0tIdnNSSHpRUTZxOEZNQzdQdDVjS2tPaTBNUndZNnlDQnI2Z2ZUMUZxb0FuV0R1Cml0cGpqVnFYOTFLRjZlWkdrdCtmUEFIZHhhMS96ZVFpeENNZlZPa0NnWUVBak9XaXJaOHdDZXpwakRTZFNHV1kKd2l5NHFOYXB6aG9LQzV6bUc5UjZSWjNlbjVvTUdhUklJMGk5ZUExU1NtSEhXRUFxZmFQdUdMcHZEUnV6WXRLSQovQ2NNUmNHQXNWTURQdytOMFRlYU4rV3JtNWRBNmlmMHdaOGNRZVVaclN4Zm81RWp4S2NmL1FIMzc2NmhONExsClBoTXV3bE00ZGl0ZGZDbVFzVm5UTUlVQ2dZRUF1VVllYWEvMURpRjgzYmZTRFpLUXlaQXBLUk9sbGJqbkpuNGUKZnpNWW5tdTZUc2RFMnFKK2xST3BuRDl4UDhMTmNySC94cWxTaERZKzIzb2ZSMklXTUp5Z1BOUFpkSkZzZ3JaegpRaVk3TE9hZytPdjVFRUorQ1Bnczc3UklHNWF2WGlVeXVDWGRXcG9xbzc4V2VuUUFaZmJmTFkzWGVxb2l0L3RsClpTbGs0NWtDZ1lBS0Z0RUh4N1p5SEZEc2hBbWlsdDUva2dxa0NLeTZOREFkOGIwNDlMZXI0ZzFGc0NONUZ3UWIKTVdMMUtRM3FZZFRyczdQZnFKZ1FncmN1aU1yRU12NXRvY2NpNC9RU0lSVUNBeVlHZ0lrOGp1TnRKYnBsUUJQdApHQ2taQ1JvUXRJdzdxb0FZSU1VYXdqek5NcVQweTlCSWU1TVpacGdJQitaUU9XTUlHNWlRT2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ1k3Y2hnNkdNYlJNbk5VUm82cHBOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpNd01Ua3dPRFU1V2hjTk1qY3dNek13TVRrdwpPRFU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV4bU9xVjZnV1RHaFZrcW1pNTZBN3Y3Rkl4NnBUVEdTbCsxSWsraHBQVUlqaHBnVGgKbzFOTytqQlpCS0d0dlg5ekpDZGpMUWRjWFpNT0xwV0VIMFVjdnJIK2pFbStlWW5Mc3dFSDJpTEh6emhzQ3BqZQoyelNFZWlaU3BpWVlXQVRZZG05ZE5Jbk40aUFjbHVQbWZSK0FkN2U4a1cvV1V6dklpZk9lcmRxMWt2Y0swWGJqClV3bm43SlNsQXVEVkhkVXVTRWEvZGthVGcvZ1N5VGV4TGQzTmt2cks2ZjZJUDBOU2ROK3VYOThORDNxTmtOZHoKbTZod1M3bkI1b2dFYjVOcDB1Uk1ZUS9UMVY4akorR2VSRHhLYlBZNmR4K2FSN2xJRDcwM3dsbzJiTU44aHlEYQpQVzl3cWNEL0NnZjVkU0I0ek94MDJuUlZwRW1KTklrak4vVjNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVyS1ZjZDA3Z0hzN2ZJZHNCUU5JcG15QUJnZFV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFESHdxQkdNRjRYSkxXbUJJQzI4akNvd1NqNTdBVStXY1oyMmJ5QVVUR2VGL00vNFBzbEdrQktTCmFFOGxZTmZGdjcrTEtuTHc2cW9UV00rRFBSMThENWovUElCR1Mva3lQTXRBNWVEd2VrT1RHSUx5NTVIOEtQTk8KTG1rMGt4THVHQXNjemNlMFNmeUJZWDlWemROdHUreGRlZGxyUWc4QmV2OVF4bCswaTJoV0Fpbm5HaTV0YkEyMgpndjRhWGsvS2hENlRBanEwdnpkS1hpMmlFeU9KQ2dpNm9ZUDltRnNyTS9ZcHR0eEhNVVFYdEJDSEJUaTNPOWFqClFHc3NRN3VTS3krZDJURXY1MDdrWEM3d3Z4eHl0dGl5enZnTWFtRGo3WHdjYlV0SDFOWVhXZzdQL0dXWEhLLzYKc0gzanVZK0VxU1c4MFp3L2RRSW13MEZrem52SUZDVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZGJCR3hiekNQbGVsWGxBMHVqNno3akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpNd01Ua3dPRFU1V2hjTk1qY3dNek13TVRrdwpPRFU1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEckpzRGx1TnJaVGlMNzl2YUx5VnArTVZhUHJINzYKQzI4YlhDUXdyMjNTWnArRVlCYkhjVmE0YnFRS0g5aVAxZFJqaWFTeEkrL0hDcTBpSnNKNGRVOWhCaW5zMW1pdAptUG9MdlQzWUg3YThjS2N6cnA1T1dNdW1VZTI3ZUZRWHFaNkMrNXkvVnlXcTFINzVYbnpEUFJNd0JEVU9WTGZECkJTRXpIeEJhem9oVXlud2Y1RjBrenpuK3I2SllqTHRkVVV2ZG90SS9WZlphQ1FsZGx5N2Y4R0ZLcUNXTUNLck8Kd21kbGRjb01SQWs0MllyeVk2NWFRbjNMS000ZU1HOU9sVjhrTXdUNkdLcGxsVFk4UjREL094Wm4zSHhCTGZjUApWVEE5ZXh5eGQxbnpvVG9tNTduWEkzUHN0dGZhSmp0bHM3YlVaa2wyWXo1eDBDc0hKZ3pqOUIrWEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZLeWxYSGRPNEI3TzN5SGJBVURTS1pzZwpBWUhWTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFsdCswMEtXL0ZsVVZOcTFZbklVdHJDdER0U1QvempCVHFJN05hc3dkREtsTjdtbTkKak9BemFjM3YzUUd5NFFqY0tHQnVRZnVJTjBmSnpPSzM4aEtVRXNhT2Z0RDhCNE4vMGF4c2FkZlh2M254WnlDRAp6bDZrYUNEUkwyelY0UGRRbktCZmhLZG9SWU1wbUxHR0tTUTVoZjJyMzVYN0FYVFA2eVdpZ2x3Qmthc0Q5VmVECmQwdzlZaDZ4b0RsQ1NJTy9FWFNhaGIybVFXY3ZHOHhKbUQyZ2poRDZBaGE0dGMzcWM0UVE2VDJyZ2VZSGlYMDQKUXlXbGhQaDBIYUxPWTJjdTlPNkY5b1J4bWducHFBeXZLUkk2YUhSaW5YWUFubXNCbjZ6WnlyVm05eEhvem1ZSQp4bnBCR0Y0aUZEZjA1T08ySGVFMnpPSHdGRXg2QmFMY0VwVzlWZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnliQTViamEyVTRpKy9iMmk4bGFmakZXajZ4KytndHZHMXdrTUs5dDBtYWZoR0FXCngzRld1RzZrQ2gvWWo5WFVZNG1rc1NQdnh3cXRJaWJDZUhWUFlRWXA3TlpvclpqNkM3MDkyQisydkhDbk02NmUKVGxqTHBsSHR1M2hVRjZtZWd2dWN2MWNscXRSKytWNTh3ejBUTUFRMURsUzN3d1VoTXg4UVdzNklWTXA4SCtSZApKTTg1L3EraVdJeTdYVkZMM2FMU1AxWDJXZ2tKWFpjdTMvQmhTcWdsakFpcXpzSm5aWFhLREVRSk9ObUs4bU91CldrSjl5eWpPSGpCdlRwVmZKRE1FK2hpcVpaVTJQRWVBL3pzV1o5eDhRUzMzRDFVd1BYc2NzWGRaODZFNkp1ZTUKMXlOejdMYlgyaVk3WmJPMjFHWkpkbU0rY2RBckJ5WU00L1FmbHdJREFRQUJBb0lCQUhZRTBUTjZmM3dvMXk0VwpXTTczazg5Wis5UElBMEtEa3BQc3ZzMGdmc0htZDVEOG1QSW9WQm5ramJmM0c3MjAyQS9NK1RkZWplMGIwcUVkClN1VWlHMkRhc3hnRzFDcXNhSEtUM0FJb2lKSXpCL2ZNWCs5NmFWdGtLeWkzejV6QXFLbWNscU1CbmdvSzlGODcKcU9wa01Na2NrM1JKMktDc1ptazk0ZnR4Uk1Nb2xwQ0h0emtOMzVBVmVGUTVQcjRBOGJ6WkxsZjh2VmhnVk94SQp1OG1CMUZBZThDMGxZYzJTcjgxc0ZiRHI1Y0RVaFBLZkpYRkkrc3prZjZybVNGSk16Z1MxbVZ0aTdBaGVTMlRjCjZjbDFQYVkxOGRLRE5qSWE1TFpDM1pueFZzTS80ZHVzNFRXRlJsek8reHNBQXRLQ3ZVRGgzdE82RnVXNnRHeUYKelJoMWRTRUNnWUVBN1Yxbm9pZng1dGlMek42U0l6M1l3OEhBN3RodUFVMkpYcWhneWNHZkNKUkRKSStQNjJTNAprbmlmeUorbXFiK004aVA0b0w4alF5Y2VqME16MkpuRWJDYitIVGQ5clR5d21QeitTMUpzTkpGN3I5NjRZbTEwCmhxY0VKTldrc3pqTDhkYTIvRmwrSkhiTWxHTDE1bWZUSGZtUkllb1N6TnRYS0NvQW9TZUhBdDBDZ1lFQS9aemMKbnBiVitRbUZmZ3RLckowZmJ2Q3Q1MkMzeVF6ajd2bllsOWl4ajkwUkNidlVRTjYzMFovUTJES0tkSE9GcGZ0ZgpVTmtlVTFoYzlac21oNkpBcmh6bTl5RytSQ1dMTkZhYUFob0hCVDB1QllJMHdnTklIN20xcTJSSWt4U3c4VTFkCi8rQ0lpNCtHeEFhdkZvMVNndmpKNHd0N2FyVi93QWR3QUVBSWd3TUNnWUVBMXN6L0dveEJhYUV2S2crRWVlWGYKQW8rVTg4L2lCTVhRK1Zzd2M0UUhVZkV4cmFWSkhVRUJrbk1jVGFiRVlMcmFac25NbGxOQ0t1UDgwTEtFK1k5MQpaRllKQWhHVVpyQVVNKzVHaFkwcUpJdy9QUkUxRk1WdWZPZ3BaTmY5ZXI1OE9QY1FrdDY5dTJ2U2lMbmhRMGRUCmtyMms2K2J5YW5aWHNoNElnYzNPYlBVQ2dZRUE1aTlvZ3J5T3l6RmNLMUhlWGh0aU8xUlIweThTd0hWbHNES3UKNXV0MEJncDArMnV5czRveU54NGg5UWl5YUEydUlUK3RmSGtFTUV1RVhCdU05aEJMT256YkdUVlVOeEFJYitHbQplUC9jbldHeEVxamliN0dBMWVLOXhDa0tRZ3pHcU0wNjR4S05mSFl4c0Z3TXNLQm1ZcCtpeGVOWENqeGdEZy95CkZSZ0pZYmNDZ1lBWFRBdDBLdVArbk1aaGtiK1hWdE4xRWVuUnNJMUVIVnc3cTEzcWxkTWE2WHJBaVVMSmo1SlkKeEVhcjlubmtZSmsxZGFCQ1BPTTQ4bVl2Z0c0alNFMXp2L0hWUlJ5Z1lFdUpqM3Q3VlR3eDNoK01xNkdPK25xSQpJNUZya2kwdVQ4TjUwMGNuSndyT212MzdDbnZING9CM2E5Y24rbS9VTGxkQWx4NWVKbk5xZmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ1k3Y2hnNkdNYlJNbk5VUm82cHBOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpNd01Ua3dPRFU1V2hjTk1qY3dNek13TVRrdwpPRFU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV4bU9xVjZnV1RHaFZrcW1pNTZBN3Y3Rkl4NnBUVEdTbCsxSWsraHBQVUlqaHBnVGgKbzFOTytqQlpCS0d0dlg5ekpDZGpMUWRjWFpNT0xwV0VIMFVjdnJIK2pFbStlWW5Mc3dFSDJpTEh6emhzQ3BqZQoyelNFZWlaU3BpWVlXQVRZZG05ZE5Jbk40aUFjbHVQbWZSK0FkN2U4a1cvV1V6dklpZk9lcmRxMWt2Y0swWGJqClV3bm43SlNsQXVEVkhkVXVTRWEvZGthVGcvZ1N5VGV4TGQzTmt2cks2ZjZJUDBOU2ROK3VYOThORDNxTmtOZHoKbTZod1M3bkI1b2dFYjVOcDB1Uk1ZUS9UMVY4akorR2VSRHhLYlBZNmR4K2FSN2xJRDcwM3dsbzJiTU44aHlEYQpQVzl3cWNEL0NnZjVkU0I0ek94MDJuUlZwRW1KTklrak4vVjNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVyS1ZjZDA3Z0hzN2ZJZHNCUU5JcG15QUJnZFV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFESHdxQkdNRjRYSkxXbUJJQzI4akNvd1NqNTdBVStXY1oyMmJ5QVVUR2VGL00vNFBzbEdrQktTCmFFOGxZTmZGdjcrTEtuTHc2cW9UV00rRFBSMThENWovUElCR1Mva3lQTXRBNWVEd2VrT1RHSUx5NTVIOEtQTk8KTG1rMGt4THVHQXNjemNlMFNmeUJZWDlWemROdHUreGRlZGxyUWc4QmV2OVF4bCswaTJoV0Fpbm5HaTV0YkEyMgpndjRhWGsvS2hENlRBanEwdnpkS1hpMmlFeU9KQ2dpNm9ZUDltRnNyTS9ZcHR0eEhNVVFYdEJDSEJUaTNPOWFqClFHc3NRN3VTS3krZDJURXY1MDdrWEM3d3Z4eHl0dGl5enZnTWFtRGo3WHdjYlV0SDFOWVhXZzdQL0dXWEhLLzYKc0gzanVZK0VxU1c4MFp3L2RRSW13MEZrem52SUZDVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYakNDQWthZ0F3SUJBZ0lRRHhMcGhuaDNZVm1TNFRwSDRLekIxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpNd01Ua3dPRFU1V2hjTk1qY3dNek13TVRrdwpPRFU1V2pBdU1Td3dLZ1lEVlFRRERDTXFMbk4wWVdkcGJtY3RjbkJwTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMc2ZDdDBhdXVycTFWME4KYjVrMXRqcnZSZkZPdms3SlEyK2sxbWRyV3ZDeFJiYngydnBXU2w2dWErQnBZMTFzQTg3c00rRENMemcvbnBqYgpzNXFJZ2pCdWw4bndsMlp0MnY4d3lCbElSU0sySExmNGIzMzFVWEtFNTNjc205Mllmcmsra1Q0TmNCS1JDMzNJCkFheHF0aXB2eitTMCtVU0laU3lWWjNwOTFYeTVqSTBDUWpodmVadmVVSUpCanNaK093OTgwN1RPSFg0ZTRVRTAKck92bnJHNGh6ZWt6c0tkazRtZm9PRldWNVNJU0JuMlJXc2N5RWxvWlZ1VENGMEppVjMvZkExWjlTZ0ZiNndMRwpKQmpyRDJhYm9hZ0dNNDBTUm91V2hwRk01UHdGQ0R2c01zc2NkcklYQ2gzZDhtQnZFS0ZlZGNhKzNUNVE3NFhrCk1IS1pZWWtDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVyS1ZjZDA3ZwpIczdmSWRzQlFOSXBteUFCZ2RVd0xnWURWUjBSQkNjd0pZSWpLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQURYMWsraDJOOWE4N3RUN0k3YVMKOE9Ma3ZjZnRCWkxpeHFYa0E4MUttODFWQ3pRcHc4RGdiZ3ZuWnJRTHZVaFN3YmZsbENpNGdwUkV2Vkk4MnpGMwo3OFVZb1ZmMTN3azFOL1o0a1d5TmFTMENWUnFBeTJlejhFblEvUm5CeHk2QVBkaThwN0xUMS9TUzRxOHdOUC82CmhPUlk3UUd5MzRUTGsvRS9nTWZRckYyZ1h0bTA5VUdDa0w1T1BmTlhrZHN3czVJOElkZWZFZUYrTEFwQWtqckgKRUVIRG1BL1dCa09EaWQvN2pBdXA3QThnUWJTbkxQdkVPK1JKMEthY1ROTmI2ZmZTQTRpUXFZNVVxbkxtUFNvawpvZUliOWxubFRrS01vSno3UXNOUEt5MElKeGZPL3FVMG94L2pDMXZZcVU5amxEcEEyM0ZRNkNFYXR5VUFhRTA2CkVkYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXg4SzNScTY2dXJWWFExdm1UVzJPdTlGOFU2K1RzbERiNlRXWjJ0YThMRkZ0dkhhCitsWktYcTVyNEdsalhXd0R6dXd6NE1Jdk9EK2VtTnV6bW9pQ01HNlh5ZkNYWm0zYS96RElHVWhGSXJZY3QvaHYKZmZWUmNvVG5keXliM1poK3VUNlJQZzF3RXBFTGZjZ0JyR3EyS20vUDVMVDVSSWhsTEpWbmVuM1ZmTG1NalFKQwpPRzk1bTk1UWdrR094bjQ3RDN6VHRNNGRmaDdoUVRTczYrZXNiaUhONlRPd3AyVGlaK2c0VlpYbEloSUdmWkZhCnh6SVNXaGxXNU1JWFFtSlhmOThEVm4xS0FWdnJBc1lrR09zUFpwdWhxQVl6alJKR2k1YUdrVXprL0FVSU8rd3kKeXh4MnNoY0tIZDN5WUc4UW9WNTF4cjdkUGxEdmhlUXdjcGxoaVFJREFRQUJBb0lCQURNYnEyL3dtUlVJeHZYLwpjWGU3UCthZzY4Mlk0RW5NbHVxcmJ4UVlNbUtEU0xOTEk3QTBXV082NkNRSEpPaWpVL2IwZE1ieXdzcnVOWGN5CnFyK09nV0NSRkV4SHRsSjN0dFQwa2ZLMTFveEFpVitHTDQyTHI0OUQxYVNyUG5jcjY1RFZFZjZNMVF0OUtsSlUKaW9CNU5RQXFRZklKcS91WDlXcFQ5RXQwaXhiaGIzeEZkM0RkT0diY21yQkEvTjUrYnJkRjg4S0lsRmVJSEUvTgpWRkxhYzVhUUhLUnhjaXRWL1FEcEl1QU96ZlNMT1NqUDNOamVJZ2JnVm5KeUJOcXhWQUdaWkx5Q05UU09MZkhCCmUzbjVzbXZ6SUdQN1FlMGJqdVZRQlk5SHBERG5qMXJKZHFvYzBhSTZ4S1FSU01Fb21jWFRmZ1lwYksvaW1CYlYKTG5MeGhuRUNnWUVBMkFpN1FGNE5tUlhmM3ViZFpsOWFETEZ2WkFGaEg3SzByaS9jQk1QWWkySHkrZnNxWHBGVwplYTNJKzhUQWxPM0Z0K3RWNXJBdEdBeHV4UnU2ZitKUVMvVlRtS051QTBKaHpYVnhDMTdVYmpBV2UzaFhZSGRxCmQzRkVWL0I5a2ZCS2l3dHFOTnZmZXZNTVV1Vy9jUnRCT3FXY2FZMTlqS1g0TXhkdllqVUZxdGNDZ1lFQTNiMEQKUjFOc0dWUVlaTGtrc3hSUTVrTTJoa3BqcnNwZzd5b21pci9uT0pvc203QU5Pd1ZLM3lraEwwYlhTV2Z3V2ZSeApDRTFTdk1xdnN2dUpXSnY5N1V0UHFOc2VsVTc1bnoyWUxyTzR2M09tNVhEblVVY0E3OTZyZjNpaU1pVG5LZXVQCjMxWENrSTN6NkFoKzR2SEFsaHNsZWFMc2ZtWWhJYXE3NVMyN0twOENnWUVBc0IxMkljUkxDNWpFbDkvWGNDU2QKc2FsWTZNc2pGWWRIT3BWenBVTFBudGxzRHBUT2RxZS9PcFVOT3dxc0FQMVI2VnpsKzVsMk9adXhGZWxFQWd0SwpjSkgvNDNpZ0wvSUc3MHNsckNKVHhieFlKN0gwY1lVSWUzVVFSU3llQWNKRjB0S3NjNGtueUFDcDlFNnQ0aFJZCitlbVcrSW5MWjBUS2NVUlNubG9oVTZNQ2dZQmZadVJUT3RSR3JZVDFTU2MrR1Y2WlE0L2hCWDZRQktqaUhjdUoKWlBteHc3dXZuSGFFejBrZ2JNekhUMzV2S2RZaWplWllBUlM0LzZmS3BTaTV4QnZqamNTUFRQK0NsQUVZZjJMTApyUzJ1eWE2a0J3aXZVcEpYb2dFOWpnU1MrSWV3NUpYNUxDZlRGQkE5NC9IYjZOSElnNU9ER3hNUGF4ZVVLYVkvCis0WU0xd0tCZ0FIeHdsR1F2Vmw3c3EwWXArSWNIdGlWd2thUnYrb3MvaXp5UitxZWdmTmEza2V4WkV0bUVoWnQKWDNydXJQSEVZWGlzVFQ4VkVTNUI5QnpreHN1RlZSbENIK1I1MllTUUZzaTlZeGFaQTZzUzVITkEvNGlrZ2o0cApYbmJYczl2OGUrT1hKWisxTUJoTUFmb2NYd3pQTTYya3A5bUQ5bEdmQUJlSFgva3hKYjBoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    omni-kube-service-exposer.sidero.dev/label: Hubble
    omni-kube-service-exposer.sidero.dev/port: "50080"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5f4cce673474e7f53f79099b7dd0cc386a41ac9e7d6abbd4ba338ae85aa2aed6
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
