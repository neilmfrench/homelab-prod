apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.224.0.0/16
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVW0zY0h3TjB2VGJ6OHNrSzlUM0lTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01UY3pNakU1V2hjTk1qY3dNekkzTVRjegpNakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2pNbC91VWsyalh6SmkzTWxuRUtlNDBWRkNXN0VBMmNRNG5XdlhxdkYrd2FOV2NxNUQKWkQxQjRnK1E1Z1lZQXR4ZTJvbmxrQmtvT0tZQzkwV1kyZEpOVGtDTnZiQXY0cENCTm5PUnZGK013bitlL213YQpIVXErN3dDZTYvODZ0SkU5OTh4KzVWcVFVQTRJbnRZcERIRnhpZWM2U29oSnJmVmRaWjd2dzhmVC9rS2hvVmU0Cm9NUEROaFlBeUJpeUt0RW9peGdENnFBTjFMMU9OTVdKRHh0cTlpTEEybUJXalpzQzRvNGQyR0NCbERMTFYxRjgKOFZseXJJaStrMnpsTW5Fb21mSDY4cmJhMzU2d0dCREtyeGtVeXN0NUhmVVVobDd4RDBYTGxlSkxPVlh5Qk0xLwpFQm1RQzJBSmhpS29BMXlLNkhkVlU1VkNiYkp4ZHlkL2tqRGpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVKM1hnNDlsMXNTcE5PeFBCTHQ1MEVxS3lJTTB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFR3h6YU8rRWVTOWFRTXRhU0VHeW1YTTR0Rm1zdzczakpHNnJ3VGlBWXJ4bS9PVWgxY21JV2J2Cmk3NzZLUncxTU5sWHRHQW9LeXRDTndkbWNXK3N2QllLeUFteFhRTURuM2VhNU5yS013bEU3VDlYeTI4ZTVnQUoKUnkxZ3VOOE10TGdyVklrczZXaytteGEveHFZU0hiSzFNVzBvN3dOT282WmhKMmlTenBKemJtL2xTNkhPK3NlRQpuTzlvOUlYZzF1M2R4UkJJN1A5M01ocVB3UEtjMGpmUlF3T3g0M0Z4VnIwcnhEM1U3c1JRVjZybzM4elM1d0dZCnJydm1pMisrWFlaSW1Jc0VGNloySjkxWWdLUzIyQjhkdVB2UUh5V1pETmRvYTYvZlorSlptemRaZEJjbklTYXEKQ2VSR0FIT0FVNmRRUWJyaUYyRGVTeW9IVlYyTlF6ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb3pKZjdsSk5vMTh5WXR6Slp4Q251TkZSUWx1eEFObkVPSjFyMTZyeGZzR2pWbkt1ClEyUTlRZUlQa09ZR0dBTGNYdHFKNVpBWktEaW1BdmRGbU5uU1RVNUFqYjJ3TCtLUWdUWnprYnhmak1KL252NXMKR2gxS3Z1OEFudXYvT3JTUlBmZk1mdVZha0ZBT0NKN1dLUXh4Y1lubk9rcUlTYTMxWFdXZTc4UEgwLzVDb2FGWAp1S0REd3pZV0FNZ1lzaXJSS0lzWUErcWdEZFM5VGpURmlROGJhdllpd05wZ1ZvMmJBdUtPSGRoZ2daUXl5MWRSCmZQRlpjcXlJdnBOczVUSnhLSm54K3ZLMjJ0K2VzQmdReXE4WkZNckxlUjMxRklaZThROUZ5NVhpU3psVjhnVE4KZnhBWmtBdGdDWVlpcUFOY2l1aDNWVk9WUW0yeWNYY25mNUl3NHdJREFRQUJBb0lCQUJSZFN0OUFZZlBMQTB5Vwo1SUw1N3hQKytyYmZIajFPNzA5cFJYWEtIUXlHT1UybVRkeVcrNVhuRWE0eEpmMkZEZDdBUW9qazdGNjZndXpICjBtVjZlT1d3cUJtSDNCNTlsUzZxanMxV3hrMllUN2lWWXdQM044YVBxSElzWE5NRWlVTkVVcjVhL0d3WnNVYWUKRzNkUDJEQWsxemZNNlNqWWprK3pTSnYrd0ViUnRwRUlreGdFWTEwUkkvZGhWTDgyV2JtYWJOWHU4a0xOUk9SaQpTQmZieTBkdlZuTGFmOHpybjJxeVJNWnF4YVdXYUlJV0pKZkpRN3JYVWdvS3FXdXhpblIrMWhZeTFrRmVIYkJHCmNLRnBRbjAvME5idnZGL3pSWGx1bEg1UlM5OEs0WE9xVzRHRm9McXJJMHlUNkJSaHQ1cHJxVytENExXSGpyeFMKWTVWY2pORUNnWUVBeGZGdHBUYUxHL2xrL1BpZjh6K0Fwb1YveGNrWWNTbnMxK2gzTFFKWEJCcEViU1J5bm15bgpjM1IvVngxWDZLNjRTOFFtZXpIYk5UOWpxbVpJbEhEOGNyV2YwbmZOQ2xxQVJwM2x0RFY1dFlPaEVSZ1JrY1pCCkdSVk42dnliR21PMHlKT0RXTS8veWdSYXdOUnBhSXBPMklVanhrS2Rlaktqb3I4TWhKekYzczBDZ1lFQTB4QUUKZk5YZWRKZkhMR3g1cUJkNWZkZlJOVXRMSWtCa0hqRmRTcE4rbFEzZmlwZ09SWWdmL2ltNXNSQnJEZkdvNy9jawptNEh2UnhHeHhUSmtxQXd3eXZ3cjBKaFhqckd4ODhNdXc4T0tpWjI4eWdIZUpKVlhNazJTdHdBaDk0bWxkOUMwCjhkYkluaXUzc28vYXlBRjV5bk42a2N1Y2ZnL1g4NmNjc1lzMDdtOENnWUJpdUNiVDUrRDNBYW1oRktwSkdabWkKOHgrblY4U3Q0NWZ3a2txbGt1NHM2S0RKd2d5OEFEcC9OVkd3ODd4OUdtNWxzeHp5QWdwdWd2L0U0eUE5a0NBSApZWmVrMHdUYXJnb2RyZS82c1ZUUzl5UGtMNW5MbHhHdVhkYXZaRzVDZWdtV295TTFydjdHRk9maUZjM0FTb0pLCk1CU0ljMzZ3akFMYVR1Z0NWMkhEM1FLQmdBa3BqOWhQZkhtNVFRYzNxa3hXd0lwcS9RVUFRTUc2NDkyL3JOb1kKN3d6UGJsM1kzZjI4dkE3UGh1VWQzbGZibnNiVUJyM05kVEt6blBEL2tBa1BobXE1YWJtRGM0R1pTeTFXMHNmaQp6RGZQSml2cXl0Ynh1TGhSVDhZcjlrMkZweTQ5WEMySGNtd1RYOFVibzVhOUlhbGRPL3ZxUjkvZEZqWFlrbEZPCnhyeDNBb0dCQUk2QnlDQ1dsSEk0UlFaTmxmRnhpcUtOVURkUytqYW1yQnRxNk1vcSsvcW1BejRNQjR3SkU4TFQKdUFqTG12NXRsczhWdXI0a0FNVENVL3Raelc3Z2lOdjRlWWNTUXYwSEt3Y0swN2NtaDZoY2s3ME1vZXhTK0xTSApBemhMYkxVK05OL1FveTRvZmJwbnozK09HenJEdHFxakhXRGd5OGlVUWloNDlhK1czYWxBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVW0zY0h3TjB2VGJ6OHNrSzlUM0lTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01UY3pNakU1V2hjTk1qY3dNekkzTVRjegpNakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2pNbC91VWsyalh6SmkzTWxuRUtlNDBWRkNXN0VBMmNRNG5XdlhxdkYrd2FOV2NxNUQKWkQxQjRnK1E1Z1lZQXR4ZTJvbmxrQmtvT0tZQzkwV1kyZEpOVGtDTnZiQXY0cENCTm5PUnZGK013bitlL213YQpIVXErN3dDZTYvODZ0SkU5OTh4KzVWcVFVQTRJbnRZcERIRnhpZWM2U29oSnJmVmRaWjd2dzhmVC9rS2hvVmU0Cm9NUEROaFlBeUJpeUt0RW9peGdENnFBTjFMMU9OTVdKRHh0cTlpTEEybUJXalpzQzRvNGQyR0NCbERMTFYxRjgKOFZseXJJaStrMnpsTW5Fb21mSDY4cmJhMzU2d0dCREtyeGtVeXN0NUhmVVVobDd4RDBYTGxlSkxPVlh5Qk0xLwpFQm1RQzJBSmhpS29BMXlLNkhkVlU1VkNiYkp4ZHlkL2tqRGpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVKM1hnNDlsMXNTcE5PeFBCTHQ1MEVxS3lJTTB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFR3h6YU8rRWVTOWFRTXRhU0VHeW1YTTR0Rm1zdzczakpHNnJ3VGlBWXJ4bS9PVWgxY21JV2J2Cmk3NzZLUncxTU5sWHRHQW9LeXRDTndkbWNXK3N2QllLeUFteFhRTURuM2VhNU5yS013bEU3VDlYeTI4ZTVnQUoKUnkxZ3VOOE10TGdyVklrczZXaytteGEveHFZU0hiSzFNVzBvN3dOT282WmhKMmlTenBKemJtL2xTNkhPK3NlRQpuTzlvOUlYZzF1M2R4UkJJN1A5M01ocVB3UEtjMGpmUlF3T3g0M0Z4VnIwcnhEM1U3c1JRVjZybzM4elM1d0dZCnJydm1pMisrWFlaSW1Jc0VGNloySjkxWWdLUzIyQjhkdVB2UUh5V1pETmRvYTYvZlorSlptemRaZEJjbklTYXEKQ2VSR0FIT0FVNmRRUWJyaUYyRGVTeW9IVlYyTlF6ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRS3FtNDIwLzFkSTF3N1NoSVFyRXMwakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01UY3pNakU1V2hjTk1qY3dNekkzTVRjegpNakU1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMTZCNldaakkwZDdLQUpiNUYrVDA2cis1OElzVWUKektuOWtnajB5bTJNTmpTVGRPbExDcjNudjJ6RmZMNUY2WWxBcDdIalp5L3Y3RlJuRm9LeHBJYjJ2Q1lpS2RNVQpsZG9LZTl3OXBJUEFwaWRkQXcwanpybmVtMkI0UExvUmV1NXBZSUdMNHV4QXVwVkFPUDM1ZzRuL3F4TG50aFIwCkJDSnpCTmN1amRxZHVNc0o1djhMd2VRZjR6WEJaU2hNN25zWmNTTDZDbGg4RTFZSmJ1bnV6dEtmL012RUhLVFIKTW9VSDdzSjhHYjFTNWlQQ3Y0aHB5SklJQzdkdVRVUVl0UmpKTFNkMTBUc09ubis5U2Z4Sm82S09mTjhKUzAwdQpjanVmOTlsdy9yNUJScDgrK2Q1cW5XZGVTck5PWHBBcUZYMlpsVnBhc09qTzl1ck11b0k0bkpUeEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDZDE0T1BaZGJFcVRUc1R3UzdlZEJLaQpzaUROTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKUXI2QWtsTGhJa1c4Uk9Vb2V6cG50c2tTUGk4UGY4NExjQjZRdGVFN2VIR1BzUksKNFBhZDE0UmF5cy9wRU1KOVRuYks0TmNNajQ5YVRrK015bUZnYXVlNnJoVG1NUUhxT1FRUUJCcEtUTW1RT2ZISQpCOEVPMzRlZk5iRWE2L3U3bWRvSTJPWnlHR0Z2Y21kdkppUzVCdmw4Z0hab1l1OEQ5RHVGWUFMQkU5eXl0MTVrCitib1dTanp6cFZseW0wSlM2U05nUXgvM29NZ1RYYU1Rb0gzYTNtOHBRaTEwdm1DU0xCQ0lySU9Dd2RpVDJMK2sKQmxKNldSM0pkQVkwUk9FNkRDU244VDRVc3dEcHFrVUd6Q243TDFhV1JCbTdKUjAwSWVkcnNTWVFYUlI3QjF1TApuWEF1N1BIQStFSnVtUW5NYjZmRHg3bGY3YU5OK1FPS0FMZHYydz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGVnZWxtWXlOSGV5Z0NXK1JmazlPcS91ZkNMRkhzeXAvWklJOU1wdGpEWTBrM1RwClN3cTk1NzlzeFh5K1JlbUpRS2V4NDJjdjcreFVaeGFDc2FTRzlyd21JaW5URkpYYUNudmNQYVNEd0tZblhRTU4KSTg2NTNwdGdlRHk2RVhydWFXQ0JpK0xzUUxxVlFEajkrWU9KLzZzUzU3WVVkQVFpY3dUWExvM2FuYmpMQ2ViLwpDOEhrSCtNMXdXVW9UTzU3R1hFaStncFlmQk5XQ1c3cDdzN1NuL3pMeEJ5azBUS0ZCKzdDZkJtOVV1WWp3citJCmFjaVNDQXUzYmsxRUdMVVl5UzBuZGRFN0RwNS92VW44U2FPaWpuemZDVXROTG5JN24vZlpjUDYrUVVhZlB2bmUKYXAxblhrcXpUbDZRS2hWOW1aVmFXckRvenZicXpMcUNPSnlVOFFJREFRQUJBb0lCQVFDdm5VWmFZSk03Z0F0KwpGL0lYejhWQzhUSkYrYk5nUnFvZU9Xd1lGNDJtL1hYSW5lZlVJS3l5SFdZL1NtelBSZVRSM0pPcVBLWlU5RTJQCnNIWEFWbHhOdTlyOHhIQVp3WW5jOFRMdzkvQ1NmbFltUDVuaDVlUWZldFdwZnNjTHRTaVI1eTlxQTB1ZU9nTjUKR3d4bVpJMUhuTHNGcEEwZTdCYnQvOUJXQzNEeExpRGFTMXoxalZHa2d3RmFMZmFoeTVVeU00cFp0YWNGQnFtYwo4cnh4M3JaNk5FdHZlR2YxVEg2S1RQRUlzZ294KzVFeHd5MWNDYm5mMUtXMVFkbUdNYVluaHQ2RlBxbXB1cDRzCmxIbTZMOVVxMVB0TTlhNmdxNjZrS2I4bDdDYnRTclBJMTNCMUcrTm9qazlsZ0Y5Tm55UFBFLzhKMGlRN20wRVAKdlFWR2p5L1pBb0dCQVBGdW51eE9NVlBHOGpJa1pmTnZ6bi9jcWtLeG1QU1pHYXdhT3VJd3ZlM3U0U1JPTURRdAp6TkNnWXkybGNmTElrem9ERGY1SjNJbGR4anlnajZvdEN2Q0M3L0RSZlYwa1NYZllBUG9TaVBMbVVRMFZmN2N5CkVla3FxUXBpSUNNZ0lTNFVMcVhobVcvemVHSHFSK25XN29vdWg4UlhBTDV4Zmx5YjhpQkxmQk9mQW9HQkFNRGkKQS9hYm9lN21DVVovMi9vNFJwZ0cwbzhrL1pRS2lqQ1RZT05wNUt6eXhpRElDVzNPb2ZQYVhuZ3hkb0ZrMTE4SQpnNyt1eDNUOWtEamFEeFJaVFhOVFlvMFhiWC9sdkEzcFZqamVORGhSS1lGVU5naWd5VXhaWTBqK2hxT2pBVVBlClNNU0ZrUmdackU3L0ZNODdQdVgxdFJhTnBCVmQyblFTbXpEbGp3MXZBb0dCQU85eFc1SlhGbHJWTTMwQlZrOXgKOHFZaXpvVm9wNTdtZkd5UWN4ZkRhWXFoWUk3bU1LNS9RZU1qUGxtVi9RWGhZUXFtM3VqMGpoRjZmRkhDbDlrWgo1UUNWaTZ3VnlEUm8rYWd2QlFEL0F1MkwrSlIyWHZ6c1hwRVdLeUpPSVR0VThUTkc5dUN6ZHI1dUJGVnZ5alNqCllsNlBPVDFEWUV5QU9PZFdEbk56Q2JKWEFvR0FJSDN5YlBpS3J0UFJmQzdOdjdqN0syRDYxMkpEMVV4eE92MlkKdExhQjd5QjJmODh5eDJ5bm00eU5uWEczcE5SMzgycGJ4MDZLQ3dzcjRHZmJZbklvdWVTeUZWSjgvNjZUbjBSUApZZ1VNaHZBbExjUWgxaEkvMXJ5NEhQUERlbzFiQ1RQSXpsSXh2djJVS1RxUEp0bTBIc2psV0lkRHZOV3lseHNMClNaRmlKOEVDZ1lFQWdLcDVpM2lEYVFiU09MSTFqa1ZxbkdHVWRHNmdpYkkrUU9KWmNOc1FHY2VPZ2Z4b3JkZE4KQ1ltTEZPR25PeDV1UDVVdE5HOUdqWjZOMWVEckhWTzl2RS9hVWxoWUk2WHFDa28xazNWUHBteldyK0ZpbmRhOQpiSjV3bG9KZDR2Rm9jL3A0bXVZY0J6b3dLYWNCQUFzanM3dUxFMjVDVmFtb0c3VU1CYkdnNUw4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVW0zY0h3TjB2VGJ6OHNrSzlUM0lTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJM01UY3pNakU1V2hjTk1qY3dNekkzTVRjegpNakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2pNbC91VWsyalh6SmkzTWxuRUtlNDBWRkNXN0VBMmNRNG5XdlhxdkYrd2FOV2NxNUQKWkQxQjRnK1E1Z1lZQXR4ZTJvbmxrQmtvT0tZQzkwV1kyZEpOVGtDTnZiQXY0cENCTm5PUnZGK013bitlL213YQpIVXErN3dDZTYvODZ0SkU5OTh4KzVWcVFVQTRJbnRZcERIRnhpZWM2U29oSnJmVmRaWjd2dzhmVC9rS2hvVmU0Cm9NUEROaFlBeUJpeUt0RW9peGdENnFBTjFMMU9OTVdKRHh0cTlpTEEybUJXalpzQzRvNGQyR0NCbERMTFYxRjgKOFZseXJJaStrMnpsTW5Fb21mSDY4cmJhMzU2d0dCREtyeGtVeXN0NUhmVVVobDd4RDBYTGxlSkxPVlh5Qk0xLwpFQm1RQzJBSmhpS29BMXlLNkhkVlU1VkNiYkp4ZHlkL2tqRGpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVKM1hnNDlsMXNTcE5PeFBCTHQ1MEVxS3lJTTB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFR3h6YU8rRWVTOWFRTXRhU0VHeW1YTTR0Rm1zdzczakpHNnJ3VGlBWXJ4bS9PVWgxY21JV2J2Cmk3NzZLUncxTU5sWHRHQW9LeXRDTndkbWNXK3N2QllLeUFteFhRTURuM2VhNU5yS013bEU3VDlYeTI4ZTVnQUoKUnkxZ3VOOE10TGdyVklrczZXaytteGEveHFZU0hiSzFNVzBvN3dOT282WmhKMmlTenBKemJtL2xTNkhPK3NlRQpuTzlvOUlYZzF1M2R4UkJJN1A5M01ocVB3UEtjMGpmUlF3T3g0M0Z4VnIwcnhEM1U3c1JRVjZybzM4elM1d0dZCnJydm1pMisrWFlaSW1Jc0VGNloySjkxWWdLUzIyQjhkdVB2UUh5V1pETmRvYTYvZlorSlptemRaZEJjbklTYXEKQ2VSR0FIT0FVNmRRUWJyaUYyRGVTeW9IVlYyTlF6ST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lSQU5zbnkyWW4wVy9KaGx6QmN0Uk9Ubmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU56RTNNekl4T1ZvWERUSTNNRE15TnpFMwpNekl4T1Zvd0xqRXNNQ29HQTFVRUF3d2pLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzdmaWt0dGYrYWhzcjgKdXJ5b1A2bXhUUUV5ZTA0SGRJbDFtanZvM1BnRi9PaW1QSldCdzZYNmYvT21HOFk5Um44d0I1N3N5UEp4eUxuRAplRjJmaWZWV0ZQeSszWGl6YVdKZTdSUUZvQ0djSG1FUFBid29ISjhKZkkraEtuNW85dG5tTnNxYmxyVHFtZlZaClZnOHpWMTYxNVMrNDhhSTJER1hWQ1hhZnU0TEFrYXlJeVlyNlFIU1I0VzVtbXRrblpSS3B6SGJ2c1V2c0NJekIKWTEyNWFQR0c3UjdNdCs5Q2hjem53V1FuSjZhcU9aaTVkL1V5STVPdFF6YmkxenZETWZyc2hGUFJRcjIxbzRURQpOQnhiS1Ivb2xJVFVBbWZtVzRBZUV2UkNSQ2NDdUlmQmhGc0hFQTM1TUVrNy8zakkwK1piZVphOUhTMkwvckZWCnloaHdYVWVCQWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQ2QxNE9QWgpkYkVxVFRzVHdTN2VkQktpc2lETk1DNEdBMVVkRVFRbk1DV0NJeW91YzNSaFoybHVaeTF5Y0drdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBNFpZYTVUeUFrUmNub3FzS0UKNlBuWWxnUGIwd3FCZzg2VDFGY3lERm1hNUpZMmY5NHVFRnM3Ry9BanlUcWdzY0hPdEVXL0VsYzdjS3ZYS0VOTQo3Ujg1aEJjcytKRC94MGtqTzhXV0xzQXg2Q21hdGRCUDNVZldEVWo0dEh2WjBuSjB0VU90ek4xT09ncnNPQ01ZCjdmektTY3FLWTJOSXFMRjl2UGcrbXNtMHorYWx2N29JdEFScjVrWG1DclRLOXMrcm0wbUxxa1hySnVpVlc2SDIKenhqdFgyc2ZZR1lMTTBsbE8zRVg0MWpsZjlLVVhZbUZZSFo1OE9Rak1GNUl2OXZFb21KbjRhZTJadGJDRWdVcgp3R2Z5enFibVNVWFZLZUFodlphSEE4YTNzUG1vV2pYbFBHbHJVbnRtd0lIVS9MTFlBcXBIVEFkVXlCR2JrdnJnCkVpQ1gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTM0cExiWC9tb2JLL0xxOHFEK3BzVTBCTW50T0IzU0pkWm83Nk56NEJmem9wanlWCmdjT2wrbi96cGh2R1BVWi9NQWVlN01qeWNjaTV3M2hkbjRuMVZoVDh2dDE0czJsaVh1MFVCYUFobkI1aER6MjgKS0J5ZkNYeVBvU3ArYVBiWjVqYkttNWEwNnBuMVdWWVBNMWRldGVVdnVQR2lOZ3hsMVFsMm43dUN3SkdzaU1tSwora0Iwa2VGdVpwclpKMlVTcWN4Mjc3Rkw3QWlNd1dOZHVXanhodTBlekxmdlFvWE01OEZrSnllbXFqbVl1WGYxCk1pT1RyVU0yNHRjN3d6SDY3SVJUMFVLOXRhT0V4RFFjV3lrZjZKU0UxQUpuNWx1QUhoTDBRa1FuQXJpSHdZUmIKQnhBTitUQkpPLzk0eU5QbVczbVd2UjB0aS82eFZjb1ljRjFIZ1FJREFRQUJBb0lCQUNUYWpabVFscWQzSzFzMgpFWE00NEZBYmhNcTVkZ0w5SXkvY216NFFnU2djS0ZiVXZjWitBSmdXb252YUpjTlJvaHA4eFA1aUdWWElVTXRkClUzblNra2pUWTBMWklhcVNZbVdxVUM4eTVLaGRTRkxJbmIxOHNyNFluOXJjRVhEc1pMUmR2TUdNaEE5QkovcmgKY2FkejJ3Z0IvcmxwdGFyT0VRNHBDQW9wdjIrK1crSVNVREtnU1hlemk2aE9zeGdBeUZWQXc3UUtCRnhGeTVOaQpaSjh6Z3c0dkhDQ3J0Ylg0a0ZoNnhVNDlNaVF5WC9nVU9rRGZuK3huTGZkRWQyVXFabE1MeVdkNURtcmN4NEZpCm5HNnkzMGV0eXg2eUp4RjBRcmJtcEdYYnVGc1ZlZGI5NlRadU0rd2E1STdoak8vRkpKRnZJM1hkYnBBLzhXaHYKVGRMY1BHRUNnWUVBOXA4Z0JrQmtWVXpoUlJpTWlDeWNEeVR6SExocjFOVmkrd3BhNHpVbmxMWDRmYXpDcC9FSQpqdHJKbkZjK0NsQmQrM3JDcGRCMStrQXFIT00xSXpVeHZjYXRpT0RVTEpqYWx5NXg2QWxYT1VUMFBEbzdXeCtmCkwwemVtRlZGK0x6UWZLN2pISWJieXFqbGpFUzZLajFVcUFNY0FkdHdNa3FiUnZycEdzcFJXajBDZ1lFQXdwOXAKOWRLY2tVSnYwYUVvQ3lJT1hOMm9mSUFNK3FQUnVyVnhwUTFmeld2Q3MvZndFSG5kZGF4bmVDUnc1WDZjc2FwQgpYYjljUTdIZ0dXN3BZczV1cVdLdjM0Q1VTWktHMHYzMys4YVE0TDd6R050VkJtekQ4WVpCN1JzT01hS3M3R3QzCk9xMnZPbWVSQ05nbDN6RWRUZC9JclhiSVc0WnFmemE4ZGEwbzZwVUNnWUVBeHZzYWJwRFRveE0xaW5kRkk3WEMKY0dHaW1XQ2UrQWozSkk5MVIyNmlzZFNrV2xuaWNIZ0VMS2FRRmtrNXNENnBwWGFseC8xS3d3KzBLcnlUS2dZSQpUUk1ZL3FCUDhHK2ZwbXo5MEhhQTNwOG80OU1rQXVDZm9oMUdWK2d0WFlTU1BwY29mT0srUVdSR1dRYzJvVS84Cmx0WnphWGd3clJNTzk1VUlNT3BkK3cwQ2dZQjErY3B5Z0RQMmZlNW9oYWRQY0ZxQ2dyOHlrVERNOG1jZEpnWDQKeG0ydmlVWWljQVp2Qm1Cdmg0M0ZMMW5jVSs3S1orbHQyYVVsUi9zUGo4TWI2UVQ5MnR1L3dTS2lvcGJsNlp2YwpYSmJRRmhBb25qUWhTK2RQVGxKQ1Y2YzRBV09QZ09scWdZUjZBL1BRQjY2VmFDRmFabkF3YnBPdm40Q0pFdllVCjQxMnRMUUtCZ0d4ZThKQXVTWmxKY0RWWEp1SGtRaVZubkxZNnM2cjgzQjZBNG5ObHFXcUhneVRnbkFBZ1FuQU0KVWpqVGxscU9TcHpuTlZNWGlVeXV4Wlk0SHgyS1c3aitEbFlaeEQ0bXEvczN5aFhqY3haWmwrMnVrK1VQbDZKNQpEL1h0bU1WclhGNkZudmVzSFJRTUlaU1pqQXdUVkJLQUFia2NjVVM0Y2JtR0Rxc25kdGdpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 116c5324d572329c35dfbd7b101e90092b4096033dfd6a6948963c2584cb7506
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -c
        - echo 2 > /hostproc/ipv6/conf/eth0/accept_ra; while :; do  sleep 30;done
        image: busybox
        name: setup-accept-ra
        volumeMounts:
        - mountPath: /hostproc
          name: host-proc-sys-net
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
