apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.224.0.0/16
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYS9HdnhCTlVLWU5GRHJuQXliZFBxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1qQTBNekUwV2hjTk1qY3dNekkyTWpBMApNekUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3c2QWxCQVVSZk0zZDlreFRDQ2RITlVjOE56SFQyYmlaYkZhMFpKd0hGTWV5NmIwRGwKdzFCbm9RSnBNKzZtUU9uQjFVTDJOb1U2MU9wcWVhQVo0SFV2UksrQjR1N0ZEL1V6WTFnR3E1cFkzTVQ0em03ZApvdkFoUWxidzRFZktNNkdWYW1hSzcxcDNrczBlcFJKUlBEL2taVFV5bjUrY2lTNVU2QVlDY2hVSUFRVU1wbVloCitreVRUclZpck90SG1zb0N2ekh6d0Zvd3R4QVR0cTJTSEJwN2E0ZE84M1gzUVJTT2loditrREV2VGx4OTFGWTkKZDNsZXJtNkZZWnVjU3dPQzhIMzVOZ3RIL3ZMUkhKbVJ4WTJqNnQ4UnZYTm8xdzUveStwK1VKNmZiaEdsc2tTagp3VUZGZ0JvQlNZeERiSHF2ZWtRSUV2SjhhUWptSlhZd3FwQlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHQlVrNElsc0hmM09rVEpLMDk1U0VncVNrMzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFENTkyS1J0M0hzSWduemE2MDd1TGR0Q3RsWEsxRndlMVd6c1hVWnVNaVUveXdpTUtjdXpoaUdOCjRIZHFweEErZVF1c29INWlxb1M3VzFKQWVPQ0IwY0dIcS9pM21LMUpmbHBBdFFDUm81OVY0U096UnJuQk80WTgKcUJqazlKL3Q3SmpLcjZlM0RDZHRTWk9lNzdFcUUvWjJ5YVAxQjVZSmsyeWdXaDJNeXdRQVVtYm0wZVlFdnFNWQpHSmRRaDB3QVZoYjAvaFFhTXc2NnF6K0U4bjJmNDZTbkgvOUprUkhOeGZJQ2lwWHFDZzBXSERnY28xWWNxTEZKCnlQQkhtc25vNDhZRm41TjVsaHo2ODFMcXVJNVRnOHg4M2ZoYjZKa3dKUnZrL1lEOGh3TUpXVkF1eXcxZEZKT1YKbjlVaE0zU3VIc1IxRXNXM0pCajBsbU1Ba3JFYlR0ND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc09nSlFRRkVYek4zZlpNVXdnblJ6VkhQRGN4MDltNG1XeFd0R1NjQnhUSHN1bTlBCjVjTlFaNkVDYVRQdXBrRHB3ZFZDOWphRk90VHFhbm1nR2VCMUwwU3ZnZUx1eFEvMU0yTllCcXVhV056RStNNXUKM2FMd0lVSlc4T0JIeWpPaGxXcG1pdTlhZDVMTkhxVVNVVHcvNUdVMU1wK2ZuSWt1Vk9nR0FuSVZDQUVGREtabQpJZnBNazA2MVlxenJSNXJLQXI4eDg4QmFNTGNRRTdhdGtod2FlMnVIVHZOMTkwRVVqb29iL3BBeEwwNWNmZFJXClBYZDVYcTV1aFdHYm5Fc0RndkI5K1RZTFIvN3kwUnlaa2NXTm8rcmZFYjF6YU5jT2Y4dnFmbENlbjI0UnBiSkUKbzhGQlJZQWFBVW1NUTJ4NnIzcEVDQkx5ZkdrSTVpVjJNS3FRVXdJREFRQUJBb0lCQUVacGhNMW4yTFBmdzA2cgpEUmNTVzN4U2RJdzBkZFZrRUVZdXdZQUNZNVQrZ3cvTm1sSVpSRmFLNG0vSEtOVHBmMkVVSmh2anBYRytMek9FCkIzSmxRWjgzd25kN1FMZ1UydTdDT3RZazFVRkxWZWNHRzJDQ0t2dkI4T0xkRWhYc0tRTlVuMDNyYU9Hdy80MlQKL0U5eklLY2lsV0w1MzhpcFhWU1VLVmd0MmlzZHUxbHhGKzNzeDA0eFNvM3hVWWl0Q0M5TEI1WmlHY0hOR1g0TAphbXUzMmxOM1dRR1o1VWRCOVMvTDk1cGxlYnNjQ3drOWpUTlFrVGlOZnpEaWhJVFExaGp6TTdzbVZ5eUpTWFhrCkNXemFhZk5lWkVmUStXTW0vVzJYYzdsV2R4ckxGbjhrNTBCTjlBZUZCMWRvSjJjQ214Y2QvQ2hyOFk2c3ZEYzUKT1BpTGh6RUNnWUVBME1JY3lrUUpmOXJuZmVrVE13OHN4OGZXTERudnVBN0pKWUZKQmtkZGdXQUQ4ck5OMkE0bwprM3ExY0dHRC9VWnBqYzFHVGFhaHVvLzJwT1pyRk5JVWIraExhL210U1owbEJqT1U5UWpzTDRaSENzdnhmK3FDCkpLMUtrVmRHVUFXRnNkTHFVQjdkZFFnaVYrRkFBdldGQUdnMGh5bm51RSs1TkxBVjFJOU10SXNDZ1lFQTJQQ3EKYnVzWUp0OW1BSktqTFBwODBjdGtFQUhHV01oOFB6S0JxMndoR2Zqelc0OHZIUFpEamQ0YlpYMEdDYzA0WnZaRQpxTVFVZ0VWa2RYWW9zU3h3VUVnYkJOZ0lLTnFOalJ6bTJ4QUhtQVZiU1hyalo1OURsZm1ZaTYxcG92WGRHRmhnClJvTjhBc0NSNldDTTBpNldZZ3paT0l6eVZkV1lDbXlzQzgwYzVGa0NnWUVBcHdsYTdnRW90TFFjbktQZFovS1IKZXoyTVFwRU5IZkkrd3BMRE1wSHg0SzVLR20yY01PK0xTZzVhbFpTQmZ5eFRFMUtZR1ZQbWZwZm8yNk0vTlVhdgpjYWVtaWJ3YkN4Y0JaQWZyL1hEcFExR25FSjJGSER3eGJGVjRuL2o4V3RWQVY3d1RIbzdEMW52dXR2Q1dQb2ZqCnB5SzZQUmlydjgrU3V2VFdVdUZpbCtjQ2dZRUF6OEVhMXdKWnJOQ0FkTWY1Y05lcHRaaGNpVi9KdmJpeUZDdWcKTnJSa3R1VE0yY0F6MUQ2YXowQUhhSmZrc25wUUszcG9vbDYxYTJvSkhOdzlkLzhneUNGbGpxdjhsSE5JMy96dgpzSmFYVHlUQ0dZcVFRT29xNVhPVWZSOWpiT2FjQi9hS3JMeTZoRUE2L0E2MGpZeUVBLzVlQUdRcXA3elgwQlBtClo1N1VybkVDZ1lFQXVqZnpFdzVqVTFQS1JvTGlWMVNsYUJLMkJZcWp2ei9YL09SejNsOS9DZUV5ZThNRmdpOHAKMCtUL1hpTkJ4UDV3eU9WT3VIMFZOSFo1cXpvYWkvNUxzZ2xtUTI5NjVkTDZYeTF0M1duN0hnU3JXN2VVUWxSNQpFRkI4eGVRdmgzMytyalhnQWxvbEp2eCtQN0N3akJINjd6QjdlSDlWd05Oc0tQdjdJdW5McXNrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYS9HdnhCTlVLWU5GRHJuQXliZFBxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1qQTBNekUwV2hjTk1qY3dNekkyTWpBMApNekUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3c2QWxCQVVSZk0zZDlreFRDQ2RITlVjOE56SFQyYmlaYkZhMFpKd0hGTWV5NmIwRGwKdzFCbm9RSnBNKzZtUU9uQjFVTDJOb1U2MU9wcWVhQVo0SFV2UksrQjR1N0ZEL1V6WTFnR3E1cFkzTVQ0em03ZApvdkFoUWxidzRFZktNNkdWYW1hSzcxcDNrczBlcFJKUlBEL2taVFV5bjUrY2lTNVU2QVlDY2hVSUFRVU1wbVloCitreVRUclZpck90SG1zb0N2ekh6d0Zvd3R4QVR0cTJTSEJwN2E0ZE84M1gzUVJTT2loditrREV2VGx4OTFGWTkKZDNsZXJtNkZZWnVjU3dPQzhIMzVOZ3RIL3ZMUkhKbVJ4WTJqNnQ4UnZYTm8xdzUveStwK1VKNmZiaEdsc2tTagp3VUZGZ0JvQlNZeERiSHF2ZWtRSUV2SjhhUWptSlhZd3FwQlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHQlVrNElsc0hmM09rVEpLMDk1U0VncVNrMzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFENTkyS1J0M0hzSWduemE2MDd1TGR0Q3RsWEsxRndlMVd6c1hVWnVNaVUveXdpTUtjdXpoaUdOCjRIZHFweEErZVF1c29INWlxb1M3VzFKQWVPQ0IwY0dIcS9pM21LMUpmbHBBdFFDUm81OVY0U096UnJuQk80WTgKcUJqazlKL3Q3SmpLcjZlM0RDZHRTWk9lNzdFcUUvWjJ5YVAxQjVZSmsyeWdXaDJNeXdRQVVtYm0wZVlFdnFNWQpHSmRRaDB3QVZoYjAvaFFhTXc2NnF6K0U4bjJmNDZTbkgvOUprUkhOeGZJQ2lwWHFDZzBXSERnY28xWWNxTEZKCnlQQkhtc25vNDhZRm41TjVsaHo2ODFMcXVJNVRnOHg4M2ZoYjZKa3dKUnZrL1lEOGh3TUpXVkF1eXcxZEZKT1YKbjlVaE0zU3VIc1IxRXNXM0pCajBsbU1Ba3JFYlR0ND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5uMkNMY1VyZGRLNTA1NnZpaDhUR2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qSXdORE14TkZvWERUSTNNRE15TmpJdwpORE14TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBmVE9BbzNKM0xLWTl6ZWc0RmpSeFBGUUNEZkkKNTY1TTJsMlgxWERZVDRyUURWanY3QTVaY3NmQmNicklXcjFDNERGNnRRVloyTXI5QXBReU9LTXZKNjVBTVRjVgpwdk5waFpyQVFJUm95cjVsQ0lTYlJSRnQ0QXFxVGtUa21WcHFHUnpRcXJtZkZKY1RBdnRDVGdpQ1lIUFc2SllOCk1zQTdRYnNpandtUUMrMVhCcnB0NEdOUEJlWllXekdKbUUvOU5JVGJ4Szh2K1loT2liSEtmQjRaejk5clNMZXgKaWV5VDhiT2ZHcENTcVpnYkRHL2RjZERZQ1N5dS9ubUFSaFNmU0ZvT1pwcytTN1JSOFVBWTZuMGhtOGVNUXpjTQo1UVFuMFpkMlByZWNYeGxHMkJmV1RLS3FxQUdIUnNEVWRUTUQ1Z21ENXVJMzZIbkYxSUt2THEyN0N3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVlGU1RnaVd3ZC9jNlJNa3JUM2xJUwpDcEtUZlRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSi82c3pZNy9yK1VrOTh6V0IyUWI1bHNXYkVJeDhCeGs3M0J0c1l2N3JVaHpoZmYKZU1IV29XTkQzQllpRWRySDc2WlZ3UTZVSFE1V3lVOXB3VFNPb3NpYThTcGVjL09tYUVWN0NRZmFmQW8wSytqVQpPUTFIa2VMT0d2UDE5RmRBYzIyRCtYeGVpL09OY1h6b2xxc2pQT3VzU2J2a2ZFVlR1NmdZeU80S1BldWpEOVd2CjBVR1JDckZHWGM0VGtIa25BNkk4b1F6bWErV2hDYTFudHVHMHdiZGhJL0VHbHlWcXBESGNPRHZ6elI3b0NFMTEKY2hOYUNaQURCOUY0M2VCUWQvSG9YRUZVSXNFL2lNWEFYMlRQcFJsTitpUW1WanRlWTQ3UGpRZzg2ZE9HNDJOVQphZ0hKdlhkWlhBMjAyRFBuMWxTNDRYRU5oVW8vZ1cvMEYycmlUNTg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMGZUT0FvM0ozTEtZOXplZzRGalJ4UEZRQ0RmSTU2NU0ybDJYMVhEWVQ0clFEVmp2CjdBNVpjc2ZCY2JySVdyMUM0REY2dFFWWjJNcjlBcFF5T0tNdko2NUFNVGNWcHZOcGhackFRSVJveXI1bENJU2IKUlJGdDRBcXFUa1RrbVZwcUdSelFxcm1mRkpjVEF2dENUZ2lDWUhQVzZKWU5Nc0E3UWJzaWp3bVFDKzFYQnJwdAo0R05QQmVaWVd6R0ptRS85TklUYnhLOHYrWWhPaWJIS2ZCNFp6OTlyU0xleGlleVQ4Yk9mR3BDU3FaZ2JERy9kCmNkRFlDU3l1L25tQVJoU2ZTRm9PWnBzK1M3UlI4VUFZNm4waG04ZU1RemNNNVFRbjBaZDJQcmVjWHhsRzJCZlcKVEtLcXFBR0hSc0RVZFRNRDVnbUQ1dUkzNkhuRjFJS3ZMcTI3Q3dJREFRQUJBb0lCQVFDSHdwMEhSN20waklPZQpyNGpHS0lpVHFWb1B4a3FSak1KREhPdlY1eDduNkNGNXovMXJqU2ZIc1dUamJseXBWK0lMWjlNcGhDbEJwcGdOCmQ5ZzFpVWN2aUZ3WHRyKzRjWUxWRW1pb0R6WlhpdDkzcjQ5YkROY1lYSzBjNlMxTUFBdkU2ejMrZHdKblpQeTEKRzlVVzhpZWp5S081UjNXSFVJZkFqQW5mcGRaUDd0OVpLQXdHSFJYVE9tQm5YRTVHTDFKVmRvOGhpUnZhcEVzVwpuMFJJcG5MeWU0azhPSHJrNWJEQndjcnBtQ0g4OGpaY1JqbmE4a3ZrWTBJRE05TE1QN1p6dHJ3NmFKUWQvb0VqCkRTYkJCTVNyRnBUVkdYZW84NWF2cGR1OW16SzJSRDBWaThqbTFvSlpQV1pDQW5WV3lnVEVwR3pwQjFwUHprNksKVXI2OXk3Y1JBb0dCQU9kQ2NEdU02RUdmVHB0d2tHVml3U2p4UUl1NEgzTC84OElrME5MWUFiRnJvVGFxT3hsOAoxUW5nb3Qzc0llNENtV2RFMEh4ZkIvNnJxcGw1UWI0R0FmSEZMelVVU3pnRnNNTlVYSzk5bWRpN0tINEd5ZjhmCkg4di9kVDc5eGdmYWtkTmRqemtjRmpEa1cvd3BYdi85alV1ZGRQckRJQVgvcTZjN250bVpsZVdKQW9HQkFPaHEKN2NTYnRtQWVVcWU0WHJkM3orbHhvRkJRZGdUc3hiMzBmVmgzaDZnRUZFaFp1c2VKaWhFaWpRVXV4cmxCKzJDNwpKUE9Fd042d2RtRlZFbW5La25vcXozWDRYUEw0RUIyVkJ2aHJ6ek5BWURyRUttM044WFV4RUp3blp4TnZ3cW00CjRqeGNTNWFHNnZuT3pXZjh4dXI3VTVxQ3ljU3haamZTR0wyNUlZcnpBb0dCQUpxa0lzaXZnTi9nMTMrNTFkVDIKSkpSc1B1MHZRbGgwTDF3em9qQmJvVVl5NHFyYlNvblFuK1RyQWYzRVdTdi9NUFdOWHB6TUwxeHREcmR5RGpRegpjRGxyMGhWOGJKQVp2Z25mNzlxcDhxYXJBSGpGc1cyWU1uc0hhQytuSXpVOVF5WkQrZklHaGhCTG8vY0s4eXZiCk1SRFBTZG9sZ05TQ0V4YlJGM2dLNitHQkFvR0JBS2VpQUM2UGRPSXMzTWIxMXZNVGFwVmdqQldCZ3k0WUxLUE8KaE4zYkVMQWhpUk9LRElyQTdDRmh2ejdldHh5RnQ2N1VMRm1zQllSWTJIbHBaNmVBSVZnV0twNVc3WXVkV2RwTQpVOE8zMXJHTG5CeW13a2VDZzhaWUJqZnF2NUNvU2tvcC9KczJvcHBHWTVLY0UxRU9ZOWEyUVYydk9hSXhwWjFiClh0YndnWDM3QW9HQU9aMXpyS201U3hQc1ZwUHdXeFJFanpYeURGa1ZUcXY0eTBBVS96d0s4d3JhNnIyM0ZXWFAKTjZMcThUbEdXMGxIczRDQWY5YlVpM3RFSlJqTWROUFVFTysySzgvMWEzWUxSUzRwQi83RmwyWlFqam1GcWo5TwpwN1J5WGp4NDRBbldDTUFMVG9GNmNmWjBCM2NaQUk3VzdOOG9KS2l6VmVpL3hUV3BGVjlaSnl3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYS9HdnhCTlVLWU5GRHJuQXliZFBxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1qQTBNekUwV2hjTk1qY3dNekkyTWpBMApNekUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3c2QWxCQVVSZk0zZDlreFRDQ2RITlVjOE56SFQyYmlaYkZhMFpKd0hGTWV5NmIwRGwKdzFCbm9RSnBNKzZtUU9uQjFVTDJOb1U2MU9wcWVhQVo0SFV2UksrQjR1N0ZEL1V6WTFnR3E1cFkzTVQ0em03ZApvdkFoUWxidzRFZktNNkdWYW1hSzcxcDNrczBlcFJKUlBEL2taVFV5bjUrY2lTNVU2QVlDY2hVSUFRVU1wbVloCitreVRUclZpck90SG1zb0N2ekh6d0Zvd3R4QVR0cTJTSEJwN2E0ZE84M1gzUVJTT2loditrREV2VGx4OTFGWTkKZDNsZXJtNkZZWnVjU3dPQzhIMzVOZ3RIL3ZMUkhKbVJ4WTJqNnQ4UnZYTm8xdzUveStwK1VKNmZiaEdsc2tTagp3VUZGZ0JvQlNZeERiSHF2ZWtRSUV2SjhhUWptSlhZd3FwQlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHQlVrNElsc0hmM09rVEpLMDk1U0VncVNrMzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFENTkyS1J0M0hzSWduemE2MDd1TGR0Q3RsWEsxRndlMVd6c1hVWnVNaVUveXdpTUtjdXpoaUdOCjRIZHFweEErZVF1c29INWlxb1M3VzFKQWVPQ0IwY0dIcS9pM21LMUpmbHBBdFFDUm81OVY0U096UnJuQk80WTgKcUJqazlKL3Q3SmpLcjZlM0RDZHRTWk9lNzdFcUUvWjJ5YVAxQjVZSmsyeWdXaDJNeXdRQVVtYm0wZVlFdnFNWQpHSmRRaDB3QVZoYjAvaFFhTXc2NnF6K0U4bjJmNDZTbkgvOUprUkhOeGZJQ2lwWHFDZzBXSERnY28xWWNxTEZKCnlQQkhtc25vNDhZRm41TjVsaHo2ODFMcXVJNVRnOHg4M2ZoYjZKa3dKUnZrL1lEOGh3TUpXVkF1eXcxZEZKT1YKbjlVaE0zU3VIc1IxRXNXM0pCajBsbU1Ba3JFYlR0ND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lSQU1vcFdsTmlTeWJQZSs3cGZXMGsyWHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qSXdORE14TkZvWERUSTNNRE15TmpJdwpORE14TkZvd0xqRXNNQ29HQTFVRUF3d2pLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREpmQ29sK3dZZTZCbzcKNUJmT0diRzNzaDVVVzNudUk3VTUweTNDbFVkMFI1SVZYTmRSSkZORXV0UW4yRCsvY0RlQmpxTFh0YUhoZzB1ZwpOWjNJL0ZHNXZoMnFsd1NmSDlmOG5CY0REUW82eEtzR3g4QjkzZmM5ZzVQemdURnd1VmFDcXpBdkZ1dGVXdEdxCjlERU5OYlROL3ZMTzdHQjRSeDJ5R3hhQ2lRM1c2Tjlid2VFVHNTamZvVnEzdWc5V1VoYTRSdUFyOU5sbUVmL2UKYnhMM3BESFF5WVd3dTFMMG0zMEd0MUxRRGphV0ZLN2F5Z3Z4b1Vmd1gyQ3dVTEh2Skk3bEZTYjJVc3FzTE1PbgpyazlrUEtFVFlJOUdLb0hmalhCWTl4dEhHRmhhUHl6K215YzJBM1F5eDZRd0R6cEw2TVdNT0xROXl3Zy9qakNyCnhvODJHK0Z4QWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQmdWSk9DSgpiQjM5enBFeVN0UGVVaElLa3BOOU1DNEdBMVVkRVFRbk1DV0NJeW91YzNSaFoybHVaeTF5Y0drdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTmNzTk5ycGN3eHc2dGJVSXQKWEFuelg1K0xuZWlOUzFKQ2oyMGl3ZEtJcVU4WTdQQUhRemdBWHhGZkdHK0l2b0RmRTlsYi9jaGZZdDhmQU5zbAp2MGcvMmZRb0tzVld6eG4vYUZDL290dWtqVFlqRUdzcnNoUUNMeWFTMCtKbjBQYWVWc2NVVXFmM01mT3hJWjRUCjBxalREbDI3dG9MZEFlK3BnTWF2M1BSa0pMSWxUZ2lRTHRVVEpiMmNrdlM4QTR2ZzRlNG1IMmNnM1NKVURIQjcKTTRGSHlnbFlvQjgvWmNoUEFDN3gvZWVRUExOYkVYUmJQTWRKT2RwM3VKNkpJeUVydHFYdHU5N0VqcUxTMk9KdgpTVGk0NFgxQmV4QmV0ZGNMZWU5bW9DWWt0SE1HOUljLzV3SzFqOWsycVJxMllkWEZTQXUxSkpHdUlNUjJlVGVRCk0vdncKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeVh3cUpmc0dIdWdhTytRWHpobXh0N0llVkZ0NTdpTzFPZE10d3BWSGRFZVNGVnpYClVTUlRSTHJVSjlnL3YzQTNnWTZpMTdXaDRZTkxvRFdkeVB4UnViNGRxcGNFbngvWC9Kd1hBdzBLT3NTckJzZkEKZmQzM1BZT1Q4NEV4Y0xsV2dxc3dMeGJyWGxyUnF2UXhEVFcwemY3eXp1eGdlRWNkc2hzV2dva04xdWpmVzhIaApFN0VvMzZGYXQ3b1BWbElXdUViZ0svVFpaaEgvM204Uzk2UXgwTW1Gc0x0UzlKdDlCcmRTMEE0MmxoU3Uyc29MCjhhRkg4Rjlnc0ZDeDd5U081UlVtOWxMS3JDekRwNjVQWkR5aEUyQ1BSaXFCMzQxd1dQY2JSeGhZV2o4cy9wc24KTmdOME1zZWtNQTg2UytqRmpEaTBQY3NJUDQ0d3E4YVBOaHZoY1FJREFRQUJBb0lCQUFsZ2QrMndrd1paTXU5YQpuQ2tCVlI0QmNodm03ZlBCUWF2aFFoM3VLSmNteFl1cytIQlVTblBHWmgwOG1TcmxwQStwZmJhZ1ExcGxhOTJXCjRUTDdXeXBUeUxtcHNaTmVQZ1VKbHFDVHVNZ25Zdlk3MForSjl2bXI1L1RMTEd2Y2xFUWNoMitKbDRhYW4ydGYKVmZFUmNNcXRkTXRnZ05UWUttK2hoeGlvSERiR0pubDhVQTZHVlEwNG5GQmsvMnllK25zTEZ5QXpqaEtyNlh2SQpCeHVoSWdObmFzWDRDZUd2dG13STByVldCR1k1RGZkU3F0Z0JLQVFzbzNDS2ppWmMvdFZnMHJnSWRzNmtqVFdmCkZvUktRZ0F0M2RSV1ZNU0ZvaEVaLzArZ2tRNTdOZFZTemdyT1oxZWJtN2cvVzBvUU1WRjZRVWxrUTJaaGVISVUKUzZiNXEyRUNnWUVBMFd4bm5Kd1ZpWDcrMnUvY25TRXZCUDlNN2MwcC9QbDBsQUR4ZGllRldzODhaTmFROFNGRwpXSDJ3Q0E0MzFoQmZCSGZHUGVCQWJvUEJQbDJNTVpwaldMa1NvY2kyazZjYzA5bVVySlByallueklqcllOVHpYCnFkV3NQQVBJNmpZOGVjb2tZTFB2KzdmcXFncnlPSFVORmdyeUlGL2F3bzBOMDdxQ210OGRBdDBDZ1lFQTlrdkkKUW96bEJFM2NudXVDeitrUEFCZ3hxajhDRVIyM3c0UzZwR1ZWN2t0MkhZdmUyb3Zhd2RtQVExdUxYS1FqeFl6QwowMklmaSt6UWh2SVRWM1k3Zk5BMjR4emtVL2ZhdkJaQ1A2ZkxtSjdDQi9oV3ZUUTMvZ1FLNFNRWTBNSjAwdzRpCjVPek5uKzJiRDZUd1pKaEpXeGc1d1dPWmxlSndXSjJhdytNT0hhVUNnWUJoWnVyMXd2NmRXWXlOSlh4Vk5JYmEKNnliTGYxMmxCQnk5YlliZ2JsY3V1aTRidEZQcllvK0dQc2J0cURjOS81VkJ6YmROTmd5aG1mUDUzcWFDdDR5MwpTalNwUEdIMllJWWUzaGF4QVlkUDZEWkYyRnFRd0VDS0JCQThSWUpmdEdRQ1BRc1lVdmd0K2dkUm1RKzVSRytXCnJmYVpLaHZqMnBqd3ZkRmEyS1IwblFLQmdGSWFpeVNjUVZBQkFMVzlmcnIrVHpEUjMrU0g0cEdBSFoxQTV0TWMKc051aUxqckZRTUlMOHgzQityNzVpbWlVa3hRc3kxbWFFVGdjOXBxMW9mcjYvL09vbVZOMmN5c0dxZFVmZW5Bcgo2SFAxSUd0MXZyeU41c2gzNG9TUSt2REVraHMxVUM2T1BqRzlESDdYbGdlQ3VKbDBadlJ2MW1nZnR5SGpVQTlTCjVvYTlBb0dBRC9FbFdzY3NXVjd4RTM2MVlsbHNpMnlWdHFqbDljeFBLNEt5RVZTaHROU3R2dHd3cTdXdXEyd0wKa2lJT0JsSTFtd2VPQUhCZGxuaWMyamhUa3VrMVFIMytCd3M5ZDBPcER2bXhzcTNtZUdjcDFEOUU0YjgxbGtqRApyWUpwdEo5UmozMlNXV0ZhS2FUYzlvMDlmeG5MeDhhRHgwQ0pJU2RzbndGSysxOXY3cUk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 116c5324d572329c35dfbd7b101e90092b4096033dfd6a6948963c2584cb7506
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -c
        - echo 2 > /hostproc/sys/net/ipv6/conf/eth0/accept_ra; while :; do  sleep
          30;done
        image: busybox
        name: setup-accept-ra
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
