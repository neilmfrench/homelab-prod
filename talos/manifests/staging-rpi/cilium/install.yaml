apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpIeldGRGxpRDhCWDhGWm5BdDNHTE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU56RTRNREl3TTFvWERUSTNNRE15TnpFNApNREl3TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1ZVo0NldhaEkwd0c3dW9CSXpIMUhSV3pFVWduUkNDTjNzcjc5MldCbnNyZWpqZ2QKWlpIYUk1MEZpMlJuMVljOW9rN0FtUDB0TkVaZGplVTBEb3hCOWQ2bVl5c3dFZVJqSjNhbnhxQkhOMWlmYlZVaQpleW5MaWhqM2d6ODAxZWlqNjZIQ0dBejNaZGJmVExTZ2J6MkxlK1lXS1FUbVZvRHR3MmNydFE2akZTb3NBbGNlCkFwZHczckxpblVVaENpSDVHQ09GbmZkQkFjZWxyVU1lanVOL29vR2FRazg5b25TL0xDZE9KT3lPVmgwcFFxdmcKT3Q1dXNEenRXOHBQbVlVeVhyc1VrNFFoODNRRXlFU2VYU0Z1T0cxaFp2MkU1MERkNE52VGlNZU5GUTVtVC8xRwpKaGJzV21STzZRallJNFRmZmEzZ2FocGxVZ1hhOGVWN0VJWVliUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRDRpdG1VcjhnSmZFVTBnZ1RpWUZkbGZZK3UwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzA5WUlqKzZkQmd0OG1oUVdFSXg4K0tvV2k1ZEg2ZDMrOEtWZHZvNm9TZVR0Nmtpajkza1BVCmZadGZxM2hFNzNSMjZiSXNkV1dpRlIwUkFsN3NWZVE2bDV5Z3o2YVl6TkNLYU1FQnVpN0dBRXBOamZCZzliTy8Kcm5MVkJCMDljK0oydEdFY00wQnhxeXk0SU9SUGRiMnpBb2k1WWdlZ1BOV0xQQlNZMTRqczBuVDNqRzUwYVVjVApHSllsUUVRYzZPb3pSN3lNOGFBL2JNaWRwMVRhNGtSenZnWXVaa0tYN0xUTVF3TVEyUjBRQTVrSm1UYyt3cGtTCm5lK2pzMnRwenlEM3lwczR1dk5paEFPZ0pVRWtUck5sam5vaE5KTXFOL0Q0c2FBc0JNclpzSDRDWUtZd1Uzd0wKRE0yWG1NR2wvdDMwWEpsNXVJSTRJVTZWSGFCcW5abkoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNWVaNDZXYWhJMHdHN3VvQkl6SDFIUld6RVVnblJDQ04zc3I3OTJXQm5zcmVqamdkClpaSGFJNTBGaTJSbjFZYzlvazdBbVAwdE5FWmRqZVUwRG94QjlkNm1ZeXN3RWVSakozYW54cUJITjFpZmJWVWkKZXluTGloajNnejgwMWVpajY2SENHQXozWmRiZlRMU2diejJMZStZV0tRVG1Wb0R0dzJjcnRRNmpGU29zQWxjZQpBcGR3M3JMaW5VVWhDaUg1R0NPRm5mZEJBY2VsclVNZWp1Ti9vb0dhUWs4OW9uUy9MQ2RPSk95T1ZoMHBRcXZnCk90NXVzRHp0VzhwUG1ZVXlYcnNVazRRaDgzUUV5RVNlWFNGdU9HMWhadjJFNTBEZDROdlRpTWVORlE1bVQvMUcKSmhic1dtUk82UWpZSTRUZmZhM2dhaHBsVWdYYThlVjdFSVlZYlFJREFRQUJBb0lCQUVLdm9hOENLQWVYREFQTgpPTnMrcUh6eFNHbmc1aExxNW53VG9SYllDTXRJeVZtemlVTm5GVUZ6VUtKb1UzNHFwb1FvRjlISXpvMzFRem5mCm5FUUVCellNaVhNR21nRDJvSlJYNUw3R3l5R1F3VjN6YmZjUDNveUdSWFY2cGhiT1RvNFE4NzRLTk5FRGpPNHgKRHNCMXQ3b091YXJZVXdBUWtlYzJUQVZPNDV0RmZYOE5Za28zdS9KbFoxRE1VR202OUlMSkprcmp5blY5bjl6WQordGdaVVkxa0pFMVNmYmhKUW83WGMxWjVCZkJtVm9vQ1lvdXhGc3NFYU1zUjlPcHJPenBOMmk5SitBWVpaaTZrCnhnY2tyc0xpazU0ejBRTWlpUUdtYkVqcTMwRlFpRlFMZDZXWUFZNU01VUtMZzVMNVdBYlpXSU9Sa0JaSGNvVUoKWFpNNk1RRUNnWUVBK3ltQUdKcTFlc1lSSlB1cWNvUkIwR0NGenR2dWRmSUdtc25aVDlOUmlQOUtpV1VmTTdYYwpPeWxLazZ4czBNRTBuVzB5S3NvdUkxMXp2ZHZHZ3pDbmFnSFQwc0V0UlZMRlpyb0U5bkUyNWppT2V0M2dJdE5tClJsNDlKME1xdHllU3FxRWI5cFpSSTR1dXB2WUtjeWVOWXFiTTAxYWI3ZC9GdERqay9Ua3h5STBDZ1lFQTZsUWcKMDdGR2VVazZZQUkrMmFSMEM4UitwVGxTQWFOTEFNZ3pEbmdTeWlKbDAzYXJVeXdKaEJjeVdMc3VReGpuZTdJNwovMUVndTlsTkRaSTlEd0tuSTlXVGtiQ3J0ZXg2MlJlM1hXenFvK2g1aEdoUldRcklrbFlwS2c4T3JoQmtRSkJRClRuODJubmJmMXQvVmRGUmdSVzlwQkxic2NIL3BlREJsOTdTeVIyRUNnWUFjN3pVQW9LSVRtTW5VMXVGVi9BS1EKL08ydFhRemxyWkl4TnR2QUpIb2FMRDdzQVNoTkRzQm1XR1Z0Q2NvbmFucWpRRGN0VXNscDdaUXQ1U25EWjFHQwpGdC9PUWM3elU0dkdQOXZlZ0VCdzJVY2d4SHJUeUVMYURIVkRGcXZQR2RIOXNqM0VkS0M0VlprelJ0a0JWeWNrCm5FNndjaVBZalpUN0pDck5PVStRNlFLQmdRQ2xhdTRoZ3F0MVF6UnFRaXVNQ0lQREt0c2NWL0tFSlhuMCsxN1AKZ0FRRG5YUzBhcmxXNVdkeVQ4M0N4YUJLelhIYjZGNWlSaXNOY01Ec0s2ZmV5TWlraTBpNU9EWi9Ib2s2WjN1UwpBQ2xEdkFETWI3ZTlXOWRyTmxlbzBTaFR5RTU5SldNTGh0SlAyeXI0ek5vcVhNWDVQa1NzaDFVeHRacGl0Z2ZGCmJWSE5BUUtCZ1FDRjdsdVlFVmVabWUvNWZoeHVtdHErRG9VSGRkRkc0a28xZmoyQTZqcEFVYWd5R1VJMEphb2EKZDh1Q0JUUXkyUGtwbTFmMzlLMTR5QVRvUWhYbzVJNE1SUXlRMkNueGlKZytmOUhBODJvMUpLOHc4UWMzV042VQp6MTJub2lSb1h1VUtHY1FENUpRQWErUy9tWFgvd1BCdGZ5NTVqSTMyVFliUm1Bc1pwNS9Kb2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpIeldGRGxpRDhCWDhGWm5BdDNHTE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU56RTRNREl3TTFvWERUSTNNRE15TnpFNApNREl3TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1ZVo0NldhaEkwd0c3dW9CSXpIMUhSV3pFVWduUkNDTjNzcjc5MldCbnNyZWpqZ2QKWlpIYUk1MEZpMlJuMVljOW9rN0FtUDB0TkVaZGplVTBEb3hCOWQ2bVl5c3dFZVJqSjNhbnhxQkhOMWlmYlZVaQpleW5MaWhqM2d6ODAxZWlqNjZIQ0dBejNaZGJmVExTZ2J6MkxlK1lXS1FUbVZvRHR3MmNydFE2akZTb3NBbGNlCkFwZHczckxpblVVaENpSDVHQ09GbmZkQkFjZWxyVU1lanVOL29vR2FRazg5b25TL0xDZE9KT3lPVmgwcFFxdmcKT3Q1dXNEenRXOHBQbVlVeVhyc1VrNFFoODNRRXlFU2VYU0Z1T0cxaFp2MkU1MERkNE52VGlNZU5GUTVtVC8xRwpKaGJzV21STzZRallJNFRmZmEzZ2FocGxVZ1hhOGVWN0VJWVliUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRDRpdG1VcjhnSmZFVTBnZ1RpWUZkbGZZK3UwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzA5WUlqKzZkQmd0OG1oUVdFSXg4K0tvV2k1ZEg2ZDMrOEtWZHZvNm9TZVR0Nmtpajkza1BVCmZadGZxM2hFNzNSMjZiSXNkV1dpRlIwUkFsN3NWZVE2bDV5Z3o2YVl6TkNLYU1FQnVpN0dBRXBOamZCZzliTy8Kcm5MVkJCMDljK0oydEdFY00wQnhxeXk0SU9SUGRiMnpBb2k1WWdlZ1BOV0xQQlNZMTRqczBuVDNqRzUwYVVjVApHSllsUUVRYzZPb3pSN3lNOGFBL2JNaWRwMVRhNGtSenZnWXVaa0tYN0xUTVF3TVEyUjBRQTVrSm1UYyt3cGtTCm5lK2pzMnRwenlEM3lwczR1dk5paEFPZ0pVRWtUck5sam5vaE5KTXFOL0Q0c2FBc0JNclpzSDRDWUtZd1Uzd0wKRE0yWG1NR2wvdDMwWEpsNXVJSTRJVTZWSGFCcW5abkoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9tc3VzMzZadUNiNTlKQ3lrNThEN293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU56RTRNREl3TTFvWERUSTNNRE15TnpFNApNREl3TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpERGZKV0dtM0hwdFpDaUtEWUdhU01VOC9pdU8KMTFuTzBNK1N0dHVkUlVNOW05bHAyMTVGbUJQdWlrTVIyMWltd1ZzdXF3LzVlcmRyQjhLdUp1Q1orSTJOL2dpcgowSjRMMEdKeXFvU3dITUJnQlJCaWF4RzZtR1hvQmtsTjFhbXdkakVoNFFsU2FQYlE3dmM3UFV1RUFtSjVPajdDClcxZUtndTdZem9MRk9BemZGL3RqR09rR1oxZDZ6UWxsb1hrWEFEYUVWZTZYVEI1TWNTdVZwN1IwczRIb2tIUXoKZ0t2NlZ4N3RMOGd4UnVwQkR4ZnZTSndtSnhjb2tPZ1NpTzRhQjVKdll1RktoSUp5c3E1QWNWUWlFK2V3NmhORwpOcWdMUjYwc0NXV0JEdHloZVh0Y2NEcWpjNGZaUVhmUktWdXUwNVBiMk9hSXRoL3JyQkwwemZaSVRRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUStJclpsSy9JQ1h4Rk5JSUU0bUJYWgpYMlBydERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBR3pRYnJhdDFHeXBxYjRablFXQkEyZVJnbC9LZUJhcnVkeWtxUXJwOW1SVkMvVEgKRDBVaENTWXlCTjRBY0hDR0JDQ01zaVlvUC9PMG9YL2xvTm82R1VybjFJak9xYm5sRW5GVFcwaUZNaWkxK25MLwpHWDNoeVlPRDNQUzJ1eXNCbFIzWUYyazdROW1hSndEL2xKdnNaZS9qdW1JSDdacHJSMzNENk1sbnNGMHFXdGtwCnJEUExGa3ZqMmtnSHExOFVlRVJpZWpzYW9tUW8yQnl5VE1acTRKYWpLbnRkaHJqZG8xR3AxOGUzSUpqMTUxd0QKWXFLdE00cDlWNTdWdzNtdytNbnBiQ3FkOGxwaUhCUjBRZnl5VzJUL2FVYUxkTFYyaFl2blZzbzJkQnh5bzEvMgpKbXp3Y2RrWEo4WWE0TFg1bFk0Vm5kQjBGenQvNGEzSnZ6bWY4SmM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBekREZkpXR20zSHB0WkNpS0RZR2FTTVU4L2l1TzExbk8wTStTdHR1ZFJVTTltOWxwCjIxNUZtQlB1aWtNUjIxaW13VnN1cXcvNWVyZHJCOEt1SnVDWitJMk4vZ2lyMEo0TDBHSnlxb1N3SE1CZ0JSQmkKYXhHNm1HWG9Ca2xOMWFtd2RqRWg0UWxTYVBiUTd2YzdQVXVFQW1KNU9qN0NXMWVLZ3U3WXpvTEZPQXpmRi90agpHT2tHWjFkNnpRbGxvWGtYQURhRVZlNlhUQjVNY1N1VnA3UjBzNEhva0hRemdLdjZWeDd0TDhneFJ1cEJEeGZ2ClNKd21KeGNva09nU2lPNGFCNUp2WXVGS2hJSnlzcTVBY1ZRaUUrZXc2aE5HTnFnTFI2MHNDV1dCRHR5aGVYdGMKY0RxamM0ZlpRWGZSS1Z1dTA1UGIyT2FJdGgvcnJCTDB6ZlpJVFFJREFRQUJBb0lCQUNOSnR1YkE3NU5lM1JUWQpKTE9jMkVzSE96azUwZC9KdDRKQ3ZUbzR6Zjh3VmE5ZmJYbnAydUVqWUxBb1V5ZXpORzVxRWJDaWZCMEhJY29mCmpQVlBENHp5K2IwVFJvNHhJaDJMUmdIT0dKbC9iWml5Y2kvS3lwS1gyZmRzSjdWck5BSFpEOS9TT3BuRlBlcHUKYzZCdU1vd3U5SUJxWkRCZytxRVNJZ25lYzdMeHgxczB4MHdaTDNRb1diU2dIM0JNSXNGQVRhdzJmeW5hdHhlagpYTEkvQVQ3RGs1bmJRd0tOckVGVllLVmVQMXU2Q1ZKSERwMitwYWViTWYxd3VwTlpJTlpQNHBCVEFVVTF0eFVFCi9qK3J3bXIyZXp0NkRwNlZsTTlDaW5qNE12QTFhalVlVzVHaE53RmhsbWRkL2lPYkwrUi8yVGhXYnFPNnJSSGYKd0ZiQlB3a0NnWUVBMTU1Q1NzL0l3blY1TEkzQjBjVGt4WGxIU1hoY3g1VDlyNExld29JMnkzTGUxeUtEQzFYdgpjNElBZWpSUG9iUXRuZ1lPUk1KM1hkajRXa3VjREZheWpaZmRWUllLZ1VmMkd3ZFZxRUFtbXl6eUNLQnBveit1CkVzUUI0QlpJd1UzRkxrTnlPYnN4dW1WaDJ0UFdQclI4U3A5WWN0WUxSTlo5OUp2OUZxd1VydGNDZ1lFQThtNjgKS0ZCWkdXQTRVRGJVZTN4N1M4RXVSV01EVmtqcktKQTNldW5xbmxGanhaWktqZUpOS3E0MGdvKzV1eWJ2VllBWgozL0JrenF4bWQwZlA3eU82YjlWeS9mOGozdm5CMEhGQlNPNTBPZ2xBRzFaV0dCK2NvbmdGVHF4T0VoQ09KcDdhCjMrUzFpV0x3NGNxY1A3MDNqY3psekFIcVFGZ0g3bDd6YW9lbUVYc0NnWUFtZVRpKy9LQ0lBa29pNXhDRWk2dCsKaVF0dFVxckxlZ3hpT3VuZ3J6ZHp5Z1YxUWRVOE9wTkZleGIydDByV1FiNDZDajZWaWxXZVMwN1ZYZFIwWnl2cApGQVlNWHFoMU5RLzI5cklVR1k1SjloVWg4TzJva1g1UUh1VnV4TXNxb3VQaVEycW9YbnliRStnSUVmQ1NzOFhSCjB1a0haS1lTSEd2Ukw5eFRKVlZ6ZFFLQmdFSDJyMnVvc1JXZWdMUVN0eTRDYU9ucjNsTXk1YTJNbWErbnpmQzcKeFFMZTBtN292ZEJ0U3VIYUZKK1J5OCtJZ0lhYkhHODZVYk9LWlRiL2F5eCtaRFFadC9nMGUrWW52dnlnVkVzcgoxcVFUOEVWLzhGMFAvT2FZRVptZWVIK2gwWXZnblYxZU5hYjBMT2JDNGxEVmcxQXArRHpTS0pMcFlQOFRCdGh0Cm9Gb1JBb0dCQUp5Z3VWRVdFc3YzQnZUTHZJM2NBMTVIcE1ZdE1WV1FSODdvakNpZHMwb1FNWTdWWm50V1dDb00KcU5WVnZ0L1VPalg4Znp1aDRVWFNaQ2VKMmIwemFlbTFYbE1VR0tZbVNJMjB4S0pPV2psUENBM1dkTzc2Q1JQdwpVSTdValJ2ZlpSZjBwTW9VLzIxeHpYTlVEcWtKWnpnN0ZGN0dnWStXSlhQTWgrTXFOV1ZCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpIeldGRGxpRDhCWDhGWm5BdDNHTE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU56RTRNREl3TTFvWERUSTNNRE15TnpFNApNREl3TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1ZVo0NldhaEkwd0c3dW9CSXpIMUhSV3pFVWduUkNDTjNzcjc5MldCbnNyZWpqZ2QKWlpIYUk1MEZpMlJuMVljOW9rN0FtUDB0TkVaZGplVTBEb3hCOWQ2bVl5c3dFZVJqSjNhbnhxQkhOMWlmYlZVaQpleW5MaWhqM2d6ODAxZWlqNjZIQ0dBejNaZGJmVExTZ2J6MkxlK1lXS1FUbVZvRHR3MmNydFE2akZTb3NBbGNlCkFwZHczckxpblVVaENpSDVHQ09GbmZkQkFjZWxyVU1lanVOL29vR2FRazg5b25TL0xDZE9KT3lPVmgwcFFxdmcKT3Q1dXNEenRXOHBQbVlVeVhyc1VrNFFoODNRRXlFU2VYU0Z1T0cxaFp2MkU1MERkNE52VGlNZU5GUTVtVC8xRwpKaGJzV21STzZRallJNFRmZmEzZ2FocGxVZ1hhOGVWN0VJWVliUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRDRpdG1VcjhnSmZFVTBnZ1RpWUZkbGZZK3UwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzA5WUlqKzZkQmd0OG1oUVdFSXg4K0tvV2k1ZEg2ZDMrOEtWZHZvNm9TZVR0Nmtpajkza1BVCmZadGZxM2hFNzNSMjZiSXNkV1dpRlIwUkFsN3NWZVE2bDV5Z3o2YVl6TkNLYU1FQnVpN0dBRXBOamZCZzliTy8Kcm5MVkJCMDljK0oydEdFY00wQnhxeXk0SU9SUGRiMnpBb2k1WWdlZ1BOV0xQQlNZMTRqczBuVDNqRzUwYVVjVApHSllsUUVRYzZPb3pSN3lNOGFBL2JNaWRwMVRhNGtSenZnWXVaa0tYN0xUTVF3TVEyUjBRQTVrSm1UYyt3cGtTCm5lK2pzMnRwenlEM3lwczR1dk5paEFPZ0pVRWtUck5sam5vaE5KTXFOL0Q0c2FBc0JNclpzSDRDWUtZd1Uzd0wKRE0yWG1NR2wvdDMwWEpsNXVJSTRJVTZWSGFCcW5abkoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lSQUpyL0gwVGlNYThhWFREZ1I0V0svK0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU56RTRNREl3TTFvWERUSTNNRE15TnpFNApNREl3TTFvd0xqRXNNQ29HQTFVRUF3d2pLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREtjNWRKVFdYb25tK0cKOFAxOUtGc0tMalZQeVNJTzF2UUk4SE04bjhtNUZ2YWtqakZPZm9XajFxcGFMTm03ZUN0ZDFRWS9Nb0hmR3ZzTQppYVBINHpTTzRwcFYzbTBHWU9MeTJ3UmdYRkxuWjdrZ0Zjck50SHU1TjFMMGYwTzRTUXpMRVdtZENHT2d4NjZ2Cmg4ZkREb3A3N3V0bURqUnBQRGVZb0U1V3lMelNCQ3RtcjJ5WHM0ME9WZG5raDcza0x5WXYzdVdmM3JlY2lkYncKQUlkS2s2V1pwQmhra1lycW9jbEhLTmRoTC81eTFVKy85K0FaMktRQkgvMTJRN2hZSlNxcXFhRjZBZEFkTVo5bApiT1NlaXBKZHFKc09JdnhhZldERDJsSmtMYnlnOUlScjN0SXpEdHpFTnBYb3p2UzN4eWswSTJsbDJGT1R0eVdqClVYSjRLZGQzQWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRDRpdG1Vcgo4Z0pmRVUwZ2dUaVlGZGxmWSt1ME1DNEdBMVVkRVFRbk1DV0NJeW91YzNSaFoybHVaeTF5Y0drdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDczVJeHQyZkxZRk9WT2Jzd3gKMXZzQUFHSVhEdEZFc2VVcnJSdzdmL1V2M2hrdVlZeitrcUl4VjNlbnROSDhFbFRZNUluZlZGN3RzWDBXWW1XWQoyVHdGU3h6S0QxRlc0YXY2bEpXTmJDNEl3Z2p3ajdDQzN5N3IwY2U1NFpLNmtJMlA2bjVNQzMrb0J4dElaZFZTCmt0NzJ4TWxZakxiU3NSdHdyS2hyalY2YlhYcXdZRzdVRUF3UHNETnh5UjQxajJqdGs3R0VpTlJHMk54ZldTMFQKc1daeWFRMEtVM3ppVzNMZDhjVnNSbUhLNHFid3RxWVFMY1JkSGdCeU9hSXBEQlRkSytJTmdWcWVLRWFldm1xMAozdE9uUmp3akFWa3dzVFhRLzgwL3VwdThnMExvYi9wMllWejJpelZBTzJGUERoZDVTVUZkZG90Rk1HcktSclRFCmRjM0UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeW5PWFNVMWw2SjV2aHZEOWZTaGJDaTQxVDhraUR0YjBDUEJ6UEovSnVSYjJwSTR4ClRuNkZvOWFxV2l6WnUzZ3JYZFVHUHpLQjN4cjdESW1qeCtNMGp1S2FWZDV0Qm1EaTh0c0VZRnhTNTJlNUlCWEsKemJSN3VUZFM5SDlEdUVrTXl4RnBuUWhqb01ldXI0Zkh3dzZLZSs3clpnNDBhVHczbUtCT1ZzaTgwZ1FyWnE5cwpsN09ORGxYWjVJZTk1QzhtTDk3bG45NjNuSW5XOEFDSFNwT2xtYVFZWkpHSzZxSEpSeWpYWVMvK2N0VlB2L2ZnCkdkaWtBUi85ZGtPNFdDVXFxcW1oZWdIUUhUR2ZaV3prbm9xU1hhaWJEaUw4V24xZ3c5cFNaQzI4b1BTRWE5N1MKTXc3Y3hEYVY2TTcwdDhjcE5DTnBaZGhUazdjbG8xRnllQ25YZHdJREFRQUJBb0lCQUd3WUs3N0h4SkhmaGt6VwpmNEpEK2RnRnRCRlZvd21wVzhNcUgxMVBNN1hQdlFFL3FyUHVlZ3h3b2FSa0xoMGFuSTBOSUxpOWp2cEF2YXFFCkV4NjNBV2tKTkw2RWRGSGppVW1DQjJRcjUxZ0cyYUY0QVVDMERSdG5uck5OQUN0MVZZOVhUTHk3cmZZNnA5cXcKOU1nQkM1QUFrVTk4WmgrS04yVVdzcjFEa1EzUW1LS3duU0VEYU81ZnZpQ2JNQjliRnpJalVHZHhuMDBNaHh0Nwo0OENWZ3k4NTVEZTdzb1c5MUF6czNtakducDVrS3NpRU5sa3hwUExWUFltdHc5N0h3Wm1iS1oyZWd1dGo5d0VwClQxbEFqZm9iOFdGRzZKeEVmV0c5N1VIVzRzYk9VU2xBSlJXU0xPSjVRS2t6Wkc3elJRaHBQa21raEQ0V05oeCsKeTZ2Qmg0RUNnWUVBOEhwNzJiY1pHNjJmVHI5TCt6M2FFenZIMXBlbDJzd2Y4TVFCcFJSRTRRY2VrY2d4dkxOdQoyQVpCNElrMXlTbDJ6bGVjUSsvYmJxYVcranhNYm5JdjBXVTZuVFJkaTZoS0d6azZ1a2hYV0c5VnRFUHFhK0dGCmpFU2FKaDZJS3dpbTRlbmlUQTF3Ky9JNDYwQVhSOFdEclRwaDY0WFJvSXhFTVpYQU55V0tpV1VDZ1lFQTE0VEcKSU5xRE1YUFl2OUZhaW1MVGtCc2NFdEQxQ2NYb3diV0RnMDVhY2lGM3NDZFJ6UWpYcjBYUDBrZjJhSVVwLzJJcApTTmJ3T3BhZ2lic2N3Nms5R2RFNHJmQWh2eXpkYnBqU0xTQ1c1NUFqaHZFanhmR09hT0NzenI4ZXIrM2MyaXUxCkEvQ0puQk1sVTFGZFUzKzZKalNsczFrb2JUNjlYcXVzVkMyblBhc0NnWUFZUGxEa0Z3aHArT3Y1bFdHRWw2eTMKaWF4UTN3THlkdWUxYngwM1ZqN0hiTjlSRlJ5bWlIUmhST2c1U2J2cFpzdTZhNnl1VUswUGo2M2kxbGRpUHhMQgpDbktKVExFdGxpNjZaZCtjemhRNEx5azF2aThRNXpCK2ZxQUh2Y1kraUdYQ21zQ2NxREkreENHbTNkUTdBUmVRClREVjQrQW0xSk03dkxNaXZCcExiM1FLQmdET2VvSm5qM0lKdXZkNkx0VVRxRU1RMlNnNFRzRzByMHVqNm9jcEUKYlJOakFyalZZaGxhNGRZZ1FYdWJNdUNyN0hnM3VhMnhsWTVpMzRhOW8xRVY2d1dSQUNOaEhhUWRpZGZna0k2dwpmSlJ3Q0tKY2hYWDJ1bVpTVWZHZkF5bWVMa1N2TFVjSlNOeHlGWUdVUG1jdWM1YU5DNWNlWnJscnlvMnZUckpHCjBRVExBb0dCQUtTb2dQa0VXMVlrQXdaZ05kQW8zREJicml6T2NYYnFYQllQZi9icXVnL3pHZE55K2VIZGx2Z08KTVVINUZBc0ZkVlJoczAyVDFLNmpFSHd0aCtaVVJBdnFxdlo5Vnl3ZWJUdVFzWFMxbVpoZFJuUlo2TWZiZkMxbQpycE9IMVJCYVZ1SEN5QmJDb3RQOVFqbjd3U1BKTmt1K1hJU1VWdUVUZTB4WGU5VSthQ0x5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 60616c991a6a52865e1cfb3712a555f54be8db7be85b3dc9bca83d798651819b
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
