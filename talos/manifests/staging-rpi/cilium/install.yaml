apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.224.0.0/16
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVVFnaGVxQW9OZG1IZEZwSnVySFZRREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1qRXdPVEF6V2hjTk1qY3dNekkyTWpFdwpPVEF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2drdUtEQ0FiYzJOVkNwSThZREdvWnNxRnBaUjhtNmRqZDRmUmhwdWs5cWJJdlBtUTQKSWNVNTZyNFdmbWVuVUxsSW9IRFYrN3JFbUEzVEpLSi9YelBXSWFvMmFKRDljNStUQzZtb0VzaGcrU2IyT0Y3RwprUmk4NkVqTHdLckZTd3N5MEMxZjVkYjJhTjZEOTlOakd6T1g4Wjhnd2IzNzlWREozbFRHQUhxZmxFTEZTZ0NmCmJmejVqc085b2QyYkhvM2Z2NWtiZFF3NTd2KzZIOFYwTGQxWVpsamYvenp4SkJJNUtKdHNYRkpZbG9PV3VraGEKNFU2bHJNekUrenhjTVlpQVJhNUx1ZDQzUlJFYlNwdmc1Vis1aVBSWDV2dnVyZXY0eFh4VDZTUnFRcGpxZ05jOQpuQW5nZXM3dzVWQkxsL1JOOThMMUt1VHZSR0t2MHlzWEtONEhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhclllZHhIVjBDSlVZcndDSWR2N2tuYW8wdHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHZlIzOEhaeHFrOHVkTS9xb3B2ZnFoYzY3OUJNOTdaM0N2Z2RsRVlYVHk4b2U3aWN1c1ZpZWlqClpvdW4xUWNCc0tyZUJpbXhHY3NEWlU5VUhkRDUyYnU0L2hGNWRXK2NpU2djbkdpaXNLVFhiQ29qTGRvV2ZRazEKR0kvMmF4dHBSc2lKT3NpZEEybmRtaXBxUGo2dEViZCs3YSttL1JWQXl5eDRJRUZyVDVxTklrQ25idnZLY0k3TwpyZjUxSnNhZEg1c2laRU1xK1BhSEF1bDNDMmh1Nk9xWEsxTzFXTFRsdVZ5bllPOXRkWFMrNTRCTUpSK3RmYmE2CjB0V3FhRHdQQVZhSzFmdXloakQzOHdKaWNadVpqOTd3V0MxanRlb0VNWm1xOTJjeVNUWi8vOWE4VFFXU3h0SkMKWDFUT1BhZ0JZTkRmd3lSQnUzckdLc25vdHo0TkFtaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb0pMaWd3Z0czTmpWUXFTUEdBeHFHYktoYVdVZkp1blkzZUgwWWFicFBhbXlMejVrCk9DSEZPZXErRm41bnAxQzVTS0J3MWZ1NnhKZ04weVNpZjE4ejFpR3FObWlRL1hPZmt3dXBxQkxJWVBrbTlqaGUKeHBFWXZPaEl5OENxeFVzTE10QXRYK1hXOW1qZWcvZlRZeHN6bC9HZklNRzkrL1ZReWQ1VXhnQjZuNVJDeFVvQQpuMjM4K1k3RHZhSGRteDZOMzcrWkczVU1PZTcvdWgvRmRDM2RXR1pZMy84ODhTUVNPU2liYkZ4U1dKYURscnBJCld1Rk9wYXpNeFBzOFhER0lnRVd1UzduZU4wVVJHMHFiNE9WZnVZajBWK2I3N3EzcitNVjhVK2trYWtLWTZvRFgKUFp3SjRIck84T1ZRUzVmMFRmZkM5U3JrNzBSaXI5TXJGeWplQndJREFRQUJBb0lCQUZ0NGNRbzloMU5GUGU3eAp1UVgxQkhmUkZ6dm51K0E1OUMwcGEwSTVoOEoxcWFoWi9WTXdnWjVsaDVWZXVvTklhOVBnZVlhY0dKK25FckVGCnZIK2NadllEUldnckZ2VWFhWHVsZUNialZEeFJrZzFPdlVhV0h5WjFtQXBobmFZNEFwQVdvTkp4Sm94RjN3UUUKSituYjgvOEpTQ0dyM0NMc2N2SWI4ZVM5SHgxSnU5Nks2THRTdmpKV3IyUksvMDlZeitvdWl5dDZ1dFkyd2xZLwpPMldGUmRlR3A3TmhaRlhKN1kyWTk1cVU5Q25CL09NZUo4OWN4QWRINEJuQ1Y0dkNyU0k3ckVDOTFyYVgvTS9aCmhoZVA2bFEyb1ZOblloTkVkZVRZNWtuam5QNTNNczF2YkFRT05GQlRXa0l2ZTJQZFdCWGRtd1ordzdrWnBUd0wKcXZFUUR6a0NnWUVBemM0K3lwamxEZ3JOL3g3NURSZkhSdUxwdEwyWFE4cno4ei9KVmV3N3NsSTYraTRkTkd0RQpoK1hYdHhITHNCSXlxU1hPcS9WTHRaeUpEQk9GYlNvQ2ZhYm0rc01VbmJOcDR2VE5ZbTdQYmFDTTY4UHRXVmRQCjZaUlJiN2hlVklpdjYwUXhvcXVxaG5Gcy9GalJMVlFyNHAwNk0waWMzUDlGVlZuREdqSURJaTBDZ1lFQXg3eUcKbzRwVHZRbi9Xd2hlRDF0aUZ0MGpiSTYwTzZSTVZrMXdpeUlMRjIxMmduUjJXMGdETjAwNjVrcGtVVWxZTDB4YgpnZHpjaWkwQ3BuNk1uVVNkU1UvZTMzSEljS2dTTk9EZG5CSjlTTlZmYk11N3FjenozWlp4bWF6cGhraEFYTk9ICjkxaC94VHRkM3Avd1ZNZ2R1ZFBkZlRhNDJJeGJ6T012UjdNaGhZTUNnWUJQUzY4UDJuY3V3T1Q3N2xBaFJrOG0KdGRrOEpXeDUxMkhGRUllZmpvUzF3VTh1QThTRzVPbWp2dUF0ampLLzVWTVZyeGFCVk9MVjE3bEtLTjlZM3ozVQpjaEUrL3hrYlpmeGZVTmt0bXVwYkgrZ01FeEtKUU1YdWhwSVdES0J6eTdLVVlGTUxqVDhIeS80bEFJZWdBblZpClBCZ25tRXV3THI3bEVzL0VjUTZhQlFLQmdRQytuSlRrMTJxb21qVGVYRExmZHZjNkdKbm96SnNGMi9xWjFkZFUKZ0EyVHN2d0k3VG5TVFB2OHQ3QkErN2VXdDJiMzVHZmptN0hBRDhwYXQ2UmJwWkp3MTA4N2NDdTREejBveDN2VgpxUE4xSVdPcXdSYjdxY01Fc2NFQnhqa3AxQ1BRTW5Lc1F3SFVhSjVoaWNMaU5nUGdSbWMyU3BYRzJ0UDB5TTVqCkgza2JId0tCZ0dxQjRNYXBWR3FYdkVzOVRGZmJvZHUxWExETFN4b2JIZEdPWTUyWmdxSXFxNGd3d3NUeTF2bDAKcjJTQ24yZWRVSEx1QWF2bVFaRzMvWUVYaG15djRHN3NNaFBFWDBMYzY4MFRGSEt4bk9temRqT1Uvb1dmdVNZYgprSUEyU2VmaHhZQWlrTUpITjFsY3crNzM5cnRqTXMxSXNUVGZqdE0vc0t2bGJhZHFiSE5WCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVVFnaGVxQW9OZG1IZEZwSnVySFZRREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1qRXdPVEF6V2hjTk1qY3dNekkyTWpFdwpPVEF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2drdUtEQ0FiYzJOVkNwSThZREdvWnNxRnBaUjhtNmRqZDRmUmhwdWs5cWJJdlBtUTQKSWNVNTZyNFdmbWVuVUxsSW9IRFYrN3JFbUEzVEpLSi9YelBXSWFvMmFKRDljNStUQzZtb0VzaGcrU2IyT0Y3RwprUmk4NkVqTHdLckZTd3N5MEMxZjVkYjJhTjZEOTlOakd6T1g4Wjhnd2IzNzlWREozbFRHQUhxZmxFTEZTZ0NmCmJmejVqc085b2QyYkhvM2Z2NWtiZFF3NTd2KzZIOFYwTGQxWVpsamYvenp4SkJJNUtKdHNYRkpZbG9PV3VraGEKNFU2bHJNekUrenhjTVlpQVJhNUx1ZDQzUlJFYlNwdmc1Vis1aVBSWDV2dnVyZXY0eFh4VDZTUnFRcGpxZ05jOQpuQW5nZXM3dzVWQkxsL1JOOThMMUt1VHZSR0t2MHlzWEtONEhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhclllZHhIVjBDSlVZcndDSWR2N2tuYW8wdHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHZlIzOEhaeHFrOHVkTS9xb3B2ZnFoYzY3OUJNOTdaM0N2Z2RsRVlYVHk4b2U3aWN1c1ZpZWlqClpvdW4xUWNCc0tyZUJpbXhHY3NEWlU5VUhkRDUyYnU0L2hGNWRXK2NpU2djbkdpaXNLVFhiQ29qTGRvV2ZRazEKR0kvMmF4dHBSc2lKT3NpZEEybmRtaXBxUGo2dEViZCs3YSttL1JWQXl5eDRJRUZyVDVxTklrQ25idnZLY0k3TwpyZjUxSnNhZEg1c2laRU1xK1BhSEF1bDNDMmh1Nk9xWEsxTzFXTFRsdVZ5bllPOXRkWFMrNTRCTUpSK3RmYmE2CjB0V3FhRHdQQVZhSzFmdXloakQzOHdKaWNadVpqOTd3V0MxanRlb0VNWm1xOTJjeVNUWi8vOWE4VFFXU3h0SkMKWDFUT1BhZ0JZTkRmd3lSQnUzckdLc25vdHo0TkFtaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1Wci9RY0tabkdDZzIxeXkwZGdIQnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qSXhNRGt3TTFvWERUSTNNRE15TmpJeApNRGt3TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXc2U0RqRzNXSlh6UXQ4cFdYMVFJdXo4NUo2SS8KTTU4Y0EwK0c4UGdxS2xYTUdNU2YramFHQXNBaS9qcnBXUXcyRUZRUmJKMktobkxQR2FYcWtsdXhnQmxPNUpZNwpPV1pvZGlEZFk3OFdOd0RkZ3FIWHgwV1Y3dEgyTExCaUpVUVRZbGhUQm44a2xESXhuYlNSMjdGY09SckFIQjgvCjc0YnZsRHdwM1B2UGNDTVkyWWhRZW9jT3pEL2hvK25NbWNlNEJ3M3YwemlVZExxc2tWbDFXaTFpTWd5SGM3MlEKNkVRaVBkS3l2dUtwN29YVUZvcTJmUGlpZ29LVENYd0hxY0RNZUVzQ3ZFaTNBd2RLeTNHL0JGMlFtYzR4M0hFKwo4UTk3M3h1cVNKd0tENnRkMFl3OHJUbVBRK2JMaUxPOEdOUjNvYmZBQTl5b3hxUkpob0UxeWJ5d1F3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUnF0aDUzRWRYUUlsUml2QUloMi91UwpkcWpTM0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ1NJL2hmeTFrdWpJUTU0cHV5R2h4SUVDMmhDb1U5dVNtUUR6Uk1LQU1CbXJYY28KcE95OHdBODhzTUpzL2VmeDJLSFNCWEVPcDVJVGd6MGljMlZPSkRSTThtdWlSWEhkaTZXNFNwUCthRnJVbHplOQozMmthbmZlVjNabDRSZDF4V043Z1pMVTJxc25UQjdGOU1pbThjUkoxUlFxNlFEQWdpMG5SandHN3JPVldOWHYwCllzNEZlV25XMFJUK01MTVl4cHJqMnFiVVZOTVEwNjZicE9Wb3NJZVdSVGdBUmlTSzRUNlVXOE9vSnkyaGthZ3oKNWI5V3FyRDROUTkzSklRS21TRXExSWhURDF1bVFJZFVyaXZjZ0U1WUpQbmw0MFZNNUhCZ3pRYnprYUcxam5FbwppU0FCempxVXYrTXl4K3IzTmp4SStxaHE1NUJTSWRtc09QTGdCVVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzZTRGpHM1dKWHpRdDhwV1gxUUl1ejg1SjZJL001OGNBMCtHOFBncUtsWE1HTVNmCitqYUdBc0FpL2pycFdRdzJFRlFSYkoyS2huTFBHYVhxa2x1eGdCbE81Slk3T1dab2RpRGRZNzhXTndEZGdxSFgKeDBXVjd0SDJMTEJpSlVRVFlsaFRCbjhrbERJeG5iU1IyN0ZjT1JyQUhCOC83NGJ2bER3cDNQdlBjQ01ZMlloUQplb2NPekQvaG8rbk1tY2U0QnczdjB6aVVkTHFza1ZsMVdpMWlNZ3lIYzcyUTZFUWlQZEt5dnVLcDdvWFVGb3EyCmZQaWlnb0tUQ1h3SHFjRE1lRXNDdkVpM0F3ZEt5M0cvQkYyUW1jNHgzSEUrOFE5NzN4dXFTSndLRDZ0ZDBZdzgKclRtUFErYkxpTE84R05SM29iZkFBOXlveHFSSmhvRTF5Ynl3UXdJREFRQUJBb0lCQVFERFdaN2M5c09RbFF2WApxTnNMdnQ0bEVpRWcyUm5na3F3bkJoN0l1Qk5xU0ZkT0YrOWhxVld3bzJlTmtRZDFtZ0xWMVF1ODk2WGRVQUJKCkxPbUhrTFV4SXBRckhYTXZnbmttRXZUYzUyM29LQjRHbFZIZk1UVmZ6UmpSVUtIL2NmVWxDdXFFSHlwSUs4SnQKSldOTENkTDdWaUdqTXZUbFdFZ2JMT1BrT3kvTFdBMjJZSEg3cHQraXNFYjJqQWVaTDNCQlpMVTcvL1hWa0lHeAo3K1JiRTFCdzZHaWMwN2pLWnFFMG1UTVVma1crL0RneTNjYWFxUDdoZlRuOHZ4cmZOK1loWllFTThhUU9KdkZQCngvdFFlNS8vUHJhSU81K2o1YlpoaHkwTjdVdllSVnV4UVVGbHgwVnN4cHRtWWt1QWxVTlBSTmI4TTlhQ0JKaWoKek1MN0R1WnBBb0dCQVAzb2hYaDV5OUsyRmxJRE9idHFkaE5LcEtZczRlSHN1bWVvdmE4cnM2N0tsenVSNFAwRwpBZnFZRUNaUzdra2V6WEovNVp2aXBsM1dMVVd1WDIrMm9ZS2pxVyt1WVYvLysvVGtLUU0rYi9nV1dXRUVWN2lICkVBS1l3eHdHTFhpK2hrV21KdlhrUVFtUng1VHQ4MWNhc1VtbVpVTEttUVFmb2ZGK24yVlJQUUVGQW9HQkFNVkIKSFFtUmFqTVlNV3J6OTZFbnA3UG5VNVhNZS9UUWwyN3RGZUlvRzU0OU4zRHNxVlhab1hjbnFGelNPY2JlSWVCZwptYWJMQVIxaDlnUEdRaG1LNXdjcUUxQzBVTFB2ZGVyUy9ML2pCYTRveWNBLzNhL2VMeVVQTWhvYlVXVjkrT0J6CnE3YlNZMnYvVm5CYXBHaUFsdGZxTGRnVnBsTlZWMHVQd3VYNTA4Nm5Bb0dBTkhNdDd4OHB6Wk16dFNsWmFhK3EKU0gzbzJUTDRUbFU2aEdORkc4UnBUN2dsMlhaZkJhV1NEeFFPY2Z3N29Qc3Q4WE1lR1QrT29sKzE1bWtJNmVqTwpJRkJ5bGRGdDZBalhJVlZvYTNVZ2FCMGx4WGJDTUNvbVVvTC8rdkFEd0tlSzBTUnJjK3Y4eTE5RDNTM3lVSklCCkFYZlAveVlleWMxSEJMM2xhMmFHdFlrQ2dZQmEra3c5Ukg5NTczZWpmOEMvNkgxVjRhVFFtNDYwZkp6THdiZnQKSmxpT3BHZDB3d0xiSU5SekU2eDRtMUdnb29WM2FyYVRrbUFDUUZOcXJEK0NibWxlQ1k3OUV4MkIwRGxQeEY1awoxbjJoTlJqUWZlUnVvQWlZakNpc2w5cno5NlVaU09Cekl4aE9FR2U2ekdPMSsxRVhadUFjSU9nazJXQzQ3aWFUClVhWGFVd0tCZ0huVFNwYjNNeHdnTWZjaTgwNkxpVE1zL3VuS3lrVjc1eERpOTQrcGk1djBlU0ZNWmJiMDQxNVQKemVYNWU5MHlQbVpRVHozTEY3Rmhrb1VRWDBuNzVHZ0VXVGJMWXBMakw1RmRsdUpEQkh1cjNpZldCenczcldsVQpUdDIzSWw3aWVJUjc5c2s5bmZnMkVTQU9pWWhyY05Md3BibzZyN2NQYVZqMmF5YUZ2UGRUCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVVFnaGVxQW9OZG1IZEZwSnVySFZRREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1qRXdPVEF6V2hjTk1qY3dNekkyTWpFdwpPVEF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2drdUtEQ0FiYzJOVkNwSThZREdvWnNxRnBaUjhtNmRqZDRmUmhwdWs5cWJJdlBtUTQKSWNVNTZyNFdmbWVuVUxsSW9IRFYrN3JFbUEzVEpLSi9YelBXSWFvMmFKRDljNStUQzZtb0VzaGcrU2IyT0Y3RwprUmk4NkVqTHdLckZTd3N5MEMxZjVkYjJhTjZEOTlOakd6T1g4Wjhnd2IzNzlWREozbFRHQUhxZmxFTEZTZ0NmCmJmejVqc085b2QyYkhvM2Z2NWtiZFF3NTd2KzZIOFYwTGQxWVpsamYvenp4SkJJNUtKdHNYRkpZbG9PV3VraGEKNFU2bHJNekUrenhjTVlpQVJhNUx1ZDQzUlJFYlNwdmc1Vis1aVBSWDV2dnVyZXY0eFh4VDZTUnFRcGpxZ05jOQpuQW5nZXM3dzVWQkxsL1JOOThMMUt1VHZSR0t2MHlzWEtONEhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhclllZHhIVjBDSlVZcndDSWR2N2tuYW8wdHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHZlIzOEhaeHFrOHVkTS9xb3B2ZnFoYzY3OUJNOTdaM0N2Z2RsRVlYVHk4b2U3aWN1c1ZpZWlqClpvdW4xUWNCc0tyZUJpbXhHY3NEWlU5VUhkRDUyYnU0L2hGNWRXK2NpU2djbkdpaXNLVFhiQ29qTGRvV2ZRazEKR0kvMmF4dHBSc2lKT3NpZEEybmRtaXBxUGo2dEViZCs3YSttL1JWQXl5eDRJRUZyVDVxTklrQ25idnZLY0k3TwpyZjUxSnNhZEg1c2laRU1xK1BhSEF1bDNDMmh1Nk9xWEsxTzFXTFRsdVZ5bllPOXRkWFMrNTRCTUpSK3RmYmE2CjB0V3FhRHdQQVZhSzFmdXloakQzOHdKaWNadVpqOTd3V0MxanRlb0VNWm1xOTJjeVNUWi8vOWE4VFFXU3h0SkMKWDFUT1BhZ0JZTkRmd3lSQnUzckdLc25vdHo0TkFtaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lSQVBrNlEyQWVnQm9DOXY1eDB2dWVsT0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qSXhNRGt3TTFvWERUSTNNRE15TmpJeApNRGt3TTFvd0xqRXNNQ29HQTFVRUF3d2pLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREM0MkpkcFVnMmRjU04KMCtVWkdkQTJySkpkUmZnNmIvRnhUWTM2cnVpYVJ1MVNGeC9BZlp6Q2JTWXhVRFdDNU8yRFJKRUxBY0dxTDNRSwp0ZkI5YXpUWVpwWVpNaEsweTdGbjZuWHVwZ05GelQxSlNHcnE1VmZKdWNUY0J0ZWF2MEx5T0c1cmkydTJGTzZ2CjByMUtLWkp6VjNxcG0vdllPcDZUYjZpb1MyNHRQOGUvM0kzcVQyYjhYYjdYVGlnaERmaVBzY0ZlOU00WDN5NHIKTTliVjdNdnJhSmw4TUlKM0xjNkpsaVRyYWFielkvYm1ScmE2WXFjNmdFS0d5dktkVWkvbjZmOUJ2Tkg2K1EzdQpVVVpxWnR5V2hleUlJK2pEWWwrT2JCK2pnMUQ3YWtoM1pwMzdDeXQxazFzS3AwWENPakpSYTltQkF4OWF5bmtMCkhqZGxyS24zQWdNQkFBR2pnWkV3Z1k0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGR3EySG5jUgoxZEFpVkdLOEFpSGIrNUoycU5MY01DNEdBMVVkRVFRbk1DV0NJeW91YzNSaFoybHVaeTF5Y0drdWFIVmlZbXhsCkxXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBa0U0WnJnTURaNXJ2ZjJZVUcKUDY2WS9wTG5Uemc3VEJ4dlJWZDVXYU5MWkxYZ3doZ2w1QmM4d2s3cVZyb2pRME54NTFQSXN0UllnTXVQaCtHbAp2d2NvNFVNKythZmJudFptSWNlV0NoMGwvUXFIekwyc2ZSUlA2Vk1LSWpwZ1AxZTlWMU9PdU92emx2aE82VGloClFqWU1jSHU5anI5cGQ1MTh6NFBwd2hFdmlUVGVhRzRqb25kTDVsMkFjZ3QrMDRwa0hDeklPRStMOE5rUDRWZGUKRnEwUHdYWkRZODJBTE85aVM5UldsUk9mSFZWY2lXeVdZVEZDRWEvZXRmdHJlREVWVXNOTUNRNGw4M093RG9ORAp3SWNSWGVyQnR2a0ppWG5wMzN0RXhGeDg2L0FhU0pmNTA5dUhPRnJsQkNBUVhtZy9kT2NJM3NRNUZCc3Q1Wm8yCldncDIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3VOaVhhVklOblhFamRQbEdSblFOcXlTWFVYNE9tL3hjVTJOK3E3b21rYnRVaGNmCndIMmN3bTBtTVZBMWd1VHRnMFNSQ3dIQnFpOTBDclh3ZldzMDJHYVdHVElTdE11eForcDE3cVlEUmMwOVNVaHEKNnVWWHlibkUzQWJYbXI5QzhqaHVhNHRydGhUdXI5SzlTaW1TYzFkNnFadjcyRHFlazIrb3FFdHVMVC9Idjl5Tgo2azltL0YyKzEwNG9JUTM0ajdIQlh2VE9GOTh1S3pQVzFlekw2MmlaZkRDQ2R5M09pWllrNjJtbTgyUDI1a2EyCnVtS25Pb0JDaHNyeW5WSXY1K24vUWJ6Uit2a043bEZHYW1iY2xvWHNpQ1BvdzJKZmptd2ZvNE5RKzJwSWQyYWQKK3dzcmRaTmJDcWRGd2pveVVXdlpnUU1mV3NwNUN4NDNaYXlwOXdJREFRQUJBb0lCQUNyWVlwL0Qzb1JhajhPKwplZmR5dlZ2SHhNWE14QzNVdm5meVhPeG4xNnRUUElsM20vdHRvakQ4WGhFcFdScFZ5Z0c1NlVsS01aR0FyVHBOCmxYbDlRRGp6Rkx5bFRZZUI0SmEvN1AxeWNmVytrV0t6RVE1akxWR2tEYXR4dGFUSHQ2Z1l6KzNFMFFGT3lNck8Kd2Q2MEZRWldqUmtNdWVsbnVjVWdIeXdncVRBNUd0V1lSaDJ0RHczTDZkc1pSZGU1MWtOcS8xNHBDUVk0OEpySAoxaEtyeWY5MmFVSmFwblRuWG16OVYrclNkLzNyTkxmSGhGelE3TmpkRWY5QlE4TUNQQ1k0Z00vd251RDZhTzlFClpXS1lLZzUwMVlHSFNjZXRtZ1Y2NmM0aXpMMXFHdDJoREtZdlYwM2gyZDMyeEluamJpUjY3WElST2JSbmFJRXEKZ0lxYUpBRUNnWUVBODIwdmh0c3prZVhjSDl0dEd6QWZhTG9qY2hvcXFYOGQvS0dHNXQrbUExWUNkZFBpdkl1SQptNklNSVk0TmJXNE4wb0haSWRzcHYvT1EybzdWc256em8vM1hBTWp2dlJpaVFoOFZUTHoxb0hMdDJXb2c3T0M0ClVXVkwvSXVzZGZ4eFV4M1JoaVFzVzB2czg3MnpadVFFcHR0WnpuVGNhS2V3NUJCN2lyZS94TUVDZ1lFQXpQUmgKTXdTSW9Vd0twejdxUmV3L01WdVRGOC93MGdaUDdSbk5DK3R3eG1USFdqb1N4TzcwQjNrclFqQm1qUmdkR0lxVwozeUxKM0NoN2dqQXdWQmU3OHhvdGw0MWk2K3NoQ0RES3Z5SG10R3F2ZFRtazkreDdyN2tIYXJiMU9SZE1yUUQxCkpEZ3E1NFlGeVQyWEFhNXpGNTIxbmFhSzI0Nk1vWG82QnRtRUJMY0NnWUI4R0pOOENrOTE5MXFLbXhBNkpnUTkKSFhkb2VkSjU2aVhkWG5NcFM2YVVXTXFVU3RweUNDZ3lQeUEwRXZqaGFwTjlWMWpjRzZCakRNWXh4Vk5IMU05WQpNTlhrdm9zSk9YK3VlYTRnR3N5VmFVRzc3cEN1Y2JsRk5ZRFJWRnN0SXU2YTByNjN4Y1VmSGN2RVRsY2hBdWtrCkx2clBkMS9Oc245SkpPWDJSOHBwZ1FLQmdRREoyV1JnK25ZVlpPNlpDRDF4MzluY29uT2JZQStzeU1xdW1GcDUKQXNkdW5KSTVLamlSKzBRYW1Cc2lkTWlLN05TNjlzTGZ2ME5Pc0Evemg4SVJEODdxL1QwcHBQVm5vNHBFcHNrRwp0RHlpTXUvYVk0czFJSkl2M2VxUUR1QXorZDVxQkNkcUpHY2MzY0dWRUROSVZLYkUrMjJDZGlNTFdMam56NWlXClptSyt3UUtCZ0N4NVpDaDduSnVuNXFmdjhNVFdUMit2ZUc5d1BGNE1UWmFRTEtUY0xLWnR0cW00ZXVmczZsQWgKU2tMVHlSK1pLL2JOenpYdXM0RG15ZU9nNTl1aW9VQWJkNW5TeU9nd1hjWkcwRnVWdU1RaDB2VG5iaVAwakJYQQpQODBZcU50RnR1VW5sbUdUbEE1d01qb3VaajVKVmRPVGtVa3o3R1BCODg4dlRUMTFsU0c0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 116c5324d572329c35dfbd7b101e90092b4096033dfd6a6948963c2584cb7506
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -c
        - echo 2 > /hostproc/sys/net/ipv6/conf/eth0/accept_ra; while :; do  sleep
          30;done
        image: busybox
        name: setup-accept-ra
        volumeMounts:
        - mountPath: /hostproc
          name: fake
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
