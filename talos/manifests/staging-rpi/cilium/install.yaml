apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  devices: eth0
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  users.yaml: |
    users:
    - name: remote-staging-sj
      role: remote
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: clustermesh-remote-users
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjFIUUJFYmZ2b3Qrc21WMTYxTnFid3lGWHF3M2N3cEJYMWJkYUllRUZpcXdrSzRmCmVMcVFUUWpqTCtRNHhyazNoSmlxbTZaL0loTTFXVlpVZ1Y5YllxNVFpZmVMdUZiaXN0WkpNY2hmaDJMdGdoRUMKbmtGTGdmMEpJSVJUcUY5OEQ5L2U4dysreHowQWszb2pGNUx1eFFJU09PMlpZRFhlaGxDUFFpeXRubkd3RzR6VApkTVdJSGsrYmxxbjRrdGpTSEJrcVdSeFJBSVhaZ0tiK3FoOERTTHZ0TzVhem9RS1I1TDdlSGtjUXBQcUdjalJBCjJpbWhEcnlkNlc3UUtmdmkwb2FDNVIrdzl2UU02ajVITEI3eEtmTGl0Z2pIZExrZVkrbVN4WDJXeGNWbGkwK0gKanU3UVZQVjdvYTVvcjRRcUFPTXNrOVpSRXFVckV1NFNlOXpYRXdJREFRQUJBb0lCQUFlWTdBTERiMzY2WE1zdQpTbVhnUDRTQWJtY2ozMk5FMW9CakswVVVXa3o3bkpzb2NJU3kwUDRGbkpLK3VSY2pmNXhuWVQxTmdjVGdRRGVXCjNpS2RGMEMzZlJYOWZEaUl5MW9rbnhkaEw0S1didVJzQ0VrRFcxcE90TTZMN1hRbWJ5SGcrYkJleGsyci94SmwKQUpCTTlidmoweFpVZFlrTnpJN1ZmdC9IUDk3VnkvOTNXUWpITlhRbGV1ME84b1p0c1dhSVh2cnZ1N2hVK2xpeAphUzEzNkZQYlplWlVyYk9OVVk3T2tGbEptZjBqV2txZG82YzhEM2M2SkFNSENSWmhaNUZlOG1mTkJwbkdKQmJaCkVxOVczS1dmZVI5VFUrQnEvdTN1RDR3RmZKNHNUWEJpT25CQWUwMXo5b2xBL0FkZ1JPdnJBNjFMN29jZUJ5cEwKWUxtUVVrRUNnWUVBNEliaFUrbEdreitqUW5jWC9Nc3NyLzJIbnI5b3cvdFRHMTFiRVlLRytJSFYybi9MSlBzbgpEZWd0RW1wL0VLREpCK0F0c1h4MzBmNWZ3OFBFa09KbTMrbHhmdlNRbVJ0cmI2L3lzN1VqRnVoTUxQS3lVRGI0CkNwNExCTythODRoOGFvSUVxc0tTV28vQUJjbkR4MXRNY1J3cGRLUCt5YUt0MjU4d2Q1Qk80S1VDZ1lFQXgrVWkKY0dQUDRkRnRzWmZVWFY1ZVJGcERLcXZZY3czSjhCc0doNU9xUk5sUDY2TUxYOEQ4OHFzU08zMkZYRzhvNUc2eQpXQjc3ZXgzclYrRGlIOGh3YXpsQzA3eXdhTHRnYkhabmo5SnRibWQvNGR3dEVxcSsrUUgrZ3RTMTNzTlU2Z2NvCnR4TjlUN3lmR3p0NXFJSDdlemhoeHcxeGdXUzlEY3p1WHA4RlUxY0NnWUFJUGl0cmp6YmVGUW9EV0tmeXllcTgKRTB5MVVVV2hYRXF5eUh5ZGFmTldrRDJ2cGQxcFlDY1E1YU14OStMdVUxak9CemJtT3pHUzdnbktBQmZwVWNhQgpGZXJxeEVQQ3V6VDRocmNjVGR3WjdURk92U0k2dTZuamllWFJxcEkvdXBVR3Uvczc0YVRKMmxrc1hUbm95YnRHCnM4ZjUxa04yVjVpV1pZTzcvL3BGV1FLQmdCVkQ3eEg5ekZPOXIrbkF1VHJsbXlteVlJcmRsVDFJTGo5NDRJenoKekoxZWNQNGtia1ZWaHBOYVY2bzBoRWQ5RytDUlZpL0J2QWN3KzZSeHJCeXRlaWd1QTBuN1BOa25kZTZUK2hoMgp6bVY4WlVKbDVmV2liSWFaQzdabllxRzhMZ0JubXBFL1pZbGlDNXNlREtjOGpNQmpFeVBWN2tsUnFqc1puaEk2CjRKb3BBb0dCQUtrZVNtU0pQa01iVkZyY1lMaTcrQWxodlREK0d5SGlzTjBhUkFEVEQ1ZC82aVVEdXc0cDJMT0QKTnp2RzVuY0dmNStHNVgrcjVQOUFaRHIyY2VlbmxyNmxRbGZGcndWZVRCMzVMaGxrd0N5SC8zQlQ5TUlBMnU3VwpGdVV4UTFTRVNNNmU5dEpHdWpkeTVvNU8wT29Ia2Zzc3pmTXJ4MXl3SExJaVRidGtndmlJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  staging-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1zai5tZXNoLm5laWxmcmVuLmNoOjIzNzkKdHJ1c3RlZC1jYS1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5rZXkKY2VydC1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LmNydA==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-clustermesh
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lRUUtrRUtaeVpBRDVZR2J4OWs4RExlVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRJMk1Ua3lNekUzV2hjTk1qY3dOREkyTVRreQpNekUzV2pBY01Sb3dHQVlEVlFRREV4RmhaRzFwYmkxemRHRm5hVzVuTFhKd2FUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPUlVGUXBGdG5RUWJxSy9hMEFxRFF6Rk1IWDV2Tk1BTVJJa21qSGIKL3Jpa0JGZEhoQW5ScTVXa0dCZ3pLMnZzZzNLU1U1eFp5SytiY1lSV3A4bEJhaUtWeE1YRm50bWlqaEdnei9CZgpFcTAvaGI3RGhRSFhaWHcvL1VtTVg4eUNEQWRlOWlyTXdNNVBOUytvZVNIWm83R1lINHI0b1JRY0E4eU0vSE5UCi9UOXNjb0ZWOW5kYzc3Y1ZJcEVHeWM0RGpqeW1sNVBYL3N3OVBUS2pkbXZ3NW4vanRlcC9iUUJPSE1ib1d2S2oKd0k3TWtBQk16ekJ3K1hteXhWZVRIWG1qRmE3SVBab3VSaDRvd3pwRE50UGtqTXZTUnVXMDhyV04xbWorVTU0SAoxUjNZMW5ZWVBVdUhlM21yczM3QkdPSzBXSVg0OWRvRjRBZTd3SWhZS0hFTDZsRUNBd0VBQWFOMk1IUXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlYKSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYVZZM1pjbGxYWWFBMWJxNXcvYlpUTS93b21NQlFHQTFVZApFUVFOTUF1Q0NXeHZZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFkL2V6bDdhY3RaSTdGdVJUCjlVaXZhUXZRZHRNNzd3Wmo0VW9pVlB5U2V4bGJ4M0szRnZTVnoxQWs5YjR6emNrQ240c05Jdzh3MmM2SlFWWncKU0p3dGJmWVRiWGs3REo5bHc4SERma1RtVkdHVHZha3JvaFFmMjNrZFBGdzI1SVFkWTNkSlh5Vy9maGFnQjZxaQpwZGxsSzBuL3JaYmY0UkR1S0xXV0RXVStlUTJGQVIwWlpEYThDN2FxQ0FuRGRRQ05yTlpBQTZNQ2VVOG5JSEhTClUyS0JRR0FscG5mTmRXdi9xcjZxTTBHQ2dvVDUzYU8xWHZwQ1RMMGJSL01vM2huK01TdnRKL1BpdkZsUUZLNCsKdHJqM0dyd0xNaWlmOVBQakNpc3dxU1ZFcDhxaXNaOGEwQWp2ZTJpc29ZVXVObVR0eEhaSVBKZEN5dXBSRnR5dwo1VlN6V1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNUZRVkNrVzJkQkJ1b3I5clFDb05ETVV3ZGZtODB3QXhFaVNhTWR2K3VLUUVWMGVFCkNkR3JsYVFZR0RNcmEreURjcEpUbkZuSXI1dHhoRmFueVVGcUlwWEV4Y1dlMmFLT0VhRFA4RjhTclQrRnZzT0YKQWRkbGZELzlTWXhmeklJTUIxNzJLc3pBems4MUw2aDVJZG1qc1pnZml2aWhGQndEekl6OGMxUDlQMnh5Z1ZYMgpkMXp2dHhVaWtRYkp6Z09PUEthWGs5Zit6RDA5TXFOMmEvRG1mK08xNm45dEFFNGN4dWhhOHFQQWpzeVFBRXpQCk1IRDVlYkxGVjVNZGVhTVZyc2c5bWk1R0hpakRPa00yMCtTTXk5Skc1YlR5dFkzV2FQNVRuZ2ZWSGRqV2RoZzkKUzRkN2VhdXpmc0VZNHJSWWhmajEyZ1hnQjd2QWlGZ29jUXZxVVFJREFRQUJBb0lCQUZFSHJmZlpTYWppOUFCNQo0andCTUdScHpvcnZ1QjFCb2lpSUtOaXM5RGJlcmxPekk1N0FkQjVFLy9BR3FOQkNQVnY1cGdhRXJuM3pzbE4rCjFVak5HRGR4NDBVMG51MHBqVFdnVm1zOXNra2RrLzloTCtDNWFtQ3Y3Tm1mSVpoWVJxQ1BDTm1qbElFakJ3TUUKelFoQVRxR0dGUnVpcExlWVFaamtKK3RkMFRBaVJ0NlVpbTlaYkM0Vk5ndlk1Q3lpNGovclVVRmJMeHJvclNQOQpFMzVER0VYaXpJQklqcUtLSy9tenNabjh1L3kxMU5EbEFmNG5LMW9pTlJuWmM4RGNIOUJDdTNZSXl0bVNPUnRlCjBxcGozRnVidVlkcXlDOXJtWU5mLyszT2hZQjduT3d6a05tcEt1cUVibmpabm55ckNQZ202RUlSTyt4b0RJQ2wKYm9OcFRBRUNnWUVBOGJoYXh0eVhhTG0xc2VqbFppTDdrMHBOT1VkY2FVaFQ3cG9pb21lZFFoUWI2YUlmelNNaQpKeWwraXRTRjlucmF1eG55Q2dEZVNmVlloS0RZbkxtME5mV2VFVExkczVXNFFBb3dPdStMUFYyVWhweUFnVkhvCkdNWVlCZDg3emxKUjA1TmZmeEJWSlNxMW5ycEZXajhQckREZW53OG5Fa282NlUxMUtqdUVJTEVDZ1lFQThkRXkKNmY5cnZOZGNpR1hzbVlUMUdzVWRmK0oxZFljci9KWWxOa0FXakRlSGxEN096b1Y3T2Raamx6Y1RrejlRYUtDWQpLRWVmRmJ4QU1sd3QzRHgzbmZha3hhZjNoQzBHbmpRUE9CdlhGdkxmemg3Q01ldTlhdUFQUjM3WGIvZHUweExMCmNYL0t0aEtQN1BQRXJ5TmxOZ1E1bmNiVFNsMTA4WGFGN1djM3k2RUNnWUVBdi9yT3hsQ2ZSSUx5eHdtVllNaDYKRE9LZmNOVzNsTHJvUm9KTzdiUGpsMzdIS0lrbVB0UWZwUUQweXlpOStTUmNJdXdaYTA2RFBqUkppSlVEVlg2OApuWHFsZnoxcURkN2t4cUFRN0U0aXhhdFVjcEZNRXVuTnNCZHRMd1M4eUVKalVPb2tsNU9PUElXdVdCSFRVVGp5CnBxenRzMkRpaEVsR2Z0T1JNZWl4S1JFQ2dZQjFQVFh3R1RRRTVHMHFmREFQNWxSblhEWUhNS1krQ3dFYWZ6a2YKYWtjRVNFL2xZZVltWHJUMXY2bWRRTWl1MVQySTNJT28wOENmYXh1OHp0QTFQT1BKcERFUzIzSzNsSlRtMHRxbQpHMmxXNlAzMUV4aVgxM0dJaFlVaTVxNVF6S2Zna2ZZczJ3Wk83QVQzbnVBM0FYUXFralhVOXZhdDBVM0hXKzFtCndtcGN3UUtCZ0ExSzFnVTdSbGJ3di9RY1cyNHFZTTJPVCt1Z0Jydm9CRE9MQVk0QUhoOHFMTVFURURVeDgwV2wKZ29yR0k2bWZPcjVIQ1doUCtTT1UvdmQ5VDJyY2ttbWwzTGNUWDF6UGl6a3ZhU1YyYWxCMlRIRGxzNFpETE94TgpDM0dHaXFoblRCOFRIZmNHdGxxdXhyK1hUV3lJNjB0cUVubTFjd2t3ZDRlK2h2bEZ2cVltCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lSQU1lTHBhc3BUa3U2MlZKZjNqbjVTdll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURReU5qRTVNak14TjFvWERUSTNNRFF5TmpFNQpNak14TjFvd0hURWJNQmtHQTFVRUF4TVNjbVZ0YjNSbExYTjBZV2RwYm1jdGNuQnBNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEyT1dPcFVKSnZaWkNKbk1DQkUxdVFHR0xsdFRyaEUxdm5EdlgKaldOTVBZQ1ZTVkNjYVNIcUJKdHFzdThXaDFlMlNXRWg4ckUrNFNGTU55aWNjM2N1R3ZUS1lWRlBYdWhnTzZKbwpnNm43T1hMYlJXQVFWRlBMeCswN3NGSDRrNUpTOUFnN0Y2TFNwNmlhcFNBNkIvYWJqR1VBelVXVE1hRkpNUHJCCm1PbFZGeXlUM1EvZU9WVHo3ZnFEc0VmWTlsa0l1QVByTGFWczZjRlR0RFlGMzVQWU9PNGRLZ1d3b2NLQ3g2cCsKSzkxVkJrZjN0cVF1VS81ekxkekIyTkREVld2YmxleUpSY25RcWhucXJKYjlRUlFqbkxldCsrMjBMN21XMk5tSAprZTBTNlVTbDlwSElsb1NHOVV6NmNIMHUwTEZpUHV6c1BBVlNUQ3lMalBseXpWTjhLUUlEQVFBQm8yQXdYakFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU5cFZqZGx5V1ZkaG9EVnVybkQ5dGxNei9DaVl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIMHA2Ri9jVWlRcVZubXZDcVJObDQrWC96RFJxejhtNFJkQW9vVC9MKzMyCmE4WUQrM1FLeXNrSEJOR0hrN1V6OEZ3OXJNYlREdW5wSFpvaFJ6bnNFM2EvR05nR1U3djZ2c2QydGZ4dytQSkkKb2J5OWdKcU9HeUN1U3dVZjVUMHhkR0lyTk9MTmlzVzJFMUZuUDFWRWRCVk9KMFF6MXJxUCtnRE9XcXVPcVhwNgpjVmZmQnNyOUs5aS9sd1oyd3dhRDE5dnlCemV4b0tFcndwZTJsOUxtbi9ERGQ0T1QzM3NhS3JWcHQySXYxWG13ClcwQXhtVC9lYS8ydWc5UEszVVo4a2UyOEQrb2dvQlZuZlpqSys5ZGJGWXhCUnBQUlEzcU4vOU9UcE0wMld4bUoKb2pNY0dUZFNWaFVsL1BMR2Jlb2g1Zmw4cnVaeXlka2cyUWNIRUo4cGkzTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMk9XT3BVSkp2WlpDSm5NQ0JFMXVRR0dMbHRUcmhFMXZuRHZYaldOTVBZQ1ZTVkNjCmFTSHFCSnRxc3U4V2gxZTJTV0VoOHJFKzRTRk1OeWljYzNjdUd2VEtZVkZQWHVoZ082Sm9nNm43T1hMYlJXQVEKVkZQTHgrMDdzRkg0azVKUzlBZzdGNkxTcDZpYXBTQTZCL2FiakdVQXpVV1RNYUZKTVByQm1PbFZGeXlUM1EvZQpPVlR6N2ZxRHNFZlk5bGtJdUFQckxhVnM2Y0ZUdERZRjM1UFlPTzRkS2dXd29jS0N4NnArSzkxVkJrZjN0cVF1ClUvNXpMZHpCMk5ERFZXdmJsZXlKUmNuUXFobnFySmI5UVJRam5MZXQrKzIwTDdtVzJObUhrZTBTNlVTbDlwSEkKbG9TRzlVejZjSDB1MExGaVB1enNQQVZTVEN5TGpQbHl6Vk44S1FJREFRQUJBb0lCQURMQ0hnek1vNGNycDlWcApxcm9wQ0xrbVdzMTBqSjFNcGVieEZqT3ZYa015V1Qxc0VQNkZna2VMdTMrZWRpNDhONXVha0tCRUhJd0JCOTRNCnNmaFBsc21XS2RwMmRkV25HZ1k2cnF6SlZkS083NE9meEpLSGZiUU83NTRHd042QUtzdVROWWtGZ0xqZHV6c1QKZktFcWRDSjU3S01kT2lJdU5YdXg0eWFPekd2OGd4Z3dnTUVickNLN0d6bHBpQzdTN3g0UCtZSHlYWEMyYTVBQwpzOU1ZQ0dVS3ZsbnJPQ2VSL21JSGtYVVFNU01NRm5CV2wzcUFyTi9USGNRNEViWXZBZ0FnZ0dGcTg3RGN5Z3ZWCmtKK3dMeWVscFVPQUE4OXFna25qcDR2dHZiMlVEUTJYdkZnMk5hZExYV3V6ZW9rUkQxN2laNnk5NzBoZlFyeWYKNmJDRFA0RUNnWUVBL1FVUlFzQ211NjBEVVVmVS9yaFovWEtwSFpuc2R4VjQ4cEV2VUFyOFI5R0plVkhrSksvMgoyVERDRnV3b3JXb09BY3JqL0pHZlM5RC9SeHI1SGJFZWVRR0xTQVp6aW94V0pLME5Cb1VNMm1FNU9sUzVtV2pOCnVzejM3WFhrdTRYd0lReTUrN1Z3czRjbnJjSmVYd1lCNmh2SDZHNjFXcnhxYmJYNmZtYkpqMUVDZ1lFQTIzT1IKUzJoeStocWU3cUdXbUpySWcycmtpSG1SbkkrWlVBM1hEdThWaHlPRnhETEdJQTJaOUpuMmxVWWZBcm5kOXZ0bwpNdkZiTE1NenJwalNzTlp5M3hqZXMyKzRlQmdkYlFWd0JHOGlHSElMcm5CUkUzNEdCVE9PNjhGZ0dFNE5RSUFTClNmZW02a0dMbHoyZXlGOGRTd21QWFdJNXBsNUNLQTZhQ0JzMTJWa0NnWUFjR1NuM2pjbDJZaHBTTm5YeTY2b2kKdVU4S21JTm9IaHhXWThVclVHei8xTWM5ajlpVU1tNXBaRDdKcU9SRGpkbU1YV25BTExQU0NaMnYyZEQ4ZVNUMwpMeksyaHZEaDIvL2RCdExCZkprV3oyRTVseHNkYkVRY2tKS2Y3azIrZlh0VFVFUi9MWUVjanMvYlBoQ1k0T1BwCmliaERtYmZPSWNwMzhKT200ZWRVWVFLQmdRQ1E0SER4ZVprK2FFaTRmZEV3R2k5Nkl4MlF3OEZQdkxXWVZpcSsKWHpTMUxNeG94S1JzRU02czN1QWRtRmRzczB4SWU1MUUxSFkrelBmWHNtaVYrbDJIejZGbWtNRVY5OFdsYmN1UQpBZFpla1J3SkkzbERCeFh1WlNWYm15UlhwMSswVDFqRG9FMS9wWm9FVk5mNHJHSm9ZWDFXUnp5TUN2cGQrNVhRCitEWEtzUUtCZ0Nzc0l3Ty8yY2FNZ2pjbElVbkt1VnZHcDZKVTgrSkJvSThYVDhpY2NFWTY3N1RqcjZWWGN4WlUKcXRDRG1hVnBHeTJYQmNBeDQ3WVBGSXhiWnNSL1lQa2dyaGJkeCsxQUxtTTZOTlRYdXhVL3ljWkV6TGh5MzVGYQpsY0hkdFdwZUwreENsSDRjRE1TdFc1WjFWbHdwKzQwSVlJdEVEY3JvWGg2K01DbEpSUTc0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ2RENDQXRDZ0F3SUJBZ0lSQUpaVGIxSDArUEErTWlTY0t2c2FjMjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURReU5qRTVNak14TjFvWERUSTNNRFF5TmpFNQpNak14TjFvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxCbG5BZVhLUUNGaS81QzloRWEKaGdnaDd3akczOFJWUi9LNGFRVTQwalBHaEl6U3hUdGRBdGdTLzZuamowNHJTSW53TzRWcWlRbU03UUhrT0ovWApYODMxV0hVbXFFQk9wRkQ3Y0lLL1JTVHB4bXhPZEg5SnRLSWV2TEVPSlBRSjVTWlhENHVqNDJ5ay9WanZaVGs1CmoySkF0NCtrMnlCbjdtTGFlRXpsZDJlRFA0NG4rRkE5VDJvWmZHb0FwOHQ0RTNPK0hUU2MwVlMwWjcxOUZMem0KalczcVlTV1FPUFd1NFA0RmN6MWU5aktPbmhtYWhMYkd3ZWsyaHN4cGFybFZLUWcvcjR4eHBEbjM4VWEwekVFMApjMU1WV2crVEFqL25zYUxIdkY1OWNYZUNPTVkyNnl4Tmo3M2pSbEVQT1hMK1NOM1lGaDhuUTRpTURPMTVlVmg2ClhqRUNBd0VBQWFPQ0FSMHdnZ0VaTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVgoyR2dOVzZ1Y1AyMlV6UDhLSmpDQnVBWURWUjBSQklHd01JR3RnaDlqYkhWemRHVnliV1Z6YUMxaGNHbHpaWEoyClpYSXVZMmxzYVhWdExtbHZnaEFxTG0xbGMyZ3VZMmxzYVhWdExtbHZnaVZqYkhWemRHVnliV1Z6YUMxaGNHbHoKWlhKMlpYSXVhM1ZpWlMxemVYTjBaVzB1YzNaamdnMHFMbTVsYVd4bWNtVnVMbU5vZ2hJcUxtMWxjMmd1Ym1WcApiR1p5Wlc0dVkyaUhCSDhBQUFHSEVBQUFBQUFBQUFBQUFBQUFBQUFBQUFHSEJBb0FBQXVIQkFvQUFBeUhCQW9BCkFBMkhCQW9BQUJjd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHNWFpcGI3dS9XT0hSc1ZaREtWbkI1ZjlwZVAKWkFIU0NnalNSWE5FOUY4UWN3elRQYythS1paRGhTU2J1bVNZNGVBU215VVpLaU9CSmRRVm1XaXMxMzJwbFVtVQpNZ1E5czBMNGNnbGxxWXRpTEs2Q1hySjQ4WnlVK05nOEd1ZGIrNzJYZzVIcFN2bkJsSlNhcWs0UnhMOTlmMVNrCngvSWNtTWNGTEJpMmp4eDgzZXZOUGFuc1JWZGhtSUl4Y1g5K0VQdEVLU2pua21iQ1JybWpBRHQ4cUdXb1FHMksKVmZWRUMyUE1PYjEyT3JYUCs0ZTlNTE1BRk0xV1Vpa2JFVVFJRkVuVFpPaEdDbyt5SENYVDg4Tnd3ZUVPclh2egp2WDRzdTdxbWplUkRhN1RscDdmdksrK1R1UWFHVzB2dmtJM1ZCUERSRDQ4QWxQcC9GdFVpQlN3dEtSOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc0dXY0I1Y3BBSVdML2tMMkVScUdDQ0h2Q01iZnhGVkg4cmhwQlRqU004YUVqTkxGCk8xMEMyQkwvcWVPUFRpdElpZkE3aFdxSkNZenRBZVE0bjlkZnpmVllkU2FvUUU2a1VQdHdncjlGSk9uR2JFNTAKZjBtMG9oNjhzUTRrOUFubEpsY1BpNlBqYktUOVdPOWxPVG1QWWtDM2o2VGJJR2Z1WXRwNFRPVjNaNE0vamlmNApVRDFQYWhsOGFnQ255M2dUYzc0ZE5KelJWTFJudlgwVXZPYU5iZXBoSlpBNDlhN2cvZ1Z6UFY3Mk1vNmVHWnFFCnRzYkI2VGFHekdscXVWVXBDRCt2akhHa09mZnhSclRNUVRSelV4VmFENU1DUCtleG9zZThYbjF4ZDRJNHhqYnIKTEUyUHZlTkdVUTg1Y3Y1STNkZ1dIeWREaUl3TTdYbDVXSHBlTVFJREFRQUJBb0lCQUhYb3haNHhSWUFLeEtRRgo0SE5ZVm1WVFFYT05jLy9KdlprWitXRTdOUTdVMEw5TkYvZHhXYmhUSXNCTjB2bStadk9GT0ZRYS9WVDc5V1VCClIzUll3N3BwR0dMZW56SzFIcExmTDdyRjNaTXFESzlTMWY1THAwbUM0RUE5b3lmWkFXcGFZWkxHenZ0TlllZXoKeGVhMWVnbUVGdThXbEQ2YUdqZkxyd1Eva2t3R3pEZzlZcHRBQXZmQllVaFd0anNpallqV3dhVHJVOG1WSFcyWgpYSjVEajBwemU3WjRFSHJ1RWNkbk1CTWMyK21EeUtlejhMQmIzSXVibllUa2NZWDVZQTM3MXg1OElhUFB4YVUzCisvS1lOaXVWMmt6ckExTkFLYlg1Z1BlSzNrTGV1VlRWREtkSUR3T3hVZ2pzZWU4emRYMkUxcmFNbmc2WW1DYmgKUnhleEloMENnWUVBMHVsb2lueEtHTlU2aVlnN1VFSU1ENXZnaVdDZVBGZFI2YjlTT2dCaGY5Z3NQREJacmwrQgp2N3hyNFdUK0Z5N3dRRjZ2bGhyZCs0ZnlsTHo1bjdaR1JmbExmT1lrMllHc1NqVU1nQkxuZjRGaU1yRWg5QlhBCm1pdnlLVkhKTWJyRTdUMHo0QmJHK3FtV1hmL3pQREZRa1dFTWtXdWViSTQwY3dxSUlpeC9IUjhDZ1lFQTFodE4KdFpNWGZ3WFhhL1NwK05henFZQmJ5aEtCZzY1UmlJbG93YmNpOUo2K1dSTEN2Qm51L293TTN3alA5TUc4dXNkRApIK2ZicmZNMnVHSjlQTGxydTdvNW5DNWdxUDFmY3VPOUp6Y2hNZitlMFdiaVZKWkJMRDUyclZLNXhFVkt2TkgxClA4SWYzU2NMb0xrTFlFc25xdEwxeW9uWlFrQm1YcktUcWhFRnlxOENnWUFxWVc1NVRXcFNQUjZMSGszVTNjQ3cKcmtEYk9nZngxaFlHbzBReGxYd0NCWDAyQnYwdVZkQ3JwNEFDQlpvdExHaG9kdDVQaWt5S3k1R0tJOE1CUGM0MwpKMVhzM2c0UGlzZ0ZEVTNhdW5HOEpGS0lIeUhVZXo1OWZGRW56bUJnVnNoVlo1UHg5b0c3UXJLTlp1NEliVnhrCktoMHRaM09wR3BZZGU4TkpJcW5VUHdLQmdHYWxBbFZKWmx0TU5xR1gweURyOVlnT2RITGsrbGhoNnM2MWFaWnQKTVFIclZNQXBRVmlpYWpSNGVmYzNKMU5reWhFVlZIWG9WeVlHMHJZRTZadUNIVWNMbVhEcHZ3ZGxLU3hRU0MrVAp1NE5YMUJENTdRbTJXeHBWKzlsT0xxY012UzdXeldlNnJrSDg1Uk14ZzJXdndoMmdNNXZkQ0Y0OXQ1WXdzS0E0CnR2a2JBb0dBSVJUclNscEJVQ0YwOWlJZSswQ1owelVQTnhYaWFNZDlaUmFoNjBqSXVvMnB1NzNhenNhc0c4U1cKcWVPc1FGT3NpdjNiNVAxZTY3N3huSytjUUtyN2RETmlJNkE1cG55amw1MlFYUVBSSUQwby9lY3I4SHE1RHhtVgo1RGVmK2RET3pNdno5b3BaaFRTak42UGYyck9lS3FKN1oxM2czbTJCUzNKRm9FVjZCaEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUl0Q1hSZG91SW9CWnovYU81Y1V0Y1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURReU5qRTVNak14TjFvWERUSTNNRFF5TmpFNQpNak14TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXplZUY2RGk1N05aaHh5ekpnUzJ5bmRneGZyc3kKUlJRcy96RGZLOUh2bEdFOGZ3dWhwYkJCaUYzNDdienZRcmdEbjl3NXk5OHBMRzVqUHVOMEhpVFFsZU1UdDFzbQpMQ2ZOTVpwZHl5TzJYVTg5KzZ4dGJQaW91TlUxQklVWk1IRmpHQVh1WVhxMjR0THlGQ2Y4ekI2RlJhaGlPREk0Cm9lY09HeUpJTDJRZ0FzYTZQeEhDZUx3eWdaRnp3cTFxY1NLZ3p3dWRoUXE0NmdEZmRuS3NQVERXNU9Od2pLL2MKbU4xRFRPZTlLYjRaZTZZRWhZNWsrZ1VkdytWUXRBZlhoRkVBL090UEdkbUZhb2pHTU45TXVOckplWXRiQzloRgpIaE9CMndxdnRVSzVwc1E0c2FHOWd5NTgwNkluaHFRSEVZR3JKcUxLekVuZ3BHSWZGZGNYdTNjQXlRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVQp6UDhLSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQnlLelN0M1V0VHNudmlvNFlXdnh0S1ZQRk00SGJiOGR4cUM3dFNpazlOSkZtR04KY2hINVR2ZGllejhucXRhQTMyd1hEY1NTVVBSMEU3UTh3OFd0R011eHNNT2RGMDhwNFlRck5qYXU0akZ6YkNxYQpLQ2E0WENDZ2dBUnBXREF5VUdXWkpqWUFzKzFZSzh4NzlWN216NEN3OUFOTVRXMmhkYytabUZYd2ExQWdma2krCnROZVdiRFQzNkNRbFRpc2d5VmZjN2Z2OVN1Y1RPbklNSTVXL3EvaDRmd2ZwaXg3ZWYxMFNFSEtOVlhOVXlHN3IKcjZXWWV4L1VkVXQzVnU1Y3l2UWlLRlJrajRQVVpOd1ZVUTJxR3hEQXl5dlVwMVZXbFh2TFFDYnJXMDFZRk04MQpiWUE3UEgxcGxORTF3dmEwa2U3b051QjBORVIzRVZqeGhhc0FKcUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBemVlRjZEaTU3TlpoeHl6SmdTMnluZGd4ZnJzeVJSUXMvekRmSzlIdmxHRThmd3VoCnBiQkJpRjM0N2J6dlFyZ0RuOXc1eTk4cExHNWpQdU4wSGlUUWxlTVR0MXNtTENmTk1acGR5eU8yWFU4OSs2eHQKYlBpb3VOVTFCSVVaTUhGakdBWHVZWHEyNHRMeUZDZjh6QjZGUmFoaU9ESTRvZWNPR3lKSUwyUWdBc2E2UHhIQwplTHd5Z1pGendxMXFjU0tnend1ZGhRcTQ2Z0RmZG5Lc1BURFc1T053aksvY21OMURUT2U5S2I0WmU2WUVoWTVrCitnVWR3K1ZRdEFmWGhGRUEvT3RQR2RtRmFvakdNTjlNdU5ySmVZdGJDOWhGSGhPQjJ3cXZ0VUs1cHNRNHNhRzkKZ3k1ODA2SW5ocVFIRVlHckpxTEt6RW5ncEdJZkZkY1h1M2NBeVFJREFRQUJBb0lCQUJjN3o3VlRhVTliSlc5WApFMm03SVZPRVNKbDNRQVhoYis1ZnNsNzhjbDg0MVoyMFQwb2w2RThkNDIvWUNOdHJiaVZFc1ZUYTJvZUQ4VGp3CmEzTFhUcDRMSUhkcEZwYVc2eVYwdUs2cVdmS1BkWHdIaWRWby9ZalZyZ1RUaS9NV2FFc1dxRDVoblc5Y3hDb1kKRlFOblVqeDQ4cFJLdm04dVpqNFRrVGVmd2FqdVZiQjRHNkxCRm5YUkdUSm50ekNvMkpoWUl4SnNUOU9Pb3ZlUAoxYlBqY3ZWUXhoenJTTXdSRGdLSjF5cmFHV1F4c2Q5S0NZQmFRS3p4NGpPZmppaFhQQ05wN2s2aGJZUHY0YUVTCmxXai9STy8zcVRHenY1RUVDbUF0bUxjdGlwQUVEODkyZURydHlrOFZZU1dOeHN0L3Y4bkcwcXA1ZlBhNjg0TUsKenBqWElZRUNnWUVBOStVTFpmemVNQy9SWTF4M0dPMHF3TW1nc011V0R1b29uK3E5U3p0cnhJZlRtdFFJQkZycAo5RkJJQmxkUGkwMVVReGRreCtzaDF1L2N2NGMzT2p4eGRvd1BrUUdMN2g0WHlzL1lvOVpVU29yM2lwRDIwU04vCnEzbVlPUUc4d2xmd3lTNVdRZm8xOXRFZ3FqRmlhMnB4YkJyMjNDTXhsY1FNYlhSY2pqbjYySmtDZ1lFQTFLTUIKcnlnSU0zSVFhWFF6YksxNVZtaDRFS3hTZk1yM2p6SGh0eVZpNzE5MXMyUVI5V210bGRSTWttb2VYeWpZdzNCUAozNlpRdk41bVJkMEhZenJndkY5RklSNFg3WmF1NU5nam5rV0xQYUpjelFGeFdjZjZ4eHRIQlpQV3hmNGNHdEd4CjVLZjBBOURmMmFsWWxSRE5kVTd5cERpNE5sLzVaTmtxLzF1Tmw3RUNnWUVBNXNwSXBXZ2FHRFM4dGN3RldhQ2MKdUNZL3c3bVcrRVhMRXErQ0VzTzhucGx5U1doMEdsSG1GTDZWZjhuVDFiWmw1NXlsQ0hlQjV0RWo3UERmV3dtZwovU1NDN1piS0J5UGZOTVB6UnYycE5rbFJFNkhKR0liN090TVhCS1A0Yjl0ZDRuK1FjUmFaSFRRd1BDT0VKTXRSCjA3cjY3NUtZZkgyc3NFNndTUDN6NjZrQ2dZQW94aVV4aURTaVlOSUMxclJ4dDRZWDZxcHpVQWYxUkJwYWpBOGoKUm5rRk84SGZKMlpHTUFDSVJaQjFWd0lCNzF3NWhkVGJKeEkrVlVzNVJGd0JUQzRDRVNhNVpnTGluVTFtTm9nRgo5b0h2eksyTTVpVHRPV3ErT1YzU0ZQcFBOeDMraW8xWk1sZVpUN2xOREtzZTBuMERiS01jbUgvQ2RYN21OcnFICkF2QlEwUUtCZ0N2OVJTbkk1NVpUeCtNR3RBN08yU3hJM1dIVkdxWHVkODR5UmNtU2lBT09tOHpGTXc2eGMrNnUKenRlR0JBM0xiTGFvUzE5L1ozV0NGaElsS3ptTUhwczFtTzU5cGdZSk5ldTJoT1dleDBkRUtqcjhoY0kvWkkxRQpFT0ZEVG1sRE8zT1NtcU1lbFk1QjZhYjFXNG0rVnFySkNmbnZLZEVlMFNOYTdYcWNiSURBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYakNDQWthZ0F3SUJBZ0lRRjJIL2Jpb2MvTzZ1UnhLM1YrWVZZREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TkRJMk1Ua3lNekUzV2hjTk1qY3dOREkyTVRreQpNekUzV2pBdU1Td3dLZ1lEVlFRRERDTXFMbk4wWVdkcGJtY3RjbkJwTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNelozbUQyY0hTNTNISDgKZzJmL0ExUVB5bEpGZ2xxYnlOZDFXVisvc0VodVVneFlwRW5BTld2WWFRNTA1ZTZiYTMwNzNnRU1LS1dXQnhjNQpOekhXTmhaNnlib01Qd2xGRGVoVk50b3MzVXZDc2JaSVBwcUN1SVNPQkxCY004a08vdGJvUnQ5VzRISnYzMUZ6Cm9NYm1HeEFXNkgxb0x3aGxobUtXZ1pySTJjamZ3R3JlUU1Ja0JLeHZudHB0ampHZUVrSUNjLzRxOVpxRTVsL2QKZUsxUzV4VjZJK09iekxKdFhuV3ZrNVN2d2pFbEt0U3dUUkpKSG94N1lsdzZOUk84N25qbUdaU0NrMXRVUmdrQgpUNGJkYXZjUVhTQytKYmRQMU5yS0JLZUVUU2RMYTh0VC9NMGhFY3hCbzludVplWmFTOUlGdS9QNjhvbWV2WldsCkhOS09BQ2tDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU5cFZqZGx5VwpWZGhvRFZ1cm5EOXRsTXovQ2lZd0xnWURWUjBSQkNjd0pZSWpLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUE0cXlPclZ2WVBPbDk5ekJ1UUsKR1hIR2lZVUtVS2RpWTNzdi9HN01LZWdyY2ZIYWhVckJlTE5xWWpMQVRGTko4bU5jTHdyVVROQXhIbldqMGR3VQpNT0xkK1pTdUVPcTRuK3Fpa3NtWTlDUy9SMWgrQ3YyeUZGRVNzd1RockM1bWtmZ3ZhbFA5UTFEb1ZBb21jWDhWClRTYWZ3a2YyL25pQ2VqZVF0WFA0VU1hdG9WUDBKc3FxRmRpVUJucFc3bzdNQk5ZcnRXMk9Uc3JrNi9uLzFFY0IKZk05dnloSCtCZXBGQ29GMzNJR3A3Z3REa0ZJQ3NoZFBoSWduODd0WVM3bUR5Vlc0Y3VxL1hDRUc5Q1FzNEo2TQp2Z0xLUXl1Nk5PR3IyV2g5cFF5bUdiSGU5WGZpQjFrekY3UHBQRnQ2S2dqNlpPcXFsbHJFRUlJWksvRm1XMStCClpHYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBek5uZVlQWndkTG5jY2Z5RFovOERWQS9LVWtXQ1dwdkkxM1ZaWDcrd1NHNVNERmlrClNjQTFhOWhwRG5UbDdwdHJmVHZlQVF3b3BaWUhGemszTWRZMkZuckp1Z3cvQ1VVTjZGVTIyaXpkUzhLeHRrZysKbW9LNGhJNEVzRnd6eVE3KzF1aEczMWJnY20vZlVYT2d4dVliRUJib2ZXZ3ZDR1dHWXBhQm1zalp5Ti9BYXQ1QQp3aVFFckcrZTJtMk9NWjRTUWdKei9pcjFtb1RtWDkxNHJWTG5GWG9qNDV2TXNtMWVkYStUbEsvQ01TVXExTEJOCkVra2VqSHRpWERvMUU3enVlT1labElLVFcxUkdDUUZQaHQxcTl4QmRJTDRsdDAvVTJzb0VwNFJOSjB0cnkxUDgKelNFUnpFR2oyZTVsNWxwTDBnVzc4L3J5aVo2OWxhVWMwbzRBS1FJREFRQUJBb0lCQUZpL3R4bFpDMFYyMUd2SgowNEIxdWhKc09PSkYzUUMyWjEvNUpqeFdSdUJLYzErSDg3MUQrYUQ4aEI5UVErR0pFaHVTbVU3bzNwOUdqVkhoClp1ay9mZlZsUXdwSWpmTE5LUVpVRE15ZkRVenFUNlhDVE9VUjV6RCtla2VSMnBtcjFucHk3V21MTVBoRFFZUC8KVFZOK2s1RDM2OGVSSUhkSnpOdmZpc3p0WVhVbHUrQ1NFYkZubUsyZFk1dnpsRjA0TjZqd0gzS0tuM2VjcWM2awo2b0R5c1ZrRGFDMWlITGtrdWFEZjlCOWRheCtUVWt5dnNKbHIvQUlkNDV6d2RJNEJWWEtEYXF2SVpPYktPRWNKCk0vMEhSNGJxRWh6SHJWWG9rUjkxaVdvSTFDaUhCSEt0YVVCQXlpYzRhejVSbTBtNkhQckFTYUlpNWVFMFkyNHoKMk15SEJLVUNnWUVBKzVEMURZb3lkelhVYkNRc2hlR2hKdFFieGxNSFRZSk1VcWJ5bTNMeXRQemhPTkNQcTFRZwpKdXNZdDJhZUVqWVE1a3RlZnhFY21sSWxBemNzU2xEQ05ZbUNJa3JpMG5ibCtsUkQ1bnh1QkdMd3N4N2JyVHkxCmp6UFFSR1Nkd2xTbEhxdWVyaHpOYUVhcDJUWUVNcXh0TCtaTXBVN1lSSENROE1YNEIrdkZjanNDZ1lFQTBIWWoKRUhsMEZMY0xrUGx1emkrbWRwOGtIdjBOUXBHaUozcVNlZG45V3pRK1dRVnBnSlFJNXdlRGxVOFUrVlptdmJLTgpISVNBQ2lvSmJjNksweEpYaUQxSzZISG9odVhUeUZ6NGg2OWkxZ0puNEIyVnF5NXN1djEveDVHQzlKY0Y3L3o0ClBHOE1ZbmJZbXdsYjBYRUEwa1NPNm16ZWNjdSs1SUtBeG9kRUxPc0NnWUVBOTBGc2VoaGdyYWFzMkhWZGhXRlUKNFRNTThZcmQzS0s2bldvVmZoQW0yUmpMek9uQXErYU5pM0w2NGhmc09YNEdjak9WOTFJOFNMbUFRMzdRKzJJUQo0RW45Sy9OcXFPM1A4SkV1QTdZODgvYkRHV3ExQTdwdHdRaHVKU3EzbkM5Ujg2aysxMmJieFNmZS9PMEloejNPCk80d2h2VUNYYy8wbm1GOGIvNzBPWGMwQ2dZQlZTTCszc2JpbjhPc3VlSjI0aFE0Wllhb3BjMlhGWWtkdzExaXQKdVYxSnZ1bnpDWi9NRnNROW9IbFkwRzNJUkd6c0Z1eGNTbWtIdjRMMEJaZ09HbWJ0T2dZM2FzS3l6YndETU9ZTQp2TmcycmUxSloxRWdJM0lnWGkyMHUvZFRrYVhBTlVKcGx4VCtBNWxDZEdXNEhmODBCeEJoSUFFeGxTV1gzenhICi9IY0wyUUtCZ1FDQ21kaGhOUnROc0VxUHpIUzVXK2o1V0M0N0ozU2lMcWFJa0N2ZWZJT3hXSDQ5SFMwdW1MbUkKdnYzMWx3ZWgvQWh2cmdKdTlvNll0QVU3WWNtM2diZHlxNTQ2OTl1MW9GRTZseWxmLzJpVWhRZ3FuWjRwckwvVApKK3hrdnd5ellUYzdYQVlOSzhpMW5jYlRtZnoyV0lsWXpDb3YyaGtKZ0l1cFRmMm1Fem9WblE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/ttl: 1m
    external-dns.aplpha.kubernetes.io/hostname: cluster-rpi.mesh.neilfren.ch
    external-dns/is-public: "true"
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  loadBalancerIP: 172.16.20.75
  ports:
  - port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    omni-kube-service-exposer.sidero.dev/label: Hubble
    omni-kube-service-exposer.sidero.dev/port: "50080"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 8f0d58cf70ca6dfad165e5207d469372f67d5fc2713964d3507d9cc9c7e57df4
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        command:
        - /usr/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/cilium/clustermesh-apiserver:v1.15.2@sha256:478c77371f34d6fe5251427ff90c3912567c69b2bdc87d72377e42a42054f1c2
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        - containerPort: 9963
          name: etcd-metrics
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              key: identity-allocation-mode
              name: cilium-config
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.15.2@sha256:478c77371f34d6fe5251427ff90c3912567c69b2bdc87d72377e42a42054f1c2
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9962
          name: apiserv-metrics
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/etcd-config
          name: etcd-users-config
          readOnly: true
      initContainers:
      - args:
        - etcdinit
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=clustermesh-apiserver
        - --etcd-data-dir=/var/run/etcd
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        image: quay.io/cilium/clustermesh-apiserver:v1.15.2@sha256:478c77371f34d6fe5251427ff90c3912567c69b2bdc87d72377e42a42054f1c2
        imagePullPolicy: IfNotPresent
        name: etcd-init
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: clustermesh-apiserver
      serviceAccountName: clustermesh-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - configMap:
          defaultMode: 256
          name: clustermesh-remote-users
        name: etcd-users-config
      - emptyDir: {}
        name: etcd-data-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostAliases: null
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
