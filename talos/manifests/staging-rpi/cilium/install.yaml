apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  devices: eth0
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.224.0.0/16
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU0JiMUJ5NDQ3TlVVUUN3LzVUMElEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJNE1UZ3lOVEkwV2hjTk1qY3dNekk0TVRneQpOVEkwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2FQV3VVRy9mb0hsV25ERktCOVNxVzI5Z0Z4OThYN1ZKTWJaQytLdDZYUkZpVGVLSTcKbGdEY1IvbzVkNy9ZbWllM2FlRmFKQ2RNV3QxaElqS2JUUDhnK0lwYWVuSktzZXR2ZzFHZzZ2MjVIaWpjQm9XbwpZbEFGTDh5R1JQWm90MUc1L1pjNWVyV216azRHZUVhanhFZU1zT1hIZXkyb3M5R1FDMkNGT1BVbVMzMUFyS0cwCjVRNEZQTHZzU0lRTnZnRE9acWZuZHhORm5JQWdCTHdqbFY0OUdtN1VGQkkxQTBTVC9SRU1OVjA3WE1aVFJDR0oKZDNaQ0lLL2xIaVhSM1ovWXFDY0dvS0hBdEhZZDdGWWsyUXZxbGU4RTNxNVVjWlZMdG5BOVZRdUdzMGtTTk1XcApHNDBMNitBRElYUGthM3RBVFRmb0FlemtTZk1hbGNPeXM3WmJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvdVBzZGJabzNhSUJxVm5tUFl5YjBGTjJFNnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUS9Dc1JVUzlKZDNHOHY1dE9NUjlXdUI1M1JPRGM4ZVAzakl1NHdTN1B5bUFUbjIrMFg4ZnNlCktaUUt4WDZkUmg4TnR3bmhTdXN4YUtQTTFmOTlMV2RYRzQ2TmNpemZTWE0wL2Vqa2lRb0JVSlNOd2I2YzhBSlgKN0pGK3BLRzByUk1EVEprYUlnTnhOS3VMVUUvNmlzSnV3MUFhSTJpZTZlYW5HZEZTVjhNNTR1aWJHa1VxUlZJTQp5cjBwZXc3Yzgrb3FUSmoxOVNWdUZpZkdOeDdzaEY1TnovejdhOTZzTkF3WnM4Zm1lTnlRb3dPaW5VeUdoNjZDCnlGK1gwYjJjbTBpdm16TTRQcTNtTStwVVMxTmpVdVhlL2pKK1owYUMwUGhXckRGc1l6N1pFZkVvVnNMTVEzTjQKM3I5bDArSWZJREMvekhFaTVVb0JlNjMxcmxldCtKdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbWoxcmxCdjM2QjVWcHd4U2dmVXFsdHZZQmNmZkYrMVNURzJRdmlyZWwwUllrM2lpCk81WUEzRWY2T1hlLzJKb250Mm5oV2lRblRGcmRZU0l5bTB6L0lQaUtXbnB5U3JIcmI0TlJvT3I5dVI0bzNBYUYKcUdKUUJTL01oa1QyYUxkUnVmMlhPWHExcHM1T0JuaEdvOFJIakxEbHgzc3RxTFBSa0F0Z2hUajFKa3Q5UUt5aAp0T1VPQlR5NzdFaUVEYjRBem1hbjUzY1RSWnlBSUFTOEk1VmVQUnB1MUJRU05RTkVrLzBSRERWZE8xekdVMFFoCmlYZDJRaUN2NVI0bDBkMmYyS2duQnFDaHdMUjJIZXhXSk5rTDZwWHZCTjZ1VkhHVlM3WndQVlVMaHJOSkVqVEYKcVJ1TkMrdmdBeUZ6NUd0N1FFMDM2QUhzNUVuekdwWERzck8yV3dJREFRQUJBb0lCQUZ3aVRGelF5Q21UMVQ1UQpFZ2tuVmlWL2RXOGVrWmxOWGxmaEt4RXRzb0ZSaGtleFM5ZWtKeWR1cDM0a2xpamhETkIzSXZJaG5vZnh6MFB5CmxhQkhRaStEeDhGOFcwRmJQblFDVVlSNldzMTF3cHFNR3RNV3h3NFNHMjRwUzdnSnFYd2NpM1QrWS93Y1NHZDgKK1ZWaUxndFFzREdVMXhWck5NZUN4RWxRV01CaWNnb1lkSTUyOTQzZ0NrVDlFeXdETmEzd205VHNmbUtOck9sawpCNG44Zkw2TlA2emdnalEzSlpNa2tHc1BOTTZSd1dzaFp4Vm9JQmtTaHR5TnZ1MzB6RElZaVJPMWhCN0tHbXdaCnBnanQ5QlN0UG5wUVlJb0wwSW05UkFYTW10Rk45T280T3F5cXg2bXR3bW9TNDB4VDBlamZjajVwdW1FcUxCYXAKaXl1NHoyRUNnWUVBd0EwRmZjREtkL0xXOWZxWEhpWFhMRjZjbXJMZ2JwcERhUk5kSWRCVTllUzhhaGJrMUxQRgo2R1B3VE1vTXY2ZWoreXdvRjl4R2d5dm5HK3d0VGMyc2x3d1ZHYjJjakRuMUdZVEhnb2VBOTJxcXhnVXFTbmFMCm1ObmRGNU14NEE4OUxRVFdTSDgzbDh0WVZISE1qQWJyYklmbUc0Nks3THExZG4zWUcrV2FRdTBDZ1lFQXpabEkKZzBCR3pnUTVHSXFxQy84anlvUCthQmRyeldiNUMyT3pGR25nbWk1TEpRZDRPWVl6WWUxak1WWVJFekd4dXpEdApHTzhXRTRvOXFMSGszZ0lnZlMzejVCeTl1UFJIY3cyRU8rTGxYOWRhY0N6aXNoejJBT2hOalJCQU16KzkyQmhFCjVzRVJ1eG9YQXFtTGJ6VWJOUUtGOUs3ZVBOcXZ1L3hPOGtuWHpXY0NnWUVBbVBORjVrcitkTnovK2RMak8yMWoKbXNDVzlGVjFqR0JyUTJuYWlDMkZISGhZM2h6eGpiekc1emVBajRkeTg4Z3RQc0tDQTg2NGtZc0xlaDkwVFR4NgpNYW03dkU1WU9RMkhlQlZaVjBsWG1yUm00V0lIdGxvRy8ycXpQQzFNVVdlUmp5TUZEYVBUd0o1LzhIRFpPTVBpCkJ3T01iWEh1am01OFNxd2F5c3puT0ZrQ2dZRUFqTmhWTkpUejdHNDRMdmZQUmlpaS9Ea3dMMTdjR3ZwUDRkMksKOEpFWHJJZktNclBMU0owRzFpOHBwTUt4TDlUN1RLRlh5NXorSXFTeFdMK0ZhaEZLOEhacWZmcXlmZUhha0piUgozN1N3TGRmNXZKOERMY0ZwUlhYZXFxUlhWc1J6NlhXMnZkM0ZwOGRYdkJzcHlpVTNYams4UzBNQU8vQVVNMVBGClFYWVV3RUVDZ1lCUUFhZDZqNE1BTG1kU3QrWVFHTDd1NmFDY3A2VFVLTlZKZkhLaW8yNmJEeml6d2hGMWJFeEsKNHRHQ3VSMGc1YzE1d0VtOXhTZjFlTXNlSU50NndNZ0lkaG91UCtwQW1GdlRtTHlBQ0wvMnJ3Z3lpMUtGSDEyTwpXbkNLTEF0NkQ2TE5YNXo5b3VvS0JReElxKzh3cm9xYkE0K1Z3cUwzOStLMzg0aTQ1Q0YvVFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU0JiMUJ5NDQ3TlVVUUN3LzVUMElEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJNE1UZ3lOVEkwV2hjTk1qY3dNekk0TVRneQpOVEkwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2FQV3VVRy9mb0hsV25ERktCOVNxVzI5Z0Z4OThYN1ZKTWJaQytLdDZYUkZpVGVLSTcKbGdEY1IvbzVkNy9ZbWllM2FlRmFKQ2RNV3QxaElqS2JUUDhnK0lwYWVuSktzZXR2ZzFHZzZ2MjVIaWpjQm9XbwpZbEFGTDh5R1JQWm90MUc1L1pjNWVyV216azRHZUVhanhFZU1zT1hIZXkyb3M5R1FDMkNGT1BVbVMzMUFyS0cwCjVRNEZQTHZzU0lRTnZnRE9acWZuZHhORm5JQWdCTHdqbFY0OUdtN1VGQkkxQTBTVC9SRU1OVjA3WE1aVFJDR0oKZDNaQ0lLL2xIaVhSM1ovWXFDY0dvS0hBdEhZZDdGWWsyUXZxbGU4RTNxNVVjWlZMdG5BOVZRdUdzMGtTTk1XcApHNDBMNitBRElYUGthM3RBVFRmb0FlemtTZk1hbGNPeXM3WmJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvdVBzZGJabzNhSUJxVm5tUFl5YjBGTjJFNnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUS9Dc1JVUzlKZDNHOHY1dE9NUjlXdUI1M1JPRGM4ZVAzakl1NHdTN1B5bUFUbjIrMFg4ZnNlCktaUUt4WDZkUmg4TnR3bmhTdXN4YUtQTTFmOTlMV2RYRzQ2TmNpemZTWE0wL2Vqa2lRb0JVSlNOd2I2YzhBSlgKN0pGK3BLRzByUk1EVEprYUlnTnhOS3VMVUUvNmlzSnV3MUFhSTJpZTZlYW5HZEZTVjhNNTR1aWJHa1VxUlZJTQp5cjBwZXc3Yzgrb3FUSmoxOVNWdUZpZkdOeDdzaEY1TnovejdhOTZzTkF3WnM4Zm1lTnlRb3dPaW5VeUdoNjZDCnlGK1gwYjJjbTBpdm16TTRQcTNtTStwVVMxTmpVdVhlL2pKK1owYUMwUGhXckRGc1l6N1pFZkVvVnNMTVEzTjQKM3I5bDArSWZJREMvekhFaTVVb0JlNjMxcmxldCtKdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9mZEFCdEhJak02VHJlaWVGMnV5NDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU9ERTRNalV5TkZvWERUSTNNRE15T0RFNApNalV5TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZBSTM1MVZGRDh2dmp6SzRkRzRMQi9TZVJwelIKOTREZjRld3ErUjlkUkZ4TU5XNjRIcG5WcTFoNUV0ODVGREVjbDNXTXNZMHlOc05mTzR2b2MvNmljYlQ5d3ZxMQovallVTFBsbkNxZ2t4SnY2Q2FXZFJuUng5UERIQmpwcmh6MGh2Y0w0YTNYZXZEWUU4R1ZUeDNPeFh3Tlk0SjNrCjRwWVEwQVRFOGRXVlgzdVJ0em4wckZ6RitNZ3ZWekY3SzIwdmo4R0IvYXM1c1Vxdmg1U0tzQTBXR0xOS0xVbXEKSG5ja1BEdnBoSEVOOWQ4ZUtWNGozZXpHdFJVOUI1ck9MQTVaZjNHVXl2OVNERTRDc2RxeGwvcjJTY0JheEcyaworei9RMEQ0WGxtSUxINlZENVE4M3lDTWJRRy9YSDhTU3hxM3p0eTNDNGtIenNKcU45L1ZUckFZeGtRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVCs0K3gxdG1qZG9nR3BXZVk5akp2UQpVM1lUcXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSXNTT3dxaVVyanM4SnN5bytadXJ3RWtrbS9HYjBPaDNlTWJDOXRydW5LWWw0QjcKVHRJclo0b0lNU0czc2Y2QmtpSU43ck9oa3EwRlBVTzBYcCtBQjBTbmtRTDFkOHB1RE5xYTFBQmc5Ymk5SFNtbApvVGM0Q0ZwTXBqblp2QzdXSFh4dVMrdWZVd0RWZ1k1dnhaVmxWdEY3NEc5eG5rYTF0eWl3S0ZMUlZUUlV2TnFMClFjaVpVSUFiQmNkdmJhUFhlZ1QrMmtOK1IxcnM1d0xlRkoxRjJZZGJ2RnkrMlZtM3dHWE1NMG53cU9TUE0rczgKL1VaSzlzZmJndGxSS1haSFlvNThRKzNGdThCYzJBWFIxcWdRZ1JxMkw0NlNzSTZ2ZTl3WDY1TGdJdUh6UEdDMQppZHZiNFRoQ3UxRVZTZFVZc2FNK0dzbjh0ZCt6aWNqSzcyeHQzRXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdkFJMzUxVkZEOHZ2anpLNGRHNExCL1NlUnB6Ujk0RGY0ZXdxK1I5ZFJGeE1OVzY0CkhwblZxMWg1RXQ4NUZERWNsM1dNc1kweU5zTmZPNHZvYy82aWNiVDl3dnExL2pZVUxQbG5DcWdreEp2NkNhV2QKUm5SeDlQREhCanByaHowaHZjTDRhM1hldkRZRThHVlR4M094WHdOWTRKM2s0cFlRMEFURThkV1ZYM3VSdHpuMApyRnpGK01ndlZ6RjdLMjB2ajhHQi9hczVzVXF2aDVTS3NBMFdHTE5LTFVtcUhuY2tQRHZwaEhFTjlkOGVLVjRqCjNlekd0UlU5QjVyT0xBNVpmM0dVeXY5U0RFNENzZHF4bC9yMlNjQmF4RzJrK3ovUTBENFhsbUlMSDZWRDVRODMKeUNNYlFHL1hIOFNTeHEzenR5M0M0a0h6c0pxTjkvVlRyQVl4a1FJREFRQUJBb0lCQUZVT0o5NW5URHd1UmUyaAp3Nk1nMmFxNnR4UTVCQ0NWMUROd1ZheW96TmdOYllqSzAwODh4MWFpU3Z3SHN0bjRzZmV2Zlh3aDViS3l4cFc0CjRPd0JLZHFKU0RoNmxmVXc0QVhNdXhvdUladzArSFIrMFYwN2R3YWFHMkFzODlLV0RIcStCd2NPcHpxOHNaVlUKTWdmTXhsUzJ2Zkc0WFFGSlpNZkhNSlk3eXowTGNyYmdaM2NZTDAvVUoyYlU2L25RaGx2YitXdVdUUGcwOE9QdAo5N0pQWWtJNElaaDlSRWV2RDFuZFptakttdi8zWEtUUFpDRGJvdUZ2aXRJcklnTGhGNzYrczk4eU9ZWGlWMkJhClNnYm84VlkwbXpFT09Tby94dHRqRDRzUHJ5U3NCNkcxRTRMLzZXWkYxUG1DTlBscFRyMWlab1ZTdmpWRHN6TlcKNTFuWkpmRUNnWUVBMVZMM0tSc1BIbUY0ZVNBOXFsVzdzU080SDM4UVVQYTBqbmZIUlFyQndscXNVaURkQTVscwpyeW1KMm45c29rcGt3aTdYQVlJaFAya0U3dkM2Y2ZqU3VHc1RBSXdsS2cwd3ZpOGwvbXJhOSs5TktWQ2hRRlF5ClZJdi9tbnJWRXVzUSt2WDFYTTRnOXlXdHlzVHBHME1tbXpVdmhLbkFQUWg5bTNZQjBURFJuaFVDZ1lFQTRaN0UKSzE2K1d2cHliK255ekc3NWgxMG9JMDJ4bzNmakJwL2IwTWI4SEZKaEhQc2ZVcnQ2UHZxOHcwMmtCUkpOSnpacwprUnY3QlF3WXc3V0VESGhyUzBvK2REYUNzNGJiTDhnNVZEYkMzSHowRHJnZ2lxeVdlaWlMdVQ2dWtHWnNneThCCm9sV21WazJXSWIxQXVmVmNrZUNKd2YzMGNUWGoxZTEwNkNUeG9JMENnWUVBcFlFdTNTZHZQV1RsOFNQQWRBejgKQjl6c2x4TWY5NURRV05BNVBDbXlWalcvQ0NFVEdCM0tvc09aZm5ucU1LZURNTnppVnZzOURGTlFUb2xhUGQ2TQpyaVAwcERJWEMxOGNlQkZnYXRsQWRhZWx0KzRralNKRndpNno2b2h1RTdWb2dTeWVacGhPSHpHT2VvajNTZjE1ClVHV2RMbEg5SWQwYWhxaXhsRGxLQ0ZrQ2dZRUFqQjJKUGxYc2FadTNqZ0VBSkMyWEVaV3M0NS9RZmZCcU1TYjkKNEQ1ek96TjkwLzJ3aWpTYnlwajB1V1Z5UXlRR2ZoK3lkTHVudkk2eW9uZ0x0YUxqSHpMUWJtT2I3OW9FTFR4dgpQZmwwTW5IM0wxengrSzBPRm5jdnJxOWF3WnFhTVMzMEdkaVBJSEcybHVWdFdROGptZ1NVQ01HcUdOU2ExYlJPCk1nMGZjZEVDZ1lFQXhuejhpWkhLY2lxNTA2QTZ1TTRVRGRjK084SUlVREFiOWEzMUExWHRvdTlzVTZSV2x3eXYKMlVVYk45SDlFMXVQVFlJUWQzcVh2dDdudGU5SFROcmdUakxsckFqeVh5amRTcmFxSlFIS1RWRlo3R2tWNGJaOQpLZDhCWFI2Q2xneVVLRHR5dGVCOW11Q0p0UXltSWMzSDlCOG1KZ3d5M1BKcGpjc2w4dDRyY1I4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRU0JiMUJ5NDQ3TlVVUUN3LzVUMElEekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJNE1UZ3lOVEkwV2hjTk1qY3dNekk0TVRneQpOVEkwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2FQV3VVRy9mb0hsV25ERktCOVNxVzI5Z0Z4OThYN1ZKTWJaQytLdDZYUkZpVGVLSTcKbGdEY1IvbzVkNy9ZbWllM2FlRmFKQ2RNV3QxaElqS2JUUDhnK0lwYWVuSktzZXR2ZzFHZzZ2MjVIaWpjQm9XbwpZbEFGTDh5R1JQWm90MUc1L1pjNWVyV216azRHZUVhanhFZU1zT1hIZXkyb3M5R1FDMkNGT1BVbVMzMUFyS0cwCjVRNEZQTHZzU0lRTnZnRE9acWZuZHhORm5JQWdCTHdqbFY0OUdtN1VGQkkxQTBTVC9SRU1OVjA3WE1aVFJDR0oKZDNaQ0lLL2xIaVhSM1ovWXFDY0dvS0hBdEhZZDdGWWsyUXZxbGU4RTNxNVVjWlZMdG5BOVZRdUdzMGtTTk1XcApHNDBMNitBRElYUGthM3RBVFRmb0FlemtTZk1hbGNPeXM3WmJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvdVBzZGJabzNhSUJxVm5tUFl5YjBGTjJFNnN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUS9Dc1JVUzlKZDNHOHY1dE9NUjlXdUI1M1JPRGM4ZVAzakl1NHdTN1B5bUFUbjIrMFg4ZnNlCktaUUt4WDZkUmg4TnR3bmhTdXN4YUtQTTFmOTlMV2RYRzQ2TmNpemZTWE0wL2Vqa2lRb0JVSlNOd2I2YzhBSlgKN0pGK3BLRzByUk1EVEprYUlnTnhOS3VMVUUvNmlzSnV3MUFhSTJpZTZlYW5HZEZTVjhNNTR1aWJHa1VxUlZJTQp5cjBwZXc3Yzgrb3FUSmoxOVNWdUZpZkdOeDdzaEY1TnovejdhOTZzTkF3WnM4Zm1lTnlRb3dPaW5VeUdoNjZDCnlGK1gwYjJjbTBpdm16TTRQcTNtTStwVVMxTmpVdVhlL2pKK1owYUMwUGhXckRGc1l6N1pFZkVvVnNMTVEzTjQKM3I5bDArSWZJREMvekhFaTVVb0JlNjMxcmxldCtKdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYakNDQWthZ0F3SUJBZ0lRZmlKVWNrUTBvTFg1bWYzNHN2TjhjREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJNE1UZ3lOVEkwV2hjTk1qY3dNekk0TVRneQpOVEkwV2pBdU1Td3dLZ1lEVlFRRERDTXFMbk4wWVdkcGJtY3RjbkJwTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMSWFCb2dKZWF1V1BSc0wKWFR3M3ZMU01CQ2JyaGtKdk90NHVyUHMycncwY1NLM0RpanV6K1JzMWc0SGduck9POGVudVl3QmNlK1liSE44agpucDhmN0U1cTVnZXZBck52NU4rVnBxTEJCbkNXUkM1U2xjYWhHNjJBK1MrcW0wS05udnJDTmZPbzFEUzNvRTFyCnhVWmJ2SVhnYkdVMXdSUmFKN1lNVGN2VGVZMDdmTjBCTHFlM014WnJoSHE1NkdnT1NSN3FrOHdNU0xvZVhiRzYKZm9XSnRTZ1BZQm1xL1JJL3MzTm5Qald1Si92Z2NPOGxCQ29rVzFTUG5lUlFacHV4YWpaSy9EaTZQdW4rMnFjagp5Wi9zQ21oWng5M1RpZTBYZWpRQ3pIY3BUVG5tSWUzaW8wdWVDSjBRaWJEVXY5YWF3eVFhcUlDK2RiZTRRb0gvCjVXd0hCalVDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVUvdVBzZGJabwozYUlCcVZubVBZeWIwRk4yRTZzd0xnWURWUjBSQkNjd0pZSWpLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFvUkg4N29NL05JcE82dEM5Q0gKaEUxSWQzS2hFc1d2TWw1WUcwVTNBazlET1QxeVNqV3ljQUNLWWF0ellQYkw2b3JXek82a3dLRCs2VXRsYit5bApkRXNVM0hOTC85d0JWNFZZeXFMYU9Mdnpac2M4dU9jcUJWZkphMGZmTi9TL1paT3NPekxlNG5uZUVTaHlvQ29kCm1mVzhDSHZVZnJRVFBOVzArQ1ZMV1lhY1FqUFJyL09zN01TU1orWVdsTkpQUzI3bHdVdTJiWVhxa3JzNSt3TmgKdC9YeUVzeHdSRFFhTkF0NC9jbVdjUkpWVTBUVWd5MllBTnNwRUZGU2ZEOEcvZUxZQU02WEF0V0ovbG81RlVwSQpHWUVka2NVYWtHTW1XbEhaeDIwOGVNU0RIRXFVcnIvVU9HWEZhWk5QcWc4bFV5SThYZWZxamU5OGl5ZUN2OFBqCnhxOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2hvR2lBbDVxNVk5R3d0ZFBEZTh0SXdFSnV1R1FtODYzaTZzK3phdkRSeElyY09LCk83UDVHeldEZ2VDZXM0N3g2ZTVqQUZ4NzVoc2MzeU9lbngvc1Rtcm1CNjhDczIvazM1V21vc0VHY0paRUxsS1YKeHFFYnJZRDVMNnFiUW8yZStzSTE4NmpVTkxlZ1RXdkZSbHU4aGVCc1pUWEJGRm9udGd4Tnk5TjVqVHQ4M1FFdQpwN2N6Rm11RWVybm9hQTVKSHVxVHpBeEl1aDVkc2JwK2hZbTFLQTlnR2FyOUVqK3pjMmMrTmE0bisrQnc3eVVFCktpUmJWSStkNUZCbW03RnFOa3I4T0xvKzZmN2FweVBKbit3S2FGbkgzZE9KN1JkNk5BTE1keWxOT2VZaDdlS2oKUzU0SW5SQ0pzTlMvMXByREpCcW9nTDUxdDdoQ2dmL2xiQWNHTlFJREFRQUJBb0lCQUJKakdYV0Y5T2ZBRlFMcgp3MjVxR3JOUkdVU2pZRE1QcExZM2YyaFlGdTUxa3hOTmNzSURMSjZnZ2JrdzVYR0lPblY2UlFKT2lnUVJuSU4wCisvVlZxR0hZSzNOem9BWENjWkNidEo1czZ5dEllRFdJRlNweWk1YjREOEhhRFRscndaUUY1T2dJOEErWlBaV0EKb05kSXRVZmxDWXZSWnVPaEF5U0tWS1hNYVdvcEkvM2lkNWhUQnNzc0hrSVdWWU04RlJyb1pFaGdrcS96TFU1TgpueXpBS1ZzajUyYnhFUFRnVXNUZ0ZMeGtBYjRZTWtZM2pib0tMdWVwRjVyeXVJSjExUkhlT0t2RFRncWtMV2JLCkJMc0hWUjR1d3NiN2FrTHBvOXVwREhiYXRrS1RvS094bGxlSVhkMVhIbkNCUTFHYW40dWJVZjVobHZnNk9PUnYKMlNUVUk2a0NnWUVBMUhqZTBFWjNoZVJtR3pjTFRzOUs2Uk80bGNsdmUwT1NDZXhpR1ZqZGxYUFQrekMvRS9qVQpvbGpmbEJJSmpGODRLNnYxUmFtK0tva3hqK1dQK3FnVCsxcXpRb1ZEYWF3NW9GUytwY2RWekhFeVpOYXJKVlNkCjFhYlJDV0o2MVdlWHg3T2dzUFpIM0xIVVQ4TWVqTXpkZlVNT3Nidzgzenc1Smdtdnp0YlV3Z01DZ1lFQTFwYVgKSnFldElkLzFLY1IwUllwNTljTVpNOGpFTUF0bXE2Vnp1NVFRNm1HZ0sxM2t1YnNCbDhGYkNGVm9TcmJYb0tpKwoxOHFqSlpuTlVpeXNLWGRzYWtETEtZdXBVRnpKc04welNqOS93d1FaTXlNUzJ0djZqejBGM2dZYm53djVCZ2VmCngzWFpWYk9BeXp2a2hJRW5HR1FuaGhwQ1JrYklpL3g4RWQyUS9XY0NnWUVBb2ZsM0d0M3RkalAxSnlBaVRiVTMKalZITWNOdjhVY0xrVFE1WWhxdzVXQnJSNm5keDQxN1pjdDQvcTFqSTBLc3lYaENjVGJ3bVRiVURCSWpqNXhsRgpDbVJOcmhON25jNStxOXlPN2tCMUJ3THdnUEVwemE2aEdHUXdqVy8yNWtNdjhUemQ3cW9CaEp4SWwzblBDMVdPCk1GVHptY2svdW9ybG9qcldQTitIbUZNQ2dZQmlxOVlPNFRVY0NYWWE0WW14WEU1ZU1uckpNL3o2TnBQY1EzVG4KQU51U1dwZWl1VWJ1SEU1TU1JMmlWRnRqVjVYbyt3N2QvUUJ0enIzNWxpOEgxakVVM254TXV6cDhpRjM1cEl6cwpEQ3k4U0lzcDEydlpGU091YjVuZUVLTHN6RDJTaHpqeUozOXJCK0ltRVlFdmFJL0lpRzBnSGJ6eHdhUi9zZlorCjVJbkI2d0tCZ0RSMngzbDUwL2JtbDNzekJwSXh1SDR3ZUNScVo5RFVuYXk3c24va1d2aGdlZDdFZHIrY0daSzQKSElOek83K0lYakFCcjIyK2hqM2wzdzcvU3N2WGtuNWtTQVE5N2hIUjhGbm5mL0FnRzJ1TnhiRWVUd1ZpN2hxYwppOE40WHhpYXJnZUlzTi9xU2UwY21ENE50VE9lN0MrM3hTMGhZVlNkTThINmVvWEJEcS9UCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 24387aea92b212adac246ab6f9bd75923041207d5b86e5c3c032474b25ebbab0
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
