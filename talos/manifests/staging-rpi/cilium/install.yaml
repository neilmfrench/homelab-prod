apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.224.0.0/16
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ldVB0a1lQeWExSU5wV043S01ySzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qQTFNekUwTlZvWERUSTNNRE15TmpBMQpNekUwTlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TGo3ckJhRXVQT2NMVWYzaDJ1Rm1mN0VxSHdnUHJXNlA0TGZWUmpFaGh4WmgxZ3gKSlFOL2puWXFnWHkwNU5icDZ6MllBdGhSQnd4Ym9IR2U0dEEvR1J6ejhIYndTT0t5NStqNmhaWitYTXVMV0U3UApKd1lBUGx1YjArRVRMcGpJbUQxeXJFT3o4RHFCM0hCN2ZNVlRzS2Q4a1JSTVU2MXZJL01JRnpoWm5NdUtvWmNDClZXUUJCcnI5LzQzM2prbkYrQTcwRWZBVkFrcXRPQnNTRWp1Z0EzcWY1VDZINldNcWtIRUxNcmRNUC9LeU9TUi8KeEFJVm53dTg2T1hnTWZucllod1N3ZWc1WG1iVllDN0tudlBWTnZjQ2lteVRvbzRhN21McDYzUlVpL1I0Yk9lUQpBZFJUOTQ4TW1KRUdWTjZvcEUvWVVWUVlzVDhXMFI3dFFVck9iUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFM3L3RhZTFYN1ZvWnh3RDJOOHRxSys5UGFkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhjT2NFTEI5MytXM2RuWjRKM05EV0h1b3A4Z3laOW1WVUo1NmVkVWJTWVR5Nko4cGdtbm16CnVtNjZmbjlad0J3b1RGTTlhSjdMTlBncmtFSWZhQlpSQ1hkY2RFb3B6QWdPeVNRdGhOczRpR0o0NnJodEZmOTcKb25ib3p0WFlKNWVCMEFpQ3JTVXgzOFpHdzFNVVRJY2tUNTFBQ2hoVWRXNmkrYmd4OWN4bE42QmFWU3lkaS9zTQpjZXlHSVNxaTA1T3NyRUtSZFRNQ2ZuekxQVGR4OGJDVmVneCs0Q0Vkb09xQUp1R0YwSmFEY1FleE9xV0o0d1pMCnZoQ2UvZ0NsTmsxOEVIQTgzclE4T0tnYStobzVhUVlZN2RpOVVGRkl1QzdZNkRTYmVmaXpqMjQ2ME8zaFBDRkgKcS85Z0ZDbHNQZWFqQTRITTA5Y05ZM1UyRG5VdUZQaW8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkxqN3JCYUV1UE9jTFVmM2gydUZtZjdFcUh3Z1ByVzZQNExmVlJqRWhoeFpoMWd4CkpRTi9qbllxZ1h5MDVOYnA2ejJZQXRoUkJ3eGJvSEdlNHRBL0dSeno4SGJ3U09LeTUrajZoWlorWE11TFdFN1AKSndZQVBsdWIwK0VUTHBqSW1EMXlyRU96OERxQjNIQjdmTVZUc0tkOGtSUk1VNjF2SS9NSUZ6aFpuTXVLb1pjQwpWV1FCQnJyOS80MzNqa25GK0E3MEVmQVZBa3F0T0JzU0VqdWdBM3FmNVQ2SDZXTXFrSEVMTXJkTVAvS3lPU1IvCnhBSVZud3U4Nk9YZ01mbnJZaHdTd2VnNVhtYlZZQzdLbnZQVk52Y0NpbXlUb280YTdtTHA2M1JVaS9SNGJPZVEKQWRSVDk0OE1tSkVHVk42b3BFL1lVVlFZc1Q4VzBSN3RRVXJPYlFJREFRQUJBb0lCQVFDakYwbUhRajZZaHc1awpvMWpxa3FUMm5CRGZlY1Z6N0NCMFdta2VaVFVRb05kTis0MGM2NVVFVEdJWFhPb0hDU05GeEFqbURJS1prTGh1ClEwS0h5R2QvRUdKUFlMbnVndHNSUjJtWW9LRzdGN3ZvS05Na2FpOHp0SDlKNzZ4Z0RIRHQvOHhseW14cUltV3YKVnhXZ2tmYnRKeENqWCtOR1BROWJCZC9zRVNxQU1IbUZpaVBXRTVDclpVdDJ5QW0yVlcyRFFlNDk5Vys4dUl0SwpUM1l4em1IdldVd1VINzlPVWxYVCt3amJOVWxXajNXZ3JSWXBMOS9VaXVvcWRNb21GREVnT21sdUJPTTdRR2NtCjJYMGlmRkh0Y1gvWGdzL3NKOTRvTHZ3MzhPaGc5SWVYaG9TYWJwdDN5MVc4Tmk2YTF4UFd3MUwvbkxnTGl6d3cKekRwYUZLZ1JBb0dCQU9vNHdVTFJGNC8zSTVlT0gwNVRKbUEyU1hZL1ZIU01UbGtZT3pkaXllV3AwS1R5TkVVagpUZUNWR2pSNURuQk9BUElJTERKU1FjMTY1Y3BucjVYMjhQSmlWRzNDN0lJc0h6cmJZQUJqeXZtc3N1KzMvWm9mCmxXY0FXSmtISGU4cXo1RXc1SGNUU1NMNlovY0xhb2trbG9JM2RzWllIQ1lOY2x2TjFkNyszUFE3QW9HQkFNNUYKTXplbzdxRFZmWU9rZmxXaWZWUjREMjcyREFHNU9hemVQNUhIajVSdGlheFkrbDdxWVpIRXU0cnNFM29Gd2I4YgpHVGJNSk0zWCt6WUwrOUMzc0VyQnRrZWxKa1ZxZmtTTXkrRU1jNUJWK3VWOWJQaGxNYTZHQ1cyZ1l1ZjcwVkN5CmJkTkRpd25DL2xlWjNIa3JqaVVyV0xXdGtsQ29Gb2txUThlekRtVjNBb0dBU2tQc28yOEE5Wmo3SkJiZ1BrbUgKSllLUkVIbE1JaGhLejEwcmlZZzlWQ0RnRXl6by9mTVB3bUlFaVJiSlNUcXllZ3UxVjg5VkpmNE4xbnZCNU44RAp6eGIyaGtjRUR0SkdwTGJpWGIxR29wdnJzSzY2THFCTkV2ZTlIK2h0eVdQZHBML0g4U21nU3dMeTdCWW1sWTJRClc0R1NtNWxjYzRSWCtsdnRzR05IVS9rQ2dZQlpBdUcwUGpFanRKMGlSc1RCdllucC9wbGlYOGtVb1ZLek40RWwKTG9IV0ltTEx2ZVhsT2ExN0V2Ti9ZcHFSQ0pUd0hBaUliaFhmd2psRXZHMGhSM05LLzBiaXFmRFcrYnFkYUVpKwp4L25DcW1mSHlwVlFwNUtGNW8rQkFEcE9NNHZERUF4Mm8yb0hmMTcwZkkvNHRnUDBKRDEyd1AwbjB6Rk9aYSswCktKK294d0tCZ0N0NmRNWStoRG84MG94ZGFjRlBpTGgxS05DMkNoRFRxTDBSOWlNWVlxMzdrYnRXYXFzS3hYZ0sKSS9xZysvV1lhTlZka3RTSkNxTzFGNGlQdWdncHhMb3RXaEVrb29rdUMzNC9oeko5azhzNmt1R1d1SkJvMGNFRgp0WkZwK0hEazNaNTFpYUNjOEYvZm54cXZCTVZoNWc3K2FXaEY0bytrMFlJOFdoZXd4dE4yCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ldVB0a1lQeWExSU5wV043S01ySzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qQTFNekUwTlZvWERUSTNNRE15TmpBMQpNekUwTlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TGo3ckJhRXVQT2NMVWYzaDJ1Rm1mN0VxSHdnUHJXNlA0TGZWUmpFaGh4WmgxZ3gKSlFOL2puWXFnWHkwNU5icDZ6MllBdGhSQnd4Ym9IR2U0dEEvR1J6ejhIYndTT0t5NStqNmhaWitYTXVMV0U3UApKd1lBUGx1YjArRVRMcGpJbUQxeXJFT3o4RHFCM0hCN2ZNVlRzS2Q4a1JSTVU2MXZJL01JRnpoWm5NdUtvWmNDClZXUUJCcnI5LzQzM2prbkYrQTcwRWZBVkFrcXRPQnNTRWp1Z0EzcWY1VDZINldNcWtIRUxNcmRNUC9LeU9TUi8KeEFJVm53dTg2T1hnTWZucllod1N3ZWc1WG1iVllDN0tudlBWTnZjQ2lteVRvbzRhN21McDYzUlVpL1I0Yk9lUQpBZFJUOTQ4TW1KRUdWTjZvcEUvWVVWUVlzVDhXMFI3dFFVck9iUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFM3L3RhZTFYN1ZvWnh3RDJOOHRxSys5UGFkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhjT2NFTEI5MytXM2RuWjRKM05EV0h1b3A4Z3laOW1WVUo1NmVkVWJTWVR5Nko4cGdtbm16CnVtNjZmbjlad0J3b1RGTTlhSjdMTlBncmtFSWZhQlpSQ1hkY2RFb3B6QWdPeVNRdGhOczRpR0o0NnJodEZmOTcKb25ib3p0WFlKNWVCMEFpQ3JTVXgzOFpHdzFNVVRJY2tUNTFBQ2hoVWRXNmkrYmd4OWN4bE42QmFWU3lkaS9zTQpjZXlHSVNxaTA1T3NyRUtSZFRNQ2ZuekxQVGR4OGJDVmVneCs0Q0Vkb09xQUp1R0YwSmFEY1FleE9xV0o0d1pMCnZoQ2UvZ0NsTmsxOEVIQTgzclE4T0tnYStobzVhUVlZN2RpOVVGRkl1QzdZNkRTYmVmaXpqMjQ2ME8zaFBDRkgKcS85Z0ZDbHNQZWFqQTRITTA5Y05ZM1UyRG5VdUZQaW8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUloYnY4VVUxL1hOTzBSdGxocW9KckF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qQTFNekUwTlZvWERUSTNNRE15TmpBMQpNekUwTlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXk4MHBEc1IvTGpPV1B4UDRWbjlXTGdzMHB4bE0KbHpKa0tFMk1hU2F1TDc5Y0Rjelh6N1F6cVE0dUNJS0VTN3lFUFZkL0srbG1CdEd2L1ZjQkVkU3JURFgrNjZ3TwpsWGswQ0Z2bjYzbFFoME9YVWw0Ym9YbDdSR3Z5RFJpVU13Z05xQmR0ZFRHbHZBU0ViLzlDYTN6OXVnYWtEcndICk15QXdLcDNqSm9ldVJXWjhVWUpCc0xxdEQ4YVFVTnE1TDFmUG9YelRGSHZ5TDZ0MnJiOGl4NG1qaDUySSswbWoKZzR5b2dMWklYcjBiek91Q014cXA1TUQ4dEh2Zno2OWVGaHJvTkYySWNuOUVNanNTU3Z4ZXlaYUlFajhtRjZKTwp5YkVqMWhWaWdDaE5ISG80U2dCMmgwYzlmRmsvT2NtMEZRRjYrWkErWHZ5d1ZVc1pUMFNpUWpLa2Z3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUTB1LzdXbnRWKzFhR2NjQTlqZkxhaQp2dlQyblRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRXFVelgvRk0raGpMYUV4cG1nUTRoZFYvV2lyVkE5TnU5TCtoNE5Sd3pOOGNKcEkKNU94NThMcTh1MWJMalN1M1BTQmF3bmdXUGFzS2lLWDRFbG52ZHhOam9MZFNYNXdSTTlaTnhERkpsVEdIWHZJVgpId0RCK3RMYmpjL3ZRa1B1Y1RGVXFNRTl2WFlCYTBKRmV0ejI0NU5HaUdxV1dRU216QTcwN3dsM3VXVWNnbzBBCjhXb0c2MGJWL2kxU2lMZXBZbWdPd3lBcjZ3RlVmd2dwS1VNamtlYk5zazd5bnZFQU5SSHVGeTZOaERvVFh2aUwKQzlWTnFKeWFsazRSaEpZcWVvcjhmd0I2UUQva2tuY3JGdUtiT1RNZnhyVlRwY21aemFoSVdmdHU2bkR1bHE2awpzQVRreFlOYjlSUnRKQjhqZDl0QWlTWXh2TmRRRzFQU0JsVW93RG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTgwcERzUi9Mak9XUHhQNFZuOVdMZ3MwcHhsTWx6SmtLRTJNYVNhdUw3OWNEY3pYCno3UXpxUTR1Q0lLRVM3eUVQVmQvSytsbUJ0R3YvVmNCRWRTclREWCs2NndPbFhrMENGdm42M2xRaDBPWFVsNGIKb1hsN1JHdnlEUmlVTXdnTnFCZHRkVEdsdkFTRWIvOUNhM3o5dWdha0Ryd0hNeUF3S3AzakpvZXVSV1o4VVlKQgpzTHF0RDhhUVVOcTVMMWZQb1h6VEZIdnlMNnQycmI4aXg0bWpoNTJJKzBtamc0eW9nTFpJWHIwYnpPdUNNeHFwCjVNRDh0SHZmejY5ZUZocm9ORjJJY245RU1qc1NTdnhleVphSUVqOG1GNkpPeWJFajFoVmlnQ2hOSEhvNFNnQjIKaDBjOWZGay9PY20wRlFGNitaQStYdnl3VlVzWlQwU2lRaktrZndJREFRQUJBb0lCQVFDYytPSjgyMkJTQjYzYgoyOWZWVjdMYk9BcFFBaTU1N25neWlyaHhiVGVRMDBWbDQ3Yjk1Z0E4WUEyWXhGNTlyeS96eDJiT1BiRTE0MkE0Ck0wRkJxSnBmMHQ4TVNyUFk4VWZnZ0ZsN2h5ODlZQlEzZndDdE9OSjIrdVd1ckpYSlVKU2tPWmMzUXd3eWF4Qk8KNno4UFozQk9UanNpbGpTOWJqZHJPN3p2dW1YQ1VUTFRzK0ZaZzJlc0VzYlBnNGFZZVdlZXE0cWhUQmR2c2huNwp4U1R3K3NkTG94aFBKSmM5UE5XenZxNjRkUTVCQjRyKzlFcjEwc1VaNEJqMmdWQW4vYzNTNjRndEdubjkremViCmNpZWFJRFd3V2JmdTdmaTBpb2QzT252TGtrSDl1MzVUZnhsQmdVV1RHMVd4ckQzVngrMEJMMmZrUHdYT1VUQjIKdWtPL0tOSlJBb0dCQU5OQm8vajRTeUg4cEtCSy9jdjdkZGIxK0xnSEJQeHhpQTh3bkJSRnRTbWVUUzB2UlhnZwo1UFQyemtmVkN4QWdSaWxBS2hzbHhqUzlLck1xNnM3clVFZEtXS2ZjWGtyMzBCTkZSY1FCbGUrekRrNDNyVHVKCmV5Mkxsb2tCdzByQ1NmcU9SVm1JQngzTEVHTzRFOHZlYW9OdmFuNldBQXhPTHpHKy84Nkd2R1BMQW9HQkFQYjMKVHZVcVRDMjdKazRFVkdhYXlLVEwvNDlnOS9jbldCdnNnd2xkTDBQZUFKL2RtWWlwWEo0cUZVU2g1ZHpkSnFGagpVLzE4cjZXZzd0VmNHZ3FYVW5taSt3TkFpZUNiMWUwV0NONlRhL3I5WFQ5K0pnYisxU3JGdEFPZ3F1ZzBIODhqCmlhRzV5YzlibDNZK1lhYkNtRjl6Q2gvTkFrOTMrY0pXeTNRQldET2RBb0dCQUlRb3NWTGt5ZVBtTUhzU3p2bFkKUTUwSjNlSUtpaVQvUlZYelhBRVdwc0gxaFdSNkNTU2d0M3RFRjBJNjFpUHRmTmI3akJ2Vm9zeUZkdndGSWtYMgpVZzkzUkVVbkNGb3Y4NXpLbmwyRGZIQXEvUTBUcWF6d1VmM3BNSEJmaVBQdzNlVUFNZ1JUbzlnUW5CMDJJRFJPCjNTV0Nnd1hVQXcydnI3aVlPMkhSU25QSEFvR0FNQ01JS3RVeHdBQW9lVEJ5MndUMGN0cW9WMlFKTVExa0tSMHkKZFZMS2Nhb0Y2U01pVi9iYTdLRTdRQU5tY0dSU3NVWlJDcW1RK3ZHaFc4ajE4bmFJUnRrem4vQ21iemN3dldOOApHeFlWQi9qMmdmZXVwZEpwN2twV3loWTQrY1dmSlpyQnF0b3hzYzhpZUpPMEtQTHBERUc2Q1hUR0xJTXdGV2NoCmhOejJPaWtDZ1lCajNMcVdybkJTSVZUMFV0cE43STc0MGpQVzM2ak11eHp1TG0xa25Pa0xYaUZ2Z1lFd1hVa1AKd2hxVVVUbEFMMU4yLzJmQ2VvRWlMOTRHYnN1RlUxVUtvYmJubEJ2ZHRXbVd5aFd4ZTIzYS9nR2VxUERXajk4Rgo1NHZtT3RXZ3JSQmZ1anJmc1NBRyt1V3cyMGpYbFoyRkM1YVdodlM5a3hwVnZsbk9zdUdKNWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ldVB0a1lQeWExSU5wV043S01ySzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURNeU5qQTFNekUwTlZvWERUSTNNRE15TmpBMQpNekUwTlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TGo3ckJhRXVQT2NMVWYzaDJ1Rm1mN0VxSHdnUHJXNlA0TGZWUmpFaGh4WmgxZ3gKSlFOL2puWXFnWHkwNU5icDZ6MllBdGhSQnd4Ym9IR2U0dEEvR1J6ejhIYndTT0t5NStqNmhaWitYTXVMV0U3UApKd1lBUGx1YjArRVRMcGpJbUQxeXJFT3o4RHFCM0hCN2ZNVlRzS2Q4a1JSTVU2MXZJL01JRnpoWm5NdUtvWmNDClZXUUJCcnI5LzQzM2prbkYrQTcwRWZBVkFrcXRPQnNTRWp1Z0EzcWY1VDZINldNcWtIRUxNcmRNUC9LeU9TUi8KeEFJVm53dTg2T1hnTWZucllod1N3ZWc1WG1iVllDN0tudlBWTnZjQ2lteVRvbzRhN21McDYzUlVpL1I0Yk9lUQpBZFJUOTQ4TW1KRUdWTjZvcEUvWVVWUVlzVDhXMFI3dFFVck9iUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFM3L3RhZTFYN1ZvWnh3RDJOOHRxSys5UGFkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhjT2NFTEI5MytXM2RuWjRKM05EV0h1b3A4Z3laOW1WVUo1NmVkVWJTWVR5Nko4cGdtbm16CnVtNjZmbjlad0J3b1RGTTlhSjdMTlBncmtFSWZhQlpSQ1hkY2RFb3B6QWdPeVNRdGhOczRpR0o0NnJodEZmOTcKb25ib3p0WFlKNWVCMEFpQ3JTVXgzOFpHdzFNVVRJY2tUNTFBQ2hoVWRXNmkrYmd4OWN4bE42QmFWU3lkaS9zTQpjZXlHSVNxaTA1T3NyRUtSZFRNQ2ZuekxQVGR4OGJDVmVneCs0Q0Vkb09xQUp1R0YwSmFEY1FleE9xV0o0d1pMCnZoQ2UvZ0NsTmsxOEVIQTgzclE4T0tnYStobzVhUVlZN2RpOVVGRkl1QzdZNkRTYmVmaXpqMjQ2ME8zaFBDRkgKcS85Z0ZDbHNQZWFqQTRITTA5Y05ZM1UyRG5VdUZQaW8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYakNDQWthZ0F3SUJBZ0lRZjBJT3dJRlNIUWRhNlBUYk9Cd3RiVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TXpJMk1EVXpNVFExV2hjTk1qY3dNekkyTURVegpNVFExV2pBdU1Td3dLZ1lEVlFRRERDTXFMbk4wWVdkcGJtY3RjbkJwTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLWmRkTmxCcGdnYkxVeXoKQUFOSys2Qms0V2FEek8vZnVmSnhiVmZWZ09LZ1pWSjZWMkRoYmg5OHVpd3ZEK0t1OEhJNXd1M0lnVmNSd0pHRQo3R2JJeVFDV3pQV0IrK0FKNVVnWE03Tk9jY2doYUxEK1QvVkQ3cDJRTkZFaGF4MUgyMjd1d3NRVHRCZnBPNEszCkFQVVIra0hqWWU5TTB0T0NUdzJHZGRuallObXMyZnMvcVRZd2NVRW5yTzlQSXhCRE1CVWVvdE9XRGsxSWF0U2MKeXR0Z3NRN1U4Nkd0Vkt0b2MvOGJoNDlpZTVLVml6S3p6aHpGOUZSc0FObFNucmpPelZ1b2QrQUF6cGNlUUxrQgpkRkViRTg1ZCtyOUFxZmJZN3FPdXd1T3VCVndiMEIvQk9FL0ZTWnU1ZXhsNWIvbE9xbjJvYzloWmgyREpoV09CCnVVdmlMRmNDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVOTHYrMXA3VgpmdFdobkhBUFkzeTJvcjcwOXAwd0xnWURWUjBSQkNjd0pZSWpLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdIa2VUZnBkT2R0S1VxQng5cWYKMnlEY3I5ZGUzZzQ1V3JDZnl3Rk5qeHhPZmZaU0lnWGMvM0Qxa1YxbU9venNtcmhaZEljSVlJZ3F2ZXcxVjIvTwpTUjNrc2FzMHVqYktSN3lEWjhZWDJDSkt0ekpLV2wzOGgvRlV2UEVvbHRLZWl6dkc2K1VGWmc1NkZielU4QStaCk9tWlZBS0lHT1B4MWZFZlFsYlYwdWhxM1FyQ3hMMUFLNmJxcS9Kd2NIeDVaN3ZWVmEyT0N5V3VZNEJUM2VIUkoKaGNXd29HWUt6QW0zcEYyZzlweUZ6RXFjY2RaVTJYL3pRYzhuOUJIYUxYNW1GZHN5RXZzU0RVeFNuOUNCeFRUTgprVnV6YUdKZWRmcjBzS28xVEN1TjZpSk9vbXRwdHM0ZVl4U3VmbTA1a3poUWwwQlVyV0xWdWV4bFFxZ0RRTzBvClRCQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGwxMDJVR21DQnN0VExNQUEwcjdvR1RoWm9QTTc5KzU4bkZ0VjlXQTRxQmxVbnBYCllPRnVIM3k2TEM4UDRxN3djam5DN2NpQlZ4SEFrWVRzWnNqSkFKYk05WUg3NEFubFNCY3pzMDV4eUNGb3NQNVAKOVVQdW5aQTBVU0ZySFVmYmJ1N0N4Qk8wRitrN2dyY0E5Ukg2UWVOaDcwelMwNEpQRFlaMTJlTmcyYXpaK3orcApOakJ4UVNlczcwOGpFRU13RlI2aTA1WU9UVWhxMUp6SzIyQ3hEdFR6b2ExVXEyaHoveHVIajJKN2twV0xNclBPCkhNWDBWR3dBMlZLZXVNN05XNmgzNEFET2x4NUF1UUYwVVJzVHpsMzZ2MENwOXRqdW82N0M0NjRGWEJ2UUg4RTQKVDhWSm03bDdHWGx2K1U2cWZhaHoyRm1IWU1tRlk0RzVTK0lzVndJREFRQUJBb0lCQUI0bEF2NDIwZ0hZQXM1SwpCTytUejZKUmhUSVJJYm81UExVOGJrYWpEaGFDWDdtaEoySUxsdXVucXdoRWdzbGRUMzR6RHlvTTBicllJWjk4CmlXVmFibWxuNmIxMmp4QWFXdXhFSC84V2NMR0Z0RFdWN3lFTzdSYXB3WUVONEIzUEhtaXNaS2dvdGRJN1ZhZ3EKeHNhaE9rcGtEQ1BUTk1SVWNVU1BINTJhZ0xzUU54MmNwSlMxT1QwS1RBdy84aDJOeERlanB3M2t0dFlDeHh3Ugo3S3hOSVpGU0Z0SnQ1ejU0Umh5bko4TlhhQ0hGSzdjRm12VGNHYW5uRE5VTjBjV0IwZjBuT1JpajZBdkZGaDRZClQ3ZytRWDRHUXB5MGVIZGJocTdjOGFBVWpaRFZkeDlxem1mT2xEbUpZMUJwZGxjZkx4QzNVaU1aVUtyZStSQloKbStVSnBia0NnWUVBeDBOZ1k5OGRreDZ2eUNlcEpnczNUS1UvWmZ0L3VlTWZwVkFRN0VZWWp2bXoxYWdpWXhCQgptYjdUb1o0MTNENGY1UU5sekNPRERXV1hRYjJtUE9hTk02OVRmdlJFTkRLbXBMWlgxR0xTZHcySG8rUjlLOTVoCmhDaERWdThSVGNCV3A3TDhUdTRsYzBWSEJxbzVDekduNFhCcEVHZ0VvK1k1OHl4bnUrK3o2NHNDZ1lFQTFid1UKeGYxMk5TaCtOVTd5SlArejMxcVRYRWtJdGdOaEtoYXZ4TmFRTkRsN3ZrK3NKbVN2Yzg4L1BwbFlBaHE0azNKaQp6OEZjU1RjZTd0WEV4SklzWmU5T3g2UjNYYXU4R2UwWWI3R2V5UERmbzNqWWpRbjFTcWQ5ODNKRThPd3VNRnhYCjlqejU3VkRmTjdYV1AzamVIdFV3VXBmUTM0SVNHd2xHeUI2a2krVUNnWUFobFB4WXVKQithK3lLR2cwS3lWY2YKaHJZQmxQbzR0TXR2aStmZU9nNEhncFBKVFZYR1JrWVlDQzRZamRaYjhPaGxLMFpydWd4ckpKVHlVbWtDMklReAprcm5LcXBZWUNmVkZ5eWxRTlB0dGJ3MU9GTUwzc3JuU2tRcVFTeWdxWjJEelVGbnZYM2xXVFBXa2JPbkNOak1wCjdrejJvK0VzVWkrd0NPck9wSjQ0OHdLQmdRQ3Z6WDZBeEZUQXNNZnU3VHE3T0NBcHJZVGNPYTZTbUFFSjc1TXcKSXhTR0FHcEtSWnBpRWh0RzlNY2VwRjhCakIwYUd0SXY5T29GeHZNSW5JaTI3MHpabzVkM0cwNmJtN0NpMnFSbwo2djZpWlk1dUZlNTVSQ0doQUZmWE1MeUlOcHhmWnZWck13aVlMUmNONmVHS1g4N0VLYk1QbkpSUDQ5c2twZUswCnBJL1FDUUtCZ0MxTDUxb1MxM2hkTStEVW80L2xRR2VGNGg0SjdnbFE3d010VlpKeUh4SlNSRWhQRytyK0RVNHIKMlhPa2xHYjRSVkU1R0paME9Pd2YyRzd5elYwZHhDTytrVFhWMCt5aVg1dGwxTllDaS9nT3NjUDVuZzZ3Z1MzVApmR0J2VWdGWnA1OHRPYUxsa2tkaHY5TWoySS9hUEt3V3l2RjdINzBkQXplRXl4V1ZrcE1oCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 194643ef208061ff583bc5bb441d10938e37d785e0123502c9d645cc150062fb
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.2@sha256:4dd8f67630f45fcaf58145eb81780b677ef62d57632d7e4442905ad3226a9088
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.2@sha256:48480053930e884adaeb4141259ff1893a22eb59707906c6d38de2fe01916cb0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.2@sha256:bfeb3f1034282444ae8c498dca94044df2b9c9c8e7ac678e0b43c849f0b31746
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
