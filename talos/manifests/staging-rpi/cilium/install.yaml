apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "2"
  cluster-name: staging-rpi
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  devices: eth0
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-endpoint-slice: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "45"
  k8s-client-qps: "35"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  l2-announcements-lease-duration: 600s
  l2-announcements-renew-deadline: 120s
  l2-announcements-retry-period: 20s
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  users.yaml: |
    users:
    - name: remote-staging-sj
      role: remote
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-remote-users
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: staging-rpi\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjFIUUJFYmZ2b3Qrc21WMTYxTnFid3lGWHF3M2N3cEJYMWJkYUllRUZpcXdrSzRmCmVMcVFUUWpqTCtRNHhyazNoSmlxbTZaL0loTTFXVlpVZ1Y5YllxNVFpZmVMdUZiaXN0WkpNY2hmaDJMdGdoRUMKbmtGTGdmMEpJSVJUcUY5OEQ5L2U4dysreHowQWszb2pGNUx1eFFJU09PMlpZRFhlaGxDUFFpeXRubkd3RzR6VApkTVdJSGsrYmxxbjRrdGpTSEJrcVdSeFJBSVhaZ0tiK3FoOERTTHZ0TzVhem9RS1I1TDdlSGtjUXBQcUdjalJBCjJpbWhEcnlkNlc3UUtmdmkwb2FDNVIrdzl2UU02ajVITEI3eEtmTGl0Z2pIZExrZVkrbVN4WDJXeGNWbGkwK0gKanU3UVZQVjdvYTVvcjRRcUFPTXNrOVpSRXFVckV1NFNlOXpYRXdJREFRQUJBb0lCQUFlWTdBTERiMzY2WE1zdQpTbVhnUDRTQWJtY2ozMk5FMW9CakswVVVXa3o3bkpzb2NJU3kwUDRGbkpLK3VSY2pmNXhuWVQxTmdjVGdRRGVXCjNpS2RGMEMzZlJYOWZEaUl5MW9rbnhkaEw0S1didVJzQ0VrRFcxcE90TTZMN1hRbWJ5SGcrYkJleGsyci94SmwKQUpCTTlidmoweFpVZFlrTnpJN1ZmdC9IUDk3VnkvOTNXUWpITlhRbGV1ME84b1p0c1dhSVh2cnZ1N2hVK2xpeAphUzEzNkZQYlplWlVyYk9OVVk3T2tGbEptZjBqV2txZG82YzhEM2M2SkFNSENSWmhaNUZlOG1mTkJwbkdKQmJaCkVxOVczS1dmZVI5VFUrQnEvdTN1RDR3RmZKNHNUWEJpT25CQWUwMXo5b2xBL0FkZ1JPdnJBNjFMN29jZUJ5cEwKWUxtUVVrRUNnWUVBNEliaFUrbEdreitqUW5jWC9Nc3NyLzJIbnI5b3cvdFRHMTFiRVlLRytJSFYybi9MSlBzbgpEZWd0RW1wL0VLREpCK0F0c1h4MzBmNWZ3OFBFa09KbTMrbHhmdlNRbVJ0cmI2L3lzN1VqRnVoTUxQS3lVRGI0CkNwNExCTythODRoOGFvSUVxc0tTV28vQUJjbkR4MXRNY1J3cGRLUCt5YUt0MjU4d2Q1Qk80S1VDZ1lFQXgrVWkKY0dQUDRkRnRzWmZVWFY1ZVJGcERLcXZZY3czSjhCc0doNU9xUk5sUDY2TUxYOEQ4OHFzU08zMkZYRzhvNUc2eQpXQjc3ZXgzclYrRGlIOGh3YXpsQzA3eXdhTHRnYkhabmo5SnRibWQvNGR3dEVxcSsrUUgrZ3RTMTNzTlU2Z2NvCnR4TjlUN3lmR3p0NXFJSDdlemhoeHcxeGdXUzlEY3p1WHA4RlUxY0NnWUFJUGl0cmp6YmVGUW9EV0tmeXllcTgKRTB5MVVVV2hYRXF5eUh5ZGFmTldrRDJ2cGQxcFlDY1E1YU14OStMdVUxak9CemJtT3pHUzdnbktBQmZwVWNhQgpGZXJxeEVQQ3V6VDRocmNjVGR3WjdURk92U0k2dTZuamllWFJxcEkvdXBVR3Uvczc0YVRKMmxrc1hUbm95YnRHCnM4ZjUxa04yVjVpV1pZTzcvL3BGV1FLQmdCVkQ3eEg5ekZPOXIrbkF1VHJsbXlteVlJcmRsVDFJTGo5NDRJenoKekoxZWNQNGtia1ZWaHBOYVY2bzBoRWQ5RytDUlZpL0J2QWN3KzZSeHJCeXRlaWd1QTBuN1BOa25kZTZUK2hoMgp6bVY4WlVKbDVmV2liSWFaQzdabllxRzhMZ0JubXBFL1pZbGlDNXNlREtjOGpNQmpFeVBWN2tsUnFqc1puaEk2CjRKb3BBb0dCQUtrZVNtU0pQa01iVkZyY1lMaTcrQWxodlREK0d5SGlzTjBhUkFEVEQ1ZC82aVVEdXc0cDJMT0QKTnp2RzVuY0dmNStHNVgrcjVQOUFaRHIyY2VlbmxyNmxRbGZGcndWZVRCMzVMaGxrd0N5SC8zQlQ5TUlBMnU3VwpGdVV4UTFTRVNNNmU5dEpHdWpkeTVvNU8wT29Ia2Zzc3pmTXJ4MXl3SExJaVRidGtndmlJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  staging-sj: ZW5kcG9pbnRzOgotIGh0dHBzOi8vY2x1c3Rlci1zai5tZXNoLm5laWxmcmVuLmNoOjIzNzkKdHJ1c3RlZC1jYS1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5rZXkKY2VydC1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LmNydA==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: cilium-clustermesh
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lSQU1kZ3JhaCt3eXVMZTcyd3AwUGY2ZTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVeU5URTVNemN5T0ZvWERUSTNNRFV5TlRFNQpNemN5T0Zvd0hERWFNQmdHQTFVRUF4TVJZV1J0YVc0dGMzUmhaMmx1WnkxeWNHa3dnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2VXMC9Sb0xZZ3dxQlRkMUUrTjBnWjZicllzY3VwOHdBdEdCZzgKb1BEUFBCSnQvZkZNUWRET21HNzNrK2d3MXNFeEdNbVorWTZjZHl4OVBJU2FndHE1VGpCUFdjM1JsS3dvLzFSNApGYW40cFVYWGd1QUFIelBONTVRdWFDdGc5R1dTTjVLWVlrZ052Rmhtc0t2NS82T3d2MlFDRnIxL2t3OUthd0pRCm1ZZWl2czFBNVlTTVpPTlhBQWo2azRFMnNxbzZpWTZ1NUZjTkxPbEFxa1JTSXh4V1BwWUJZc2xuODZ2UmJpa2QKaUswZFJRcUVKaFlZcGZtOU1yaFlKTFRrN1BWcFFGOWJvTDQ5SDkvUVNlRWU3bytOd0MrVkFkWCs0UXJPb0JsSApWVG9UQWVWUDlYclFxMllUb3hOd2FjV0dpQkNHQ1lkR29hZFM2T0lGZHBQK1JUTi9BZ01CQUFHamRqQjBNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVXpQOEtKakFVQmdOVgpIUkVFRFRBTGdnbHNiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQml1dUFCQVNCQU9mUkJ1CmdWdGpXeCtSdFU1M3NIZ3daVE1xT0M4ZzRTYWxJZnlmMzV6VTFXMkRGMVZUQXdVV2dqUUJCNTJjMnU3YURCcG0KR2NSQm5jVGRJWmhsZlc0VFdsVVAxZFNKdzk1eVpPQWwycmRGWFBsRi9oRGw0dS9FV0tTS2pka0oyM21FZnVIRAp6clcxbmZFSVJ5TWZPOUVNK3JWeVhEajhJd2lMQlNQZ003aDhKbjVacHp2RDVOTXc3bjdpMHkrY0RLUFhOYnBVCmpCYlFjQ3o1c0dKQ253VXE2UnNXTS85WUk2d0haUk4zcklRKzBTdkJMV1JVWnVxcDlCdjl0V1hxaFJrN0kzUHgKa0ovNDBtNVZZdEdkTVUxcmxmaVhkUnhuYUkyZ3krY2NDZlNwRkUxNkdoU0w5YlkvMUhzUnZiQTY4TkhvODhBbQpIZ3NXdDhVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbmx0UDBhQzJJTUtnVTNkUlBqZElHZW02MkxITHFmTUFMUmdZUEtEd3p6d1NiZjN4ClRFSFF6cGh1OTVQb01OYkJNUmpKbWZtT25IY3NmVHlFbW9MYXVVNHdUMW5OMFpTc0tQOVVlQldwK0tWRjE0TGcKQUI4enplZVVMbWdyWVBSbGtqZVNtR0pJRGJ4WVpyQ3IrZitqc0w5a0FoYTlmNU1QU21zQ1VKbUhvcjdOUU9XRQpqR1RqVndBSStwT0JOcktxT29tT3J1UlhEU3pwUUtwRVVpTWNWajZXQVdMSlovT3IwVzRwSFlpdEhVVUtoQ1lXCkdLWDV2VEs0V0NTMDVPejFhVUJmVzZDK1BSL2YwRW5oSHU2UGpjQXZsUUhWL3VFS3pxQVpSMVU2RXdIbFQvVjYKMEt0bUU2TVRjR25GaG9nUWhnbUhScUduVXVqaUJYYVQva1V6ZndJREFRQUJBb0lCQUVXZmcvSjRwRnEyOTJKNwpIVDhyY3duaGw0TGFlTjdadGdRZGlkcHVNRElOQ1ZWT3h4NXQrVzQ3MnQ0REs1ejlicWMxYkwzRDJRMjEzOXVZCkZmMFE5elZ0eVJPNk9pR2hLaWhFU2xFWnhVZEs4dkFUM0lSeE00ZWQvNnAvcGtMVWNTdmVQeGU4YmsyTHQ1bysKcHY0ZGhVeWFlVS9weTVzaGZ5R0s5dE9WRE90aUl4N1hsTHdoTnk1cm1HR09KZCtIeTRnSXVOSEpUeUdSMkh1dwprWjNVR2VwOTdkTGM2Mmw3ZWRhOHFpcEFmOHIyMFFkYWpVVUhPSERwQjJiaUpTNmdIM0hDNXFTcW82RVU4eXpBClplajJKdmJsZVkvNEJoSFYreS9oVlhiaHN5am1HWjFnQUdLeHlLc09PTzd2VXZISGt6WjRGRGFLaE5kRjduNE4KcjhDZG9pRUNnWUVBejQwVkwzV2l5cjlsUFBkMEwrY3ZnSENrNGF1M1hZMFJJSmJOakJVM1dhaWw3R1dXR0VvMApFd0pzMkVhbk9xcnYrUmZ5TWdGd2NYeDc0RW4vanZ1M2RmaDN2ZjF2emJjVnpKUTRpTnBadFdHcmkwNDNSbE5WCnJaeG1NS2FKWWNiZ0JCVVJiZzFQL3FWVHZuemhRQjJSQVkyTHNhWlF1cm5GQWhUUzFuOWY4aWNDZ1lFQXcxSnoKVUk5eVZpWFNiTXVBRHRKQ3VSQVB0SUdud0UvQUFYbkFkSVFvOFI4U1NodzE1b2JUeFZxYzRHZm9Eb2tXMHFTTgphQWUrMytnanlLWnl6SFJMVVZTbTc3dlN1WlY1d0h5RkxRcVFqWUc5NDRFS3k5cjh6NWhiek43c3N4NTQ1QVpECkZOTDVnSEZBYkhNWWZONzdxMjEwVGQxUG9lOGl5djJGU1I5Mmd1a0NnWUFWbVRUdkwycTFkcDF1YnNIa2lrWmoKTTFXMU5rMXFxdGR4Y01BTEo5b090b0l0eTVTSENwSEl1S1BqRGRjeFA4Q2hSMkNvMjRWOENkeEtSdWtWVkJTUApiai9ud1l2MCtHeUlVWlJnaVhoMGE2bVNZWjFXOEMwbVYvUTZjOW93RnFZUlJxLzlwOXovUHUwc0VZclBSVVJsCnlQa1VqNTR2RUUzMEhYNmpXN1g4V1FLQmdCZ2FHWDZzWk1oNm5FK3VnTnZUV0VacjAvUkxOMzhFbUVYV1YwaEoKY3AvbVhLUm1mTVE0aVBOR2JpdEd4eHpjRDhQb2FFYVpCaFd0R0pWTzdNV0w2Q3RlRGNkeFh0eGx0SU5yR2lmbgpzTlMxV05BMUFUY01pN3UyS2tYS2tGeTkrdDd3WXVDejgvUEVoZFdjRWo1K2FZSEszTm9xNEFPMGRZK2szd2laCjZFN1pBb0dCQUl6ajdCazZ2RkRPTDZyMUF4UlBSaTRTNEttVzVEL0IzR1RXcU1BakVONVZQOXA5QjlRYnZ0UzYKUWROMGVrUXZScExGa0xsU3llSHBXRWo4alNSOUxhemZNdDBzZ2dhcGpKMExaZnZXR3ZWR2VzMVFjQzl2T1F4LwpBUUM3d3d5T1gxMWsvV1U4dWZXcSt3eWxIdnMxSHkwbkZlcmNOSFNiQ21ycE92R3NCV2NTCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIRENDQWdTZ0F3SUJBZ0lSQUxDMThuU3cxUEVrVjV0dVp0VlJjNlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVeU5URTVNemN5T0ZvWERUSTNNRFV5TlRFNQpNemN5T0Zvd0hURWJNQmtHQTFVRUF4TVNjbVZ0YjNSbExYTjBZV2RwYm1jdGNuQnBNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6K2NMYWlkOUR6M000OHVHTEd5VlQ5eXhXeE04Y1MxL2lKVk4KQ3g1ekZhUVVTb2cxRkxENU1yVnZVNmY1cXN6Rzc0ZTUvUndGOHBzc3Y3N3ZtSFRzdHAxdmVmRHY1ODlLaEVjVAp0L1FWRE92QldvZW1vSmJwWnNjZ1QrZ0ZIMlZmY3ptekxnWVNhZDFGRU5uUHM3V1U5ak1yL2Nqa0pTT21GWGkrCnF4QWxGSHJrVXZJSVAxMUFYRisxSUorVGZhVGN5ZHZ4UWd4WUxuT2dTNEFkSmJLSHcvYnR3Q2RMY0RCSTdQMVkKUHErMldEWWd3RXRtMS9lb2VkYU15bVczSVJJQ2U4QmFsdFppY0dHbDBubFpTTnh1Y2NId3o4bEVSWDNjNG1HaQpkU0ZEM1FRMXhVZ25TQUt2QXJTSnZadmV1Tnlsd2x2SkFxaVl1ZDEwUGZ2elJIY3BZd0lEQVFBQm8yQXdYakFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU5cFZqZGx5V1ZkaG9EVnVybkQ5dGxNei9DaVl3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLcGxhQ2l2THVvV0ZId1RablpHN3FheWNGNkR4dkdEakE4K2duc3VNTDB2CmJoM2t4eUZkZXBhd01GejZnQm5WTFhIUUhkdVFiVks3dDQwdEZQOGxUZWFFT0JSTnk2YjlFaHAzWGVZTHF4QVYKSlAzKzFFcWU2bTVtOEtFbDVtWTZyaEpET1pHUXA5Tk0xYmVEdVNaZHZOc01QeXVKNlRQN05MbFhldmp2TVpGMgplZlFCQjRwblVaZ1ExMWlyZ2w1Y1VGRVhKL3pqbzgyVURycGRaM3VYdUZESks4eVROQlZJNDY5blN6bGxRYzJsClFmY1AyVytqSlE1ZDRMVVFIdzZYUHlLQ0g4SzlqUVkwMUYwRGhSNUF0Q1BPeWwwT0Rpd1hxbGZFNUFPQTV5OEcKRmhSRzA5N0o5OFhNU2ZXQk14eUNSdWI1WkZRdUJpRDcwVFJUejczY2RSND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeitjTGFpZDlEejNNNDh1R0xHeVZUOXl4V3hNOGNTMS9pSlZOQ3g1ekZhUVVTb2cxCkZMRDVNclZ2VTZmNXFzekc3NGU1L1J3Rjhwc3N2Nzd2bUhUc3RwMXZlZkR2NTg5S2hFY1R0L1FWRE92QldvZW0Kb0picFpzY2dUK2dGSDJWZmN6bXpMZ1lTYWQxRkVOblBzN1dVOWpNci9jamtKU09tRlhpK3F4QWxGSHJrVXZJSQpQMTFBWEYrMUlKK1RmYVRjeWR2eFFneFlMbk9nUzRBZEpiS0h3L2J0d0NkTGNEQkk3UDFZUHErMldEWWd3RXRtCjEvZW9lZGFNeW1XM0lSSUNlOEJhbHRaaWNHR2wwbmxaU054dWNjSHd6OGxFUlgzYzRtR2lkU0ZEM1FRMXhVZ24KU0FLdkFyU0p2WnZldU55bHdsdkpBcWlZdWQxMFBmdnpSSGNwWXdJREFRQUJBb0lCQUNMcURES3htd0Q2UWZSbgpjNHIyV1VUbUxTcThXa1F2ZmVGMElWSWl0UFVIYnhqdE11emNvNXp1ZDFtM05laUhKMG1HbzZkc0UxdWd6NjBMCjViVFd2Z0lWQW1tYUdzLzFNZkJ3OTFESFB0bkNwZUFNTStGNE5vNDZGcVVVcy9lSDBMWExGTm8venN2VWl3cS8KYVhBbXFIT0lPSFVRVGJBbkFuZE1wY2lZbDRHT3ErNjNITit0NDlaQllEc2NaMWlNSllCUU1VRVBFQyt3NE4ycgpoZFljb1ZpZG1LSHhhV2FQVDJieGg5SVRYZkNYdTRrRUIrY0c4eUtzL3J6MmNpSE4yS0Y5WVdVb3ZnSkhwWGxxCnJiSDdHM2NOT3B3VDhSK2NnZEhQOTkrQXNza3NtQW9CZ2Mvdys4Ni85Q3BZaFYwT3JXczJwR3lmMVhmc2RydHYKc1d3ZDVjRUNnWUVBMEF2S3g1L2NmNjJpTWlSL2VuR2cvUnhDT0NWN3JpZzBOTlVVdmVhenUrOUY4cTNMNkxQQgp4RkoyN01QRWFWdWVZVG80bXdBR25rT0lLL2dwWFUyL21zU0ZMVjFIVG9BdzBKVmFsYWZkamZZYkp5SEN1VTROCnZaL3J0UExkLzNBb1hSQW5PQzdaSGo5Sk5WU1cwVmR1S0dUelA0Y3dKWW05RHdZY2hnQ3hyUkVDZ1lFQS85TEkKUkpyNUJMRUp2eXVuZGV6bnJuTCtCOHRoVXdPcUU4NVZWVUMwcCtOcWtSd1VJZGRacllrTzhFSHpjUDZCK1VqRgpJZ1ZIWUp2UFdITFhrQnZNK2JZUllZd2crL1RsdFhEWTBaSFB0K252T2pwZElxSGxhWmRkWDFzVVhrc1pnUURUCnp0T0ExODVEbEkzdzBxS3l4U1hjcU5xWkd0b2N6RThmZHduU3Z6TUNnWUE2K2J6SURnY2hvb1VDRmRxVlNUVEwKeTREeURaNGI1b1cySEZrKzQvRTdhejYyNXBHUks3UFlCVkIxR2FIS0JCREhtd3VFMU9NTFpqVnAwWFZZWDd2YgpFYTUzQjZRNUdwbTc1enJBaGMrR2VLZUYxa291NFhOL3Q1L0hzYmxBdWZpWE9RY0ZKREtrSW1pTVY2aFJPNm1jCmhkRjJ4c25kT2toL3c4bStLdUF6SVFLQmdFZDNGc016bDhVYnYrRkx6S2hBMmlmOXI4RjFxMmFKYTRYRTZrbTYKbmIwWTVyaEs0OFRnYUFqMmRObmhVcVNLTkx6eSt6OFp3bXJXbkFIVmN5cXEyWVFZdkpwSGp4OVR0cWdOTWtTNQpPeEhocEJiY0h4Q0JzWmpoMUEvRFhkbEptWUpVUE5kV2RuUFRCMFlFc1BYbXhaSVZsYU1HRGlkV0x4MVVMVElQCjZIUEpBb0dBRnNOY0sydWNENHVVZ00rUmd6cUVvL3RSQkFqcTBjcm1zOHVWckhoN0RRUTdPd29HeURTd1VIbUIKRm41UGZpTVZhUm0zS0hDc25NN1M1V2tuckluOVFMeGhSY3g3OS9JT2Q1bmZ1Tll4dURFUzFDT1VmVGd3TzhTMApQcWVRQjRnMXdxODZtWHNlUlJFN3FESmErT204Ukl4MmxoYWNva0RiMFVhOGowL2lBTlU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ1ekNDQXMrZ0F3SUJBZ0lRZG81NURuSUg2bFFMVWdaTEJyckhmekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRJMU1Ua3pOekk0V2hjTk1qY3dOVEkxTVRregpOekk0V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeHczZXRVY1BUbkplZEpLTk45aTgKYU5rK2dJY2QyYVA1Zy9TV0NpYnNIUjVPbm5KRkoxem5CdnozYmF0Tk16LzJnWW1uYk9LY25kUWgvUmVoMmIyNwptZ3p5NXdNL2J2K3ZHbjAwQnFMRklrY2MxTGY3VDhVQ3JXODhNOWhaand5dVMzOW0vREVad0FvbWpDOGlWSjJlCmFTQk9YVkY0K2pyRVE0dUVkYW9ONjJ5VVVRcmRwSE1GMFNseUpXSmVEVGNVKzlZUXFoK1hVZy85WWNQLzhhM1IKb0RaanA4eSt0MHg2STJiZjVzdVRKZlhxUHcrUTFvcm5vcTVoY1kyS3pZVDYrTFN5RGtwRVhpWkFPTTdLY01UVAp1MHdsMWlGMGg1VHBMY0k4SEpJV0wyQll3NmVCWVBrNE9zTTJubWdkTk5YQWVVcDFIWkNCUittV3VuUUNLTWROCjlRSURBUUFCbzRJQkhUQ0NBUmt3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYVZZM1pjbGxYWQphQTFicTV3L2JaVE0vd29tTUlHNEJnTlZIUkVFZ2JBd2dhMkNIMk5zZFhOMFpYSnRaWE5vTFdGd2FYTmxjblpsCmNpNWphV3hwZFcwdWFXK0NFQ291YldWemFDNWphV3hwZFcwdWFXK0NKV05zZFhOMFpYSnRaWE5vTFdGd2FYTmwKY25abGNpNXJkV0psTFhONWMzUmxiUzV6ZG1PQ0RTb3VibVZwYkdaeVpXNHVZMmlDRWlvdWJXVnphQzV1WldscwpabkpsYmk1amFJY0Vmd0FBQVljUUFBQUFBQUFBQUFBQUFBQUFBQUFBQVljRUNnQUFDNGNFQ2dBQURJY0VDZ0FBCkRZY0VDZ0FBRnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVBjb1pIR1JkTFFOZkN2S1lhYjkwUXhacWxjQmUKNCtiaFdsQm5KcmxCeW15Nmc2bjBLd3JuSkNNQUpxN2ltWFR0aHZsWTltUFhJS2h4TG1GdkdYVlRocWI1WTJ5dAo3R1JqNWMvRUF2enFQTi9rNkwvaVgvMVlVTFk1RlNhUDhienpqRXhER2NxTTBsVTdFUXFkdHA5Mi83aTRJZGJCCnFmK0RHY3V5SVA0S0E2NlBWb0lQYzNnZlhkUnpRazFkbTl3eE16YXVuV3NSUXgwVS9MUy9JTkdtbmpselM3VkYKdDdPNUlPelBZYUNabTRrWU1mektoQzE0WFh2NEJlMEZ3c3BDek9FdzI1N3ZFNDF5Y3dQSkpYSGZ4a2NlVVhYOApsZ2VPd0krUXFoWFdZbzhSU2FTTHU4SGFHQ3lMM21OSUlmbnN6d1d4Y3Mrak9Pb00yMG1VbC9tNXRnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeHczZXRVY1BUbkplZEpLTk45aThhTmsrZ0ljZDJhUDVnL1NXQ2lic0hSNU9ubkpGCkoxem5CdnozYmF0Tk16LzJnWW1uYk9LY25kUWgvUmVoMmIyN21nenk1d00vYnYrdkduMDBCcUxGSWtjYzFMZjcKVDhVQ3JXODhNOWhaand5dVMzOW0vREVad0FvbWpDOGlWSjJlYVNCT1hWRjQranJFUTR1RWRhb042MnlVVVFyZApwSE1GMFNseUpXSmVEVGNVKzlZUXFoK1hVZy85WWNQLzhhM1JvRFpqcDh5K3QweDZJMmJmNXN1VEpmWHFQdytRCjFvcm5vcTVoY1kyS3pZVDYrTFN5RGtwRVhpWkFPTTdLY01UVHUwd2wxaUYwaDVUcExjSThISklXTDJCWXc2ZUIKWVBrNE9zTTJubWdkTk5YQWVVcDFIWkNCUittV3VuUUNLTWROOVFJREFRQUJBb0lCQUFSNVVsVWV1TUJabjdmZApCMkdHOUkwaXZOM2txNDRWdW1qMTJWMTNESDJIRGR0UDFEQVRUWG9CdTRueWZMUzNMbEl4QnR0U3FKUi9qUmdFCkxQWVk1cHVLeVBiYVF0VzYxM092OXJoamRpelVEbGpWbmNkb05Td3l3TmFsZVRYVzRoLytTQkZKQlR3a3ZrTU8KV0NZd3VMdkNKeUMvMFFsR3d0eUZ5VDlmeUJwUGR6dlBXcGduSGVWMWpOZEVIbFhhT1RoSWRPcnlOZjI1ZDVKYQpHRldnQmcyOXlrajdEM3pmc2dSVDRWYllpVmlZQ2RFWHMyUmdSNFBnazlIemozdjVoWXFiZ25XaTQ2QW5OZ1RQCnIyZ3VFc1UyYVMweHliM3hXZFVsYVFlcDZvSDRnK1ZpYlpTYTMvK2pVVk5yU3VaeGp1UmJrRU9YK01sR3dZcWkKaTVaekJzRUNnWUVBeWNmT2FPRThjZVhuSVF3MUZnMFk2MklRUlp3emlabzI3MC9Nd2FjT2lXSmQxek85cjJwMQo3blIxZjRvNWc5M0pRc2E1NUIxMERwdUcvUmlLSnlaazhzSGVTakw5czVUQ1MwTHJOMkVmMUpuNUI0ZnpvMEtuCkt4Mk9KOHI5Z01XRkpMd2FPa25NRGYwT1FIYXRqR0hnWVFJZ1lYVFR4ODJiaTYyd3lNR2hFN0VDZ1lFQS9JcUcKUDZyQ0lHdEVzcUVYYzgxRnhuTVNrMTYyNGh0YVRwUmV0TEhMVHVMNmJ4OHYwMW93UGlxejZTK1VTU0lMNk10UgpsOXF3VTkrdnN5aWgwSWQrVUNTVWhwZk9XRXZEM0tBVjcrUWN2LzR2eFRlWGZ1L3RRcFVkU0JqQ1F3M3FMRG5sClpkaTBja2JjOE5BejBiSUlGWjRENkZ0YmdkSDZJYi9CbnhMdEE0VUNnWUJPOWYrU0QwSUdHRCtBTVRTODhsY2sKRlhYa3A2R0xZV3ZKN21Ka0RhbWtuWGUzZFNudmNTdkJLcFdvV1VEMGwxL2czNzl5d3d2ZGc0TXBtK2JFTjBRZApzenYzc1VpU2M4NHNnWDFtYUgxNlJ0NnEwY3JId3BlRVNjYU5UK1F2OWh1S0tvbmc4V3dHdFZaVVo1eTJhTDdUCmQyK1FjNVZFaFBNdmo4SzBiUUZKb1FLQmdRQ21nWWJtTDJYekRnYXJaLzhZZ1AxQ1ROaXdoY0E2OENIb3NYYUgKMkxuZGQxWDdNaXJNUlNpTnRJWU9keXBqMWFqWWdrVjN3OTZDVG5kL3ZvaUIvdlBQVDI4R0ZzMGI5a2hiRE1tcAo4MUxwVzJTUHVZbVBUZzIyMnE0RnZSMUlMTUo3Q21rdmIyUDUvTExycTdxZXhhMEM0NzViMHZCUWRldGZtUmpHCkV5cG1LUUtCZ0RHRVBsSWhDLzRuQUl1Y3F0RjNTOGk5RE81UzJDWXFxM3JGSGg3NEFUY2lmb2ZoM3lheExzdm4KR29jTmFUdnVIMmdEN2s0RU9EVDFKR3ZtenJOMmh0N0hlYW9SekI0eFlKTTMvU3NmZnBYNG00L2lTc0l4ZkdLNwo3MkxUUTdCT0NzK3ZYZnEwWmZlWVdlUnhsSDVqK2VWSFVaU0hmUlJ0blNSNzJaN2NwYUFXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUwxUW1TK0U0K2M4b201ZUVTdmJ1Qm93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURVeU5URTVNemN5T0ZvWERUSTNNRFV5TlRFNQpNemN5T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhWZlZJVnJTY1ppWHdNYzZzUEI0UVB3NXBtdU8KSXBLd3BCNEMzVFJZdUd6eXVyQzJyUXl4Y1I4Q2JpcC9Mb21abFAxOTllV1JieXl4bjBFQVpnYXNaODZ6bXlmTgpDSC95ZjRsSFlHQklQcEV5MndKMnl6c3h2cjVNTHM0aG1TaDEvWDRHcWJmZFdjWHpVNnIwaDlMaE1WSkZVai9nCldMQUZpazUrN3d0UlVQdXhlVU82YWViN3gxZHFISnhubmZHa0JGbEZnSjR0SzByR2R6TERHQ1daTmdRSE5ZYzMKOUlINFh0QTM2a2ZlRTZ0ZjJ2L1Z5U2J3cWlIc05RRUNhNjZtUU1aMUFoY293Sk9PQ1Fsb3h0L0ZtcFN2TGVSMQpHUjZSb1p6bnVnT21JQkExSUFTQ3NOVHJRS292UXhwbk9ZRktnMG5sSW9WcnA1a3h6czFZM2JjQVJ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJsV04yWEpaVjJHZ05XNnVjUDIyVQp6UDhLSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSWlwc1o0SEdEcjM0OHUrbUhFd1Z2cVJuM1FCbThiUVo4M2l4Vm1iSUtkSzdWQ0gKMkdCUU5xTjlRV1p1eVhwajRXdEpZQzhHYzhVZDN4cll2WTEvckJldHE2Z2Z0UW1hMjFOWEhrNTZxRWk1aXJRMwplRjVpekNJVVVaOXozVGQ5Z09vbWVEcVNldnViUXYxOFU4THlGN2cyY25vY0JUYTR1MFZRYWVVNUlSTlRJUkFnClNtejFGQUxhTnpSRFJ1OW9xTGdjQ25TTnlpbm1FSnRCWUhQTEVFZVZCS0JFV0xrT3VwTnFCNS96SEpvK2hSczUKd1g5TWRFMkhWYlRsMGRIVmJDZnBlVzBIZ2cxWmNydE5yVjRoaG9veTFHYVFWb2Y3UmZnNTlSZEVJRWcwSkZybgpOZWMrVS9jc25scTJoVHVyUGpydlZuZ0xpOC9sbUJQamVGdHpIMzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeFZmVklWclNjWmlYd01jNnNQQjRRUHc1cG11T0lwS3dwQjRDM1RSWXVHenl1ckMyCnJReXhjUjhDYmlwL0xvbVpsUDE5OWVXUmJ5eXhuMEVBWmdhc1o4NnpteWZOQ0gveWY0bEhZR0JJUHBFeTJ3SjIKeXpzeHZyNU1MczRobVNoMS9YNEdxYmZkV2NYelU2cjBoOUxoTVZKRlVqL2dXTEFGaWs1Kzd3dFJVUHV4ZVVPNgphZWI3eDFkcUhKeG5uZkdrQkZsRmdKNHRLMHJHZHpMREdDV1pOZ1FITlljMzlJSDRYdEEzNmtmZUU2dGYydi9WCnlTYndxaUhzTlFFQ2E2Nm1RTVoxQWhjb3dKT09DUWxveHQvRm1wU3ZMZVIxR1I2Um9aem51Z09tSUJBMUlBU0MKc05UclFLb3ZReHBuT1lGS2cwbmxJb1ZycDVreHpzMVkzYmNBUndJREFRQUJBb0lCQUVXOTRiT1UvbFJwQWhCKwpHRTdaM1JYU1RhbHp6MXFHanVpaE5vL29aUVpnY25QcDZkVkViQjAzUVV1ZnR5ekNNa1hHUkZLM20rczNWMXFaCnhVTkpUbnF0UVNvdktiVzhTZjRxak5BUmx0YU54L1JBYmEwck1VeGd3bG0wUFlsOEZCN1BBQm5Rd2VodEhhNU8KOTNaYzMzcm53Vm5zK3lNOHFlaVVEeVg1MFBZV0xVa1NyNkZWVVVpZk4xYnZkb1RxZ2Z1czRlTDcyZm9yOGVvZAp0WnFGMXd2aDg0Rit1elBpVVZDUFVBREhtMmtORzlJVk4zVDViSHpsNVJJT1h5OHN2N3B0WG5SbVRlRnVZc2lXCk5veUZRMVRCMWR0VWkwTm8xbS8zUlNKcGoyM25rN1dRNWk1S05XTzg0OU1RRE05Q3QvZjVQcUVvNi94SktZR1MKdWcySy9oRUNnWUVBL1FzRGd5T3hMbTVMbWdtU1JWaDh0QXM2R01SUjV5S2JFeHNNT1NHbmxjeUlKeG5weWU0QgpzcDNvTytXWS9GRSsyL1pSU05GdUxEaHBwU2tLWnBwc1hyck0wYVFDazJIeGVPRFpDWjRWZkRST3lRbzlKcUtiCkx4Rm9BYTRwWVN2L2UwK0hHRDFvZDNtTGp0cmdiS0UwVGltYytHdmxYMWhHNUc0TVlEcFl4djhDZ1lFQXg2WXcKMG9EV0VKSy9xRmtWeEltQ25IUkQ5QUJydmZod2JwTjVyQThhUGZsbjVmTXp6SXRkTzJqREd1N0U2Mm1lS3IrTApDdERUekV5a3hPdG9PME5MU2VpcXVIaHBWZFFhSmxLY1UxTVBKaUVEUU5iQXdWRGF0TFk3ZndZeVl0akdkdTVGCmJINWNvNHk3K01iaTVLbUcwQllQd1NZVzJFVU5NMmY2M0RxU3pya0NnWUVBOGRtSys5WXJUSU5pZ3RGUEdqUmUKeS81SEF0RHdyd2RtVERaMzBrc1dUNWh6TVZ3VkZVa0VHbUhPU3lGQXZUZ3g2aTVjdGtwbEVLTENabmI1VitPVQpYRjRSMFBUKytUcU5mc2o0NTdaT05xNFA5eHB3SS9NYWV6d1p1akZwbjFSY0ZOR0gvMlVCNmQ4andkLzB6QjZ2ClRWMThoL3NuK1o3Mzh2QXpwKzFjV0tVQ2dZRUF4YjdGL0xtL1RRc002aUhTZmFmMXhpRWliVHM5ZkJ2bXdKOHgKbEVvaEkrRTBGMzZiZjYxSjJ0NFk0VVE5cHk0bGl4SE5GaGxncnFuN1NWQWhIUkc2TUtwUzdnUFYwVDBUNllGSgpkUDUvc3JSZ0ZJaWd3dGppeHJyNGt3Z0FRQWVXQzVaVkRQRGJzT0prRERSeDV5cENiVGhzd2xLSHJnNDIxUVBZClpPbGZINEVDZ1lFQXBSMXFiV2Flb2czY1JTeklKZUl0dTM1MU5WVFlrMHdSdUM3S0h0UVBIZ1Y4aWNLSTc1dnEKUmMxYnB4elN0MW9SVWV3aWs5Vzhvd3VzNG04cS9OcWRPRmNSVDNTdjlyb3FGZkxhUE83RHJJcFNLaS9VSm5SZgpmZ1ZobmRvTnRsMFcwT2ZLeUs5SjF3WGZNWXh6aGNWOXJXWWZDYXNqQ2l5SkE3bjJmSDVGbWxNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxWSGwyY1R6bTBUSGE2NHZtRW1uV013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd09USXlOVGd6T1ZvWERUSTNNRFF3T1RJeQpOVGd6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMUhRQkViZnZvdCtzbVYxNjFOcWJ3eUZYcXczY3dwQlgxYmRhSWVFRmlxd2tLNGYKZUxxUVRRampMK1E0eHJrM2hKaXFtNlovSWhNMVdWWlVnVjliWXE1UWlmZUx1RmJpc3RaSk1jaGZoMkx0Z2hFQwpua0ZMZ2YwSklJUlRxRjk4RDkvZTh3Kyt4ejBBazNvakY1THV4UUlTT08yWllEWGVobENQUWl5dG5uR3dHNHpUCmRNV0lIaytibHFuNGt0alNIQmtxV1J4UkFJWFpnS2IrcWg4RFNMdnRPNWF6b1FLUjVMN2VIa2NRcFBxR2NqUkEKMmltaERyeWQ2VzdRS2Z2aTBvYUM1Uit3OXZRTTZqNUhMQjd4S2ZMaXRnakhkTGtlWSttU3hYMld4Y1ZsaTArSApqdTdRVlBWN29hNW9yNFFxQU9Nc2s5WlJFcVVyRXU0U2U5elhFd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGFWWTNaY2xsWFlhQTFicTV3L2JaVE0vd29tTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZoUHhBMTlhMm5tN0JlTXlBdTRXR1BaTEZSOHR6ZU9mZkxkUko3U0ZMSFdWSk9ZUHFtVzlBCmFKVk9MUkdlSzV1cGYxYW9mVEV3UEFwQkhoSGlxVmpVaEUvc2thM3pZRTJJQ0ppUkZoRkVXVHF1b2U0WkJmNFIKMURTaU80Z3RBZUJJenJJdERCdlpYRGxOa1pNd2hrMmFTcDcrVENsVm5DbFZMTGFPbXdBK2RETXhRWDFRZ20yTwpSZzM1SEEra04wcVp2aFl1cXFwNElyWHRGWHUxUFRWMTUxVkE1UVg5VlZKRWFMRkFDdXhFaXJ1bktoTHNGUVd3CmFWcEYxQTZRandGbWY5a2cyZDQzclZuL1cxN0R5a0N0TDVpTkFlNFpGMFduZkt6ZDRucW1hcVlTaFBFbEVocWUKNFRPM2ZheW5tdHZ6UWFSSG1xMDJWa09xTlJ3ZW02bmkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYakNDQWthZ0F3SUJBZ0lRTW14NVdnL2J5S0Z4VVZqclk2SkpVekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TlRJMU1Ua3pOekkzV2hjTk1qY3dOVEkxTVRregpOekkzV2pBdU1Td3dLZ1lEVlFRRERDTXFMbk4wWVdkcGJtY3RjbkJwTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPMmpqcFlwMEJqYnkrUFgKMHhnWkF4aGVReXBXOE1YV1hLYmdpTytpTDJvL2llVHY3blorZlpnMytvOEgrMG5GTHVuaXFCUHNFZjBkUnh4RQo1NG5mZXYwOU1zaHdTYUl2d2I4Z2pzRzU5SGhHa2hlSDZVeGd0TUpBdGVPb3N0VStVREhUWTl4MzBlYUZyTDczClhIOGVnWHMzL3Erb3U3SVUzNkFvd1Y5VHRMQjcwTlpNc3hkdy80dXVVTGR6cHF6Z2ZRNk5zd2U2MnJXeVVNeGEKcHRmcVlTajFJZVJ2TWdBd1h0bVRwN0NmTVlFSUNRRjMyN2xDREJXbEJXM0VOLzZMSkZjdXc2ajNYQ3JUTm16TApnVzJnZytVS1JuU3gwdTR1VVd5K0JoaForMDRyUFlMQkd0bDhkdEFLb2t3bUt2dG9na21LNmhTYmQ5NGFMRHNJCmJEUlBBZ3NDQXdFQUFhT0JrVENCampBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU5cFZqZGx5VwpWZGhvRFZ1cm5EOXRsTXovQ2lZd0xnWURWUjBSQkNjd0pZSWpLaTV6ZEdGbmFXNW5MWEp3YVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUtpeEpqc2RlOEMzUzdlVHNQcDAKOWRIOUhsMjlNQ0wvbENhZW9EN2wvT202UXNibjYvc0JTN3Rpck9od2lRV3FON0V3alJ2aDdsVEFzTFNsaG1vcQp6U1pRMWs3bmp0TzFIazZIeUljblFlalZmZGJpUWZVeFhhLzJENmtTMk1zMWFQY2ZSMXhzbGZrTGYxV2F3VVUzClFSS3RGSk9Da2hsQ3g3QVFDMUZ4MzNISFFpRjJvV3VBTmNGd0ViNC81REtoU3lxWlRzVllMTG1ib0dYOVRvWjUKTHNyOHhML0ZzZWhIaXlxUEhoelJRQy9LYWwrcGhKdEhsYzVLQ2hoWlR3Tk5iK3Jza1pHdEhkMFdOMDJWVlhFUQpacHpLTUdxa0FtclZBUC9QaUxQb1VoTFJSWnR3MmVZdmJMRXlrUndQMjBiZEgxQUkzNGNkQzByNjZaTE0vMSs0CmFjOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN2FPT2xpblFHTnZMNDlmVEdCa0RHRjVES2xid3hkWmNwdUNJNzZJdmFqK0o1Ty91CmRuNTltRGY2andmN1NjVXU2ZUtvRSt3Ui9SMUhIRVRuaWQ5Ni9UMHl5SEJKb2kvQnZ5Q093Ym4wZUVhU0Y0ZnAKVEdDMHdrQzE0Nml5MVQ1UU1kTmozSGZSNW9Xc3Z2ZGNmeDZCZXpmK3I2aTdzaFRmb0NqQlgxTzBzSHZRMWt5egpGM0QvaTY1UXQzT21yT0I5RG8yekI3cmF0YkpRekZxbTErcGhLUFVoNUc4eUFEQmUyWk9uc0o4eGdRZ0pBWGZiCnVVSU1GYVVGYmNRMy9vc2tWeTdEcVBkY0t0TTJiTXVCYmFDRDVRcEdkTEhTN2k1UmJMNEdHRm43VGlzOWdzRWEKMlh4MjBBcWlUQ1lxKzJpQ1NZcnFGSnQzM2hvc093aHNORThDQ3dJREFRQUJBb0lCQVFDWVMvYm9zOWxpNVJKUgpiaE1pWVgxRFU3MzExNHd0TGtsb3hZUGRGL01OUTdWTEhKMldJVkM2aWoyeEJ1dDhCcndmTnB5RFVBcmpUYTB5Cko5Sy80SkxBMDBURmdua2VVVDc1RDVPT0FtL3oyVDV0aURQek9CTUFYMXB5a2I0eXZlSEZYUFdsNk1DRDNXMnQKWVhoTkc2N2QyakFHUWJ3dzBBSFZjZWtqLzlCUVBYMTJBTE9RZEcwTE5ySy9UWEFFQ2xUV0VrWE1PdGZDQU9iNQpVanMzY05WSnNMS0JvL3Y2dzFzTEViT2wxY1g5dG04eVczU1hoRW5ReG5EbDBhK210OCtiVGZJT2ptRWhDbVBPCkxRWXR6emtnRWdyc2hvZ2I4cVFlcFhXUGVPeno3NVp1L0R2bURIcncrb0xBZ1JXOEt1NGs2YklTWGJ5UWFHZ0UKb3BLcWxiOTVBb0dCQVA2anovei9rejNZMVhDUDJzL2hUS1htWHcxUmNObnFaRTNuRHY1UWdVa3JwWURuZHVJdwprVUEvZ2JIeWlyUkpGN2dFUWcwQ1p6dXRZNDdtWkRTalBrSmJvU2xzRytuWVhhQTZiU0toZkF1ZzZ1NEdBRUN5CjdJaDA5V0F3MHBybzVTVU54REdVNzJWQWN3Y283V3lWQlBaaVRxUEJyNi9BMUR2RDBQQ3V4aXhsQW9HQkFPN28KZjNITmg5R2lKZStrYmZPNE9UVUpoNElySStvNWwyY0gxYzV4UXJvTWVjbVVWUi9DUStJZUhhVmMvUjJTUS9LYgpuSkNoUEhZb0pWM2Fzby9yVVlaMVFDQWswK1A4cDlFNitkZCtWSDVSRmU5Rk1nb3E5RUZLRlJFc0lFbWpLb3NnClp2cU5Qckt0QVI2cmF1RnFLM3RmMCsxREZMOUxPdnBOakF6U1V2V3ZBb0dBUWMvQXI1aTJTMlBCTmtoWHV5WjEKa3VNSmFmM0VkdTIzWXRMMjh3K0hlb3ZIU0p1S0JFZWRJc2ZIRTJDbUxKWS9oUlhFcEd3Y2xqWG41MFR3WFJKYgp3dmEvbmw4TWo5R1YwUldJbzB5dExLdzRTN0JOWEd0aDZwcWYyRzZGMy9lVlVaQlBScWxCZmgrOEd2dWU4Vk5LClp3dGRXOEZ4VUxFN3FQNmcvN09NRUdrQ2dZQW1PckFDRHVoMzVDRjc2bXpwdmdYeGRiZm9YV3plMHg1bUR6dm8KVC9sa2VoQ1c4QlI3QTRRSFQ5aGdtTE9zSXJhYXdNblozdU1rNlNHcGxoQlN0VTRUWFBuSTZ2dTVGTG5wNGkwTwpqWm1KcVFJQWlxc0tNM3RvWXlsaDJSVEZrOFdBQTh4V3RYbGQ4QThvMERkSElNMGFiZWdrcEVKU3BnQW5BM2V3CnFZczY0d0tCZ1FEYjcxclhHbjBLWUl1QkphZi9FdnBHSjR6WWRkS2lGRlBId0RLaUdHQzlrRDFJTm1NdWZ2eWYKZmhKNytFOXJqRTBtY2FSRWtMWDhVRStQaGpmclo1bHpYYVQwTFpoY0xZSExuWUk2eU5Nd2xKQlpCcE9hcXFScApjZUpESU5FalRlc0FFSnZYMHh5akZZa2FnbnRLQjg3ZWFyaHpsUXJKSU9ONy9GODI1QU5ITkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/ttl: 1m
    external-dns.aplpha.kubernetes.io/hostname: cluster-rpi.mesh.neilfren.ch
    external-dns/is-public: "true"
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  loadBalancerIP: 172.16.20.75
  ports:
  - port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    omni-kube-service-exposer.sidero.dev/label: Hubble
    omni-kube-service-exposer.sidero.dev/port: "50080"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 8f0d58cf70ca6dfad165e5207d469372f67d5fc2713964d3507d9cc9c7e57df4
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.3@sha256:c97f23161906b82f5c81a2d825b0646a5aa1dfb4adf1d49cbb87815079e69d61
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        command:
        - /usr/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/cilium/clustermesh-apiserver:v1.15.3@sha256:da4573f8fe4415bdb786c4fdcbc3b518e5a485f930cd4292416eb80800cbd7fc
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        - containerPort: 9963
          name: etcd-metrics
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --cluster-users-enabled
        - --cluster-users-config-path=/var/lib/cilium/etcd-config/users.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              key: identity-allocation-mode
              name: cilium-config
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.15.3@sha256:da4573f8fe4415bdb786c4fdcbc3b518e5a485f930cd4292416eb80800cbd7fc
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9962
          name: apiserv-metrics
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
        - mountPath: /var/lib/cilium/etcd-config
          name: etcd-users-config
          readOnly: true
      initContainers:
      - args:
        - etcdinit
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=clustermesh-apiserver
        - --etcd-data-dir=/var/run/etcd
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        image: quay.io/cilium/clustermesh-apiserver:v1.15.3@sha256:da4573f8fe4415bdb786c4fdcbc3b518e5a485f930cd4292416eb80800cbd7fc
        imagePullPolicy: IfNotPresent
        name: etcd-init
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: clustermesh-apiserver
      serviceAccountName: clustermesh-apiserver
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - configMap:
          defaultMode: 256
          name: clustermesh-remote-users
        name: etcd-users-config
      - emptyDir: {}
        name: etcd-data-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: d28d5fa77490761e3ce4d1edf33187ccfd2b2da8e34f9c2b8eab9b513506dbe1
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.3@sha256:b9c6431aa4f22242a5d0d750c621d9d04bdc25549e4fb1116bfec98dd87958a2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    helm.toolkit.fluxcd.io/name: cilium
    helm.toolkit.fluxcd.io/namespace: kube-system
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostAliases: null
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
