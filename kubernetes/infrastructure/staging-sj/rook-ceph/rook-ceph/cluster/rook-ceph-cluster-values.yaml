---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  values:
    cephClusterSpec:
      dashboard:
        enabled: false
      mgr:
        count: 1
      storage:
        useAllNodes: true
        useAllDevices: true
        config:
          osdsPerDevice: "1"
      resources:
        mgr:
          requests:
            cpu: "50m"
            memory: "512Mi"
          limits:
            cpu: "100m"
            memory: "1Gi"
        mon:
          requests:
            cpu: "25m"
            memory: "512Mi"
          limits:
            cpu: "50m"
            memory: "1Gi"
        osd:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "125m"
            memory: "2Gi"
        mgr-sidecar:
          requests:
            cpu: "25m"
            memory: "100Mi"
          limits:
            cpu: "35m"
            memory: "200Mi"
        crashcollector:
          requests:
            cpu: "10m"
            memory: "64Mi"
          limits:
            cpu: "15m"
            memory: "128Mi"
        logcollector:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            cpu: "70m"
            memory: "1Gi"
        prepareosd:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "125m"
            memory: "2Gi"
        cleanup:
          requests:
            cpu: "75m"
            memory: "100Mi"
          limits:
            cpu: "75m"
            memory: "1Gi"
    cephFileSystems:
      - name: ceph-filesystem
        # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#filesystem-settings for available configuration
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              # Optional and highly recommended, 'data0' by default, see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#pools
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                cpu: "65m"
                memory: "120M"
              requests:
                cpu: "35m"
                memory: "64M"
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: true
          name: ceph-filesystem
          # (Optional) specify a data pool to use, must be the name of one of the data pools above, 'data0' by default
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: "Immediate"
          mountOptions: []
          # see https://github.com/rook/rook/blob/master/Documentation/ceph-filesystem.md#provision-storage for available configuration
          parameters:
            # The secrets contain Ceph admin credentials.
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            # Specify the filesystem type of the volume. If not specified, csi-provisioner
            # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
            # in hyperconverged settings where the volume is mounted on the same node as the osds.
            csi.storage.k8s.io/fstype: ext4
    cephObjectStores:
      - name: ceph-objectstore
        # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Object-Storage/ceph-object-store-crd.md#object-store-settings for available configuration
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              limits:
                cpu: "65m"
                memory: "120M"
              requests:
                cpu: "35m"
                memory: "60M"
            # securePort: 443
            # sslCertificateRef:
            instances: 1
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          volumeBindingMode: "Immediate"
          # see https://github.com/rook/rook/blob/master/Documentation/ceph-object-bucket-claim.md#storageclass for available configuration
          parameters:
            # note: objectStoreNamespace and objectStoreName are configured by the chart
            region: us-east-1
        ingress:
          # Enable an ingress for the ceph-objectstore
          enabled: false
          # annotations: {}
          # host:
          #   name: objectstore.example.com
          #   path: /
          # tls:
          # - hosts:
          #     - objectstore.example.com
          #   secretName: ceph-objectstore-tls
          # ingressClassName: nginx
