---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.32.9
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: ghcr.io/k8s-at-home/grafana
      tag: v9.0.5
    replicas: 1
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
    adminPassword: "${SECRET_GRAFANA_PASSWORD}"
    grafana.ini:
      orgs:
        - id: 1
          name: Main Org.
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth:
        signout_redirect_url: https://id.${SECRET_DOMAIN}/application/o/grafana/end-session/
        disable_login_form: true
        oauth_auto_login: true
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Viewer
        hide_version: true
      auth.generic_oauth:
        enabled: true
        client_id: ${SECRET_GRAFANA_AUTHENTIK_OAUTH_CLIENT_ID}
        client_secret: ${SECRET_GRAFANA_AUTHENTIK_OAUTH_CLIENT_SECRET}
        scopes: openid email profile
        auth_url: https://id.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://id.${SECRET_DOMAIN}/application/o/token/
        api_url: https://id.${SECRET_DOMAIN}/application/o/userinfo/
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            folder: "public"
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus:9090/
        # - name: Loki
        #   type: loki
        #   access: proxy
        #   url: http://loki:3100
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/12175
        calico-felix:
          gnetId: 12175
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/14837
        authentik:
          gnetId: 14837
          revision: 2
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
      # blocky:
      #   url: https://raw.githubusercontent.com/0xERR0R/blocky/master/docs/blocky-grafana.json
      #   datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-bell-curve"
        hajimari.io/appName: "grafana"
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"
          secretName: "grafana-tls"
    serviceAccount:
      create: true
      autoMount: true
    persistence:
      enabled: true
      existingClaim: grafana-config
