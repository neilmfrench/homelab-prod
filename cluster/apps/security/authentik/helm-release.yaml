---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      chart: authentik
      version: 2022.4.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      name: ghcr.io/goauthentik/server
      tag: 2022.4.1
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hajimari.io/enable: "true"
        hajimari.io/icon: "shield-account-variant"
        hajimari.io/appName: "Authentik"
      hosts:
        - host: "id.${SECRET_DOMAIN}"
          paths:
            - path: "/"
              pathType: Prefix
      tls:
        - hosts:
            - "id.${SECRET_DOMAIN}"
    authentik:
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      # log_level: debug
      postgresql:
        # host: '${POSTGRESQL_ADDRESS}'
        name: authentik
        user: authentik
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      redis:
        # host: '{{ .Release.Name }}-redis-master'
        password: "${SECRET_AUTHENTIK_REDIS_PASSWORD}"
      email:
        host: "${SECRET_AUTHENTIK_EMAIL_HOST}"
        port: 587
        use_ssl: true
        username: "${SECRET_AUTHENTIK_EMAIL_USER}"
        password: "${SECRET_AUTHENTIK_EMAIL_KEY}"
        from: "${SECRET_AUTHENTIK_EMAIL_FROM}"
    redis:
      enabled: true
      auth:
        enabled: true
        password: "${SECRET_AUTHENTIK_REDIS_PASSWORD}"
      master:
        persistence:
          storageClass: longhorn
      replica:
        persistence:
          storageClass: longhorn
    postgresql:
      enabled: true
      postgresqlPassword: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      persistence:
        enabled: true
        storageClass: longhorn
